cscope 15 $HOME/Documents/Programming/ChessStuff/Borland5               0000520496
	@/home/alwin/Documents/Programming/ChessStuff/Borland5/board.cpp

4 
	~<owl\owÕch.h
>

5 #¥agm®
hdr°›


8 
	~"wcdefs.h
"

9 
	~"exã∫s.h
"

14 
	gOffi˚rNo
[2], 
	gPawnNo
[2];

20 
	$CÀ¨Bﬂrd
()

22 
SQUARETYPE
 
Squ¨e
;

24  
Squ¨e
 = 0; Square <= 0x77; Square++ ) {

25 
Bﬂrd
[
Squ¨e
].
põ˚
 = 
no_põ˚
;

26 
Bﬂrd
[
Squ¨e
].
cﬁ‹
 = 
whôe
;

28 
	}
}

34 
	$CÀ¨Index
( )

36 
SQUARETYPE
 
squ¨e
;

37 
COLORTYPE
 
cﬁ
;

38 
INDEXTYPE
 
ödex
;

40  
squ¨e
 = 0; square <= 0x77; square++ )

41 
Bﬂrd
[
squ¨e
].
ödex
 = 16;

43  
cﬁ
 = 
whôe
; cﬁ <
bœck
; ( ( )col )++ )

44  
ödex
 = 0; index < 16; index++ )

45 
Põ˚Tab
[
cﬁ
][
ödex
].
ùõ˚
 = 
no_põ˚
;

47 
Offi˚rNo
[
whôe
] = 
PawnNo
[white] = -1;

48 
Offi˚rNo
[
bœck
] = 
PawnNo
[black] = -1;

49 
	}
}

55 
	$CÆcPõ˚Tab
( )

57 
SQUARETYPE
 
squ¨e
;

58 
PIECETYPE
 
põ˚
;

60 
	`CÀ¨Index
();

62  
põ˚
 = 
kög
;Öõ˚ <
∑wn
; ( ( )piece )++ ) {

63 if–
põ˚
 =
∑wn
 ) {

64 
Offi˚rNo
[
whôe
] = 
PawnNo
[white];

65 
Offi˚rNo
[
bœck
] = 
PawnNo
[black];

67 
squ¨e
 = 0;

69 if–
Bﬂrd
[
squ¨e
].
põ˚
 ==Öiece ) {

71 
PawnNo
[
Bﬂrd
[
squ¨e
].
cﬁ‹
]++;

72 
Põ˚Tab
[
Bﬂrd
[
squ¨e
].
cﬁ‹
][
PawnNo
[Bﬂrd[squ¨e].cﬁ‹]].
ùõ˚
 = 
põ˚
;

73 
Põ˚Tab
[
Bﬂrd
[
squ¨e
].
cﬁ‹
][
PawnNo
[Bﬂrd[squ¨e].cﬁ‹]].
isqu¨e
 = square;

74 
Bﬂrd
[
squ¨e
].
ödex
 = 
PawnNo
[Bﬂrd[squ¨e].
cﬁ‹
];

77 
squ¨e
 ^= 0x77;

79 if–!–
squ¨e
 & 4 ) ) {

80 if–
squ¨e
 >= 0x70 )

81 
squ¨e
 = ( square + 0x11 ) & 0x73;

83 
squ¨e
 += 0x10;

86 }  
squ¨e
 );

88 
	}
}

94 
	$MovePõ˚
–
SQUARETYPE
 
√w_squ¨e
, SQUARETYPE 
ﬁd_squ¨e
 )

97 
BOARDTYPE
 
b
 = 
Bﬂrd
[
√w_squ¨e
];

98 
Bﬂrd
[
√w_squ¨e
] = Bﬂrd[
ﬁd_squ¨e
];

99 
Bﬂrd
[
ﬁd_squ¨e
] = 
b
;

101 
Põ˚Tab
[
Bﬂrd
[
√w_squ¨e
].
cﬁ‹
][Bﬂrd[√w_squ¨e].
ödex
].
isqu¨e
 =Çew_square;

102 
	}
}

108 
	$GíCa°Squ¨e
–
SQUARETYPE
 
√w1
, SQUARETYPE *
ˇ°squ¨e
, SQUARETYPE *
c‹√rsqu¨e
 )

110 if––
√w1
 & 7 ) >= 4 ) {

111 *
ˇ°squ¨e
 = 
√w1
 - 1;

112 *
c‹√rsqu¨e
 = 
√w1
 + 1;

114 *
ˇ°squ¨e
 = 
√w1
 + 1;

115 *
c‹√rsqu¨e
 = 
√w1
 - 2;

117 
	}
}

123 
	$In£πPTabPõ˚
–
PIECETYPE
 
öpõ˚
, 
COLORTYPE
 
öcﬁ‹
, 
SQUARETYPE
 
ösqu¨e
 )

125 
Bﬂrd
[
ösqu¨e
].
põ˚
 = 
öpõ˚
;

126 
Bﬂrd
[
ösqu¨e
].
cﬁ‹
 = 
öcﬁ‹
;

128 
Põ˚Tab
[
öcﬁ‹
][
Bﬂrd
[
ösqu¨e
].
ödex
].
ùõ˚
 = 
öpõ˚
;

129 
Põ˚Tab
[
öcﬁ‹
][
Bﬂrd
[
ösqu¨e
].
ödex
].
isqu¨e
 = insquare;

130 
	}
}

136 
	$Ch™geTy≥
–
PIECETYPE
 
√wty≥
, 
SQUARETYPE
 
ösqu¨e
 )

138 
Bﬂrd
[
ösqu¨e
].
põ˚
 = 
√wty≥
;

139 
Põ˚Tab
[
Bﬂrd
[
ösqu¨e
].
cﬁ‹
][Bﬂrd[ösqu¨e].
ödex
].
ùõ˚
 = 
√wty≥
;

141 if–
Offi˚rNo
[
Bﬂrd
[
ösqu¨e
].
cﬁ‹
] < Bﬂrd[ösqu¨e].
ödex
 )

142 
Offi˚rNo
[
Bﬂrd
[
ösqu¨e
].
cﬁ‹
] = Bﬂrd[ösqu¨e].
ödex
;

143 
	}
}

145 
	$≥rf‹m_f‹w¨d_move
–
MOVETYPE
 *
move
 )

148 if–!
move
->
•e
 ) {

149 if–
move
->
c⁄ã¡
 !
no_põ˚
 ) {

151 
Bﬂrd
[
move
->
√w1
].
põ˚
 = 
no_põ˚
;

152 
Põ˚Tab
[
Bﬂrd
[
move
->
√w1
].
cﬁ‹
][Bﬂrd[move->√w1].
ödex
].
ùõ˚
 = 
no_põ˚
;

155 
	`MovePõ˚
–
move
->
√w1
, move->
ﬁd
 );

161 if–
move
->
movpõ˚
 =
kög
 ) {

162 
SQUARETYPE
 
ˇ°squ¨e
, 
c‹√rsqu¨e
;

163 
	`GíCa°Squ¨e
–
move
->
√w1
, &
ˇ°squ¨e
, &
c‹√rsqu¨e
 );

164 
	`MovePõ˚
–
ˇ°squ¨e
, 
c‹√rsqu¨e
 );

169 if–
move
->
movpõ˚
 =
∑wn
 ) {

171 
SQUARETYPE
 
ïsqu¨e
 = ( 
move
->
√w1
 & 7 ) + ( move->
ﬁd
 & 0x70 );

172 
Bﬂrd
[
ïsqu¨e
].
põ˚
 = 
no_põ˚
;

173 
Põ˚Tab
[
Bﬂrd
[
ïsqu¨e
].
cﬁ‹
][Bﬂrd[ïsqu¨e].
ödex
].
ùõ˚
 = 
no_põ˚
;

178 
	`Ch™geTy≥
–
move
->
movpõ˚
, move->
√w1
 );

179 
	}
}

181 
	$≥rf‹m_backw¨d_move
–
MOVETYPE
 *
move
 )

183 if–!
move
->
•e
 ) {

184 
	`MovePõ˚
–
move
->
ﬁd
, move->
√w1
 );

185 if–
move
->
c⁄ã¡
 !
no_põ˚
 )

186 
	`In£πPTabPõ˚
–
move
->
c⁄ã¡
, 
Oµ⁄ít
, move->
√w1
 );

192 if–
move
->
movpõ˚
 =
kög
 ) {

193 
SQUARETYPE
 
ˇ°squ¨e
, 
c‹√rsqu¨e
;

194 
	`GíCa°Squ¨e
–
move
->
√w1
, &
ˇ°squ¨e
, &
c‹√rsqu¨e
 );

195 
	`MovePõ˚
–
c‹√rsqu¨e
, 
ˇ°squ¨e
 );

200 if–
move
->
movpõ˚
 =
∑wn
 ) {

201 
SQUARETYPE
 
ïsqu¨e
 = ( 
move
->
√w1
 & 7 ) + ( move->
ﬁd
 & 0x70 );

202 
	`In£πPTabPõ˚
–
∑wn
, 
Oµ⁄ít
, 
ïsqu¨e
 );

207 
	`Ch™geTy≥
–
∑wn
, 
move
->
ﬁd
 );

208 
	}
}

220 
	$Pîf‹m
–
MOVETYPE
 *
move
, 
BOOL
 
ª£tmove
 )

222 if–
ª£tmove
 )

223 
	`≥rf‹m_backw¨d_move
–
move
 );

225 
	`≥rf‹m_f‹w¨d_move
–
move
 );

226 
	}
}

233 
BOOL
 
	$EqMove
–
MOVETYPE
 *
a
, MOVETYPE *
b
 )

235 if–
a
->
movpõ˚
 =
b
->movpiece )

236 if–
a
->
√w1
 =
b
->new1 )

237 if–
a
->
ﬁd
 =
b
->old )

238 if–
a
->
c⁄ã¡
 =
b
->content )

239 if–
a
->
•e
 =
b
->spe )

240  
TRUE
;

241  
FALSE
;

242 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/colors.cpp

3 
	~<°©ic.h
>

4 
	~<fûedül.h
>

5 
	~<öputdü.h
>

6 
	~<bwcc.h
>

8 
	~<°rög.h
>

9 
	~<°dio.h
>

11 
	~"wcdefs.h
"

12 
	~"öfo.h
"

13 
	~"wchess.h
"

14 
	~"edô.h
"

15 
	~"cﬁ‹s.h
"

16 
	~"exã∫s.h
"

18 
	#mö
(
x
, 
y
Ë(((xË< (y)Ë? (xË: (y))

	)

19 
	#max
(
x
, 
y
Ë(((xË> (y)Ë? (xË: (y))

	)

21 
	gTCﬁ‹sDülog
::
	$TCﬁ‹sDülog
(
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
AName
Ë: 
	$TDülog
(
AP¨ít
, 
AName
)

24 
	}
}

26 
	gTCﬁ‹sDülog
::~
	$TCﬁ‹sDülog
()

28 
	`DñëeObje˘
(
hSBBrush
[
Red
]);

29 
	`DñëeObje˘
(
hSBBrush
[
Gªí
]);

30 
	`DñëeObje˘
(
hSBBrush
[
Blue
]);

31 
	}
}

33 
ölöe
 
	gTCﬁ‹sDülog
::
	$CLSëFocus
–
HWND
 
hWnd
 )

35 
	`SídMesßge
–
HWödow
, 
WM_NEXTDLGCTL
, 
	`WPARAM
(
hWnd
), 1L );

36 
	`SídMesßge
–
hWnd
, 
EM_SETSEL
, 0, 
	`MAKELONG
(0, 32767) );

37 
	}
}

40 
BOOL
 
	gTCﬁ‹sDülog
::
	$GëCﬁ‹VÆue
–
WORD
 
Id
 )

42 
NewVÆ
;

43 
BOOL
 
Ok
;

44 
BYTE
 *
CurVÆ
;

45 
HWND
 
hS¸ﬁÀr
, 
hBuâ⁄
;

47 
NewVÆ
 = 
	`GëDlgIãmI¡
–
HWödow
, 
Id
, &
Ok
, 
TRUE
 );

49 
Id
) {

50 
IDD_WEDITRED
:

51 
CurVÆ
 = &
WSqCﬁ‹s
[0];

52 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_WRED
);

53 
hBuâ⁄
 = 
WhôeSq
;

55 
IDD_WEDITGREEN
:

56 
CurVÆ
 = &
WSqCﬁ‹s
[1];

57 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_WGREEN
);

58 
hBuâ⁄
 = 
WhôeSq
;

60 
IDD_WEDITBLUE
:

61 
CurVÆ
 = &
WSqCﬁ‹s
[2];

62 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_WBLUE
);

63 
hBuâ⁄
 = 
WhôeSq
;

65 
IDD_BEDITRED
:

66 
CurVÆ
 = &
BSqCﬁ‹s
[0];

67 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_BRED
);

68 
hBuâ⁄
 = 
BœckSq
;

70 
IDD_BEDITGREEN
:

71 
CurVÆ
 = &
BSqCﬁ‹s
[1];

72 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_BGREEN
);

73 
hBuâ⁄
 = 
BœckSq
;

75 
IDD_BEDITBLUE
:

76 
CurVÆ
 = &
BSqCﬁ‹s
[2];

77 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_BBLUE
);

78 
hBuâ⁄
 = 
BœckSq
;

82 i‡(
Ok
) {

83 
Ok
 = (
NewVÆ
 > 255Ë? 
FALSE
 : ( (NewVÆ < 0 ) ? FALSE : 
TRUE
 );

85 
NewVÆ
 = *
CurVÆ
;

87 i‡(!
Ok
) {

88 
	`Eº‹
("PleaseÉnterá validÇumber between 0ánd 255.");

89 
	`CLSëFocus
(
	`GëDlgIãm
(
HWödow
, 
Id
));

90 } i‡(
NewVÆ
 !*
CurVÆ
) {

91 *
CurVÆ
 = 
NewVÆ
;

92 
	`SëS¸ﬁlPos
(
hS¸ﬁÀr
, 
SB_CTL
, *
CurVÆ
, 
TRUE
);

93 
	`InvÆid©eRe˘
(
hBuâ⁄
, 0, 
FALSE
);

96  
Ok
;

97 
	}
}

99 
	gTCﬁ‹sDülog
::
	$Ok
–
RTMesßge
 )

101 
MSG
 
msg
;

103  
	`PìkMesßge
(&
msg
, 
HWödow
, 
CL_KILLFOCUS
, CL_KILLFOCUS, 
PM_NOREMOVE
) )

106 if–
	`GëCﬁ‹VÆue
(
IDD_WEDITRED
Ë&& GëCﬁ‹VÆue(
IDD_WEDITGREEN
Ë&& GëCﬁ‹VÆue(
IDD_WEDITBLUE
)

107 && 
	`GëCﬁ‹VÆue
(
IDD_BEDITRED
Ë&& GëCﬁ‹VÆue(
IDD_BEDITGREEN
Ë&& GëCﬁ‹VÆue(
IDD_BEDITBLUE
) ) {

109 
	`mem˝y
(
WhôeSqu¨eCﬁ‹s
, 
WSqCﬁ‹s
, (WSqColors));

110 
	`mem˝y
(
BœckSqu¨eCﬁ‹s
, 
BSqCﬁ‹s
, (BSqColors));

112 
	`Clo£Wödow
(
IDOK
);

114 
	}
}

116 
	gTCﬁ‹sDülog
::
	$SëupWödow
()

118 
TDülog
::
	`SëupWödow
();

120 
	`mem˝y
–
WSqCﬁ‹s
, 
WhôeSqu¨eCﬁ‹s
, (WSqColors) );

121 
	`mem˝y
–
BSqCﬁ‹s
, 
BœckSqu¨eCﬁ‹s
, (BSqColors) );

123 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_WEDITRED
, 
WSqCﬁ‹s
[0], 
FALSE
 );

124 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_WEDITGREEN
, 
WSqCﬁ‹s
[1], 
FALSE
 );

125 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_WEDITBLUE
, 
WSqCﬁ‹s
[2], 
FALSE
 );

126 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_BEDITRED
, 
BSqCﬁ‹s
[0], 
FALSE
 );

127 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_BEDITGREEN
, 
BSqCﬁ‹s
[1], 
FALSE
 );

128 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_BEDITBLUE
, 
BSqCﬁ‹s
[2], 
FALSE
 );

130 
RWID
 = 
	`GëDlgCålID
–
	`GëDlgIãm
(
HWödow
, 
IDD_WRED
 ) );

131 
GWID
 = 
	`GëDlgCålID
–
	`GëDlgIãm
(
HWödow
, 
IDD_WGREEN
) );

132 
BWID
 = 
	`GëDlgCålID
–
	`GëDlgIãm
(
HWödow
, 
IDD_WBLUE
 ) );

133 
RBID
 = 
	`GëDlgCålID
–
	`GëDlgIãm
(
HWödow
, 
IDD_BRED
 ) );

134 
GBID
 = 
	`GëDlgCålID
–
	`GëDlgIãm
(
HWödow
, 
IDD_BGREEN
) );

135 
BBID
 = 
	`GëDlgCålID
–
	`GëDlgIãm
(
HWödow
, 
IDD_BBLUE
 ) );

137 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_WRED
), 
SB_CTL
, 0, 255, 
FALSE
 );

138 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_WGREEN
), 
SB_CTL
, 0, 255, 
FALSE
 );

139 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_WBLUE
), 
SB_CTL
, 0, 255, 
FALSE
 );

140 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_BRED
), 
SB_CTL
, 0, 255, 
FALSE
);

141 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_BGREEN
), 
SB_CTL
, 0, 255, 
FALSE
);

142 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_BBLUE
), 
SB_CTL
, 0, 255, 
FALSE
);

144 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_WRED
), 
SB_CTL
, 
WSqCﬁ‹s
[0], 
FALSE
 );

145 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_WGREEN
), 
SB_CTL
, 
WSqCﬁ‹s
[1], 
FALSE
 );

146 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_WBLUE
), 
SB_CTL
, 
WSqCﬁ‹s
[2], 
FALSE
 );

147 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_BRED
), 
SB_CTL
, 
BSqCﬁ‹s
[0], 
FALSE
);

148 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_BGREEN
), 
SB_CTL
, 
BSqCﬁ‹s
[1], 
FALSE
);

149 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_BBLUE
), 
SB_CTL
, 
BSqCﬁ‹s
[2], 
FALSE
);

151 
WSètic
 = 
	`GëDlgCålID
–
WhôeSq
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_WHITECOLOR
) );

152 
BSètic
 = 
	`GëDlgCålID
–
BœckSq
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_BLACKCOLOR
) );

154 
hSBBrush
[
Red
] = 
	`Cª©eSﬁidBrush
–
	`RGB
(255, 0, 0) );

155 
hSBBrush
[
Gªí
] = 
	`Cª©eSﬁidBrush
–
	`RGB
(0, 255, 0) );

156 
hSBBrush
[
Blue
] = 
	`Cª©eSﬁidBrush
–
	`RGB
(0, 0, 255) );

157 
	}
}

159 
	gTCﬁ‹sDülog
::
	$WMC⁄åﬁCﬁ‹
–
RTMesßge
 
msg
 )

161 if–
msg
.
LP
.
Hi
 =
CTLCOLOR_SCROLLBAR
 ) {

162  
	`GëDlgCålID
–
	`HWND
(
msg
.
LP
.
Lo
) ) ) {

163 
RWID
: 
msg
.
Resu…
 = –
hSBBrush
[
Red
] ); ;

164 
GWID
: 
msg
.
Resu…
 = –
hSBBrush
[
Gªí
]); ;

165 
BWID
: 
msg
.
Resu…
 = –
hSBBrush
[
Blue
] ); ;

166 
RBID
: 
msg
.
Resu…
 = –
hSBBrush
[
Red
] ); ;

167 
GBID
: 
msg
.
Resu…
 = –
hSBBrush
[
Gªí
]); ;

168 
BBID
: 
msg
.
Resu…
 = –
hSBBrush
[
Blue
] ); ;

169 : 
	`DefWndProc
(
msg
);

174 
	`DefWndProc
(
msg
);

175 
	}
}

177 
	gTCﬁ‹sDülog
::
	$WMVS¸ﬁl
–
RTMesßge
 
msg
 )

179 
ID
 = 
	`GëDlgCålID
(
	`HWND
(
msg
.
LP
.
Hi
));

180 
BYTE
 *
cﬁ‹
;

181 
HWND
 
hS¸ﬁÀr
, 
hBuâ⁄
;

182 
dlgôem
;

184 i‡(
RWID
 =
ID
) {

185 
cﬁ‹
 = &
WSqCﬁ‹s
[0];

186 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_WRED
);

187 
dlgôem
 = 
IDD_WEDITRED
;

188 
hBuâ⁄
 = 
WhôeSq
;

189 } i‡(
RBID
 =
ID
) {

190 
cﬁ‹
 = &
BSqCﬁ‹s
[0];

191 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_BRED
);

192 
dlgôem
 = 
IDD_BEDITRED
;

193 
hBuâ⁄
 = 
BœckSq
;

194 } i‡(
BBID
 =
ID
) {

195 
cﬁ‹
 = &
BSqCﬁ‹s
[2];

196 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_BBLUE
);

197 
dlgôem
 = 
IDD_BEDITBLUE
;

198 
hBuâ⁄
 = 
BœckSq
;

199 } i‡(
BWID
 =
ID
) {

200 
cﬁ‹
 = &
WSqCﬁ‹s
[2];

201 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_WBLUE
);

202 
dlgôem
 = 
IDD_WEDITBLUE
;

203 
hBuâ⁄
 = 
WhôeSq
;

204 } i‡(
GBID
 =
ID
) {

205 
cﬁ‹
 = &
BSqCﬁ‹s
[1];

206 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_BGREEN
);

207 
dlgôem
 = 
IDD_BEDITGREEN
;

208 
hBuâ⁄
 = 
BœckSq
;

209 } i‡(
GWID
 =
ID
) {

210 
cﬁ‹
 = &
WSqCﬁ‹s
[1];

211 
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_WGREEN
);

212 
dlgôem
 = 
IDD_WEDITGREEN
;

213 
hBuâ⁄
 = 
WhôeSq
;

217 
msg
.
WP¨am
) {

218 
SB_PAGEDOWN
 :

219 *
cﬁ‹
 += 15;

221 
SB_LINEDOWN
 :

222 *
cﬁ‹
 = 
	`mö
(255, *color + 1);

224 
SB_PAGEUP
 :

225 *
cﬁ‹
 -= 15;

227 
SB_LINEUP
 :

228 *
cﬁ‹
 = 
	`max
(0, *color - 1);

230 
SB_TOP
:

231 *
cﬁ‹
 = 0;

233 
SB_BOTTOM
 :

234 *
cﬁ‹
 = 255;

236 
SB_THUMBPOSITION
 :

238 
SB_THUMBTRACK
 :

239 *
cﬁ‹
 = 
msg
.
LP
.
Lo
;

245 
	`SëS¸ﬁlPos
–
hS¸ﬁÀr
, 
SB_CTL
, *
cﬁ‹
, 
TRUE
 );

246 
	`SëDlgIãmI¡
–
HWödow
, 
dlgôem
, *
cﬁ‹
, 
FALSE
 );

247 
	`InvÆid©eRe˘
–
hBuâ⁄
, 0, 
FALSE
 );

248 
	}
}

250 
	gTCﬁ‹sDülog
::
	$WMDøwIãm
–
RTMesßge
 
msg
 )

252 
LPDRAWITEMSTRUCT
 
ÕDI
 = (LPDRAWITEMSTRUCT)
msg
.
LP¨am
;

254 if–
ÕDI
->
ôemA˘i⁄
 !
ODA_DRAWENTIRE
 )

257 
BYTE
 *
cﬁ‹s
;

259 if–
ÕDI
->
CéID
 =
WSètic
 )

260 
cﬁ‹s
 = 
WSqCﬁ‹s
;

261 if–
ÕDI
->
CéID
 =
BSètic
 )

262 
cﬁ‹s
 = 
BSqCﬁ‹s
;

266 
HBRUSH
 
hOldBrush
 = (HBRUSH)
	`Sñe˘Obje˘
–
ÕDI
->
hDC
, 
	`Cª©eSﬁidBrush
(
	`RGB
(
cﬁ‹s
[0], colors[1], colors[2])) );

268 
LPRECT
 
ÕR
 = &(
ÕDI
->
rcIãm
);

270 
	`Re˘™gÀ
–
ÕDI
->
hDC
, 
ÕR
->
À·
,ÜpR->
t›
,ÜpR->
right
,ÜpR->
bŸtom
 );

271 
	`DñëeObje˘
–
	`Sñe˘Obje˘
(
ÕDI
->
hDC
, 
hOldBrush
) );

272 
	}
}

275 
	gTCﬁ‹sDülog
::
	$CLKûlFocus
(
RTMesßge
 
msg
)

277 if–
	`GëA˘iveWödow
(Ë!
HWödow
 )

280 if–
	`GëDlgIãm
–
HWödow
, 
IDCANCEL
 ) =
	`GëFocus
() )

283 
WORD
 
Id
 = 
msg
.
WP¨am
;

284 if–
	`GëDlgIãm
–
HWödow
, 
Id
 ) =
	`GëFocus
() )

287 
	`GëCﬁ‹VÆue
(
Id
);

288 
	}
}

291 
	gTCﬁ‹sDülog
::
	$WMComm™d
–
RTMesßge
 
msg
 )

293 if–
msg
.
LP
.
Lo
 && (msg.LP.
Hi
 =
EN_KILLFOCUS
) )

294 if–
	`SídMesßge
–
	`HWND
(
msg
.
LP
.
Lo
), 
EM_GETMODIFY
, 0, 0L) )

295 
	`Po°Mesßge
–
HWödow
, 
CL_KILLFOCUS
, 
ID
, 0L );

297 
TWödowsObje˘
::
	`WMComm™d
(
msg
);

298 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/colors.h

3 #i‚de‡
__COLORS_H


4 
	#__COLORS_H


	)

6 
	#CL_KILLFOCUS
 (
WM_USER
 + 101)

	)

8 
	$_CLASSDEF
(
TCﬁ‹sDülog
)

10 ˛as†
	cTCﬁ‹sDülog
 : 
public
 
TDülog


12 
public
:

13 
	`TCﬁ‹sDülog
–
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
AName
 );

14 ~
	`TCﬁ‹sDülog
();

16 
vútuÆ
 
	`SëupWödow
();

17 
vútuÆ
 
	`WMC⁄åﬁCﬁ‹
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
WM_CTLCOLOR
 ];

18 
vútuÆ
 
	`WMVS¸ﬁl
–
RTMesßge
 );

19 
vútuÆ
 
	`WMComm™d
–
RTMesßge
 );

20 
vútuÆ
 
	`WMDøwIãm
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
WM_DRAWITEM
 ];

21 
vútuÆ
 
	`Ok
–
RTMesßge
 );

22 
vútuÆ
 
	`CLKûlFocus
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
CL_KILLFOCUS
 ];

24 
¥iv©e
:

25 
	eS¸ﬁlB¨Cﬁ‹s
 { 
Red
, 
Gªí
, 
Blue
 };

27 
HBRUSH
 
hWSètic
, 
hBSètic
, 
hSBBrush
[3];

28 
RWID
, 
GWID
, 
BWID
, 
RBID
, 
GBID
, 
BBID
;

29 
WSètic
, 
BSètic
;

30 
HWND
 
BœckSq
, 
WhôeSq
;

31 
BYTE
 
WSqCﬁ‹s
[3];

32 
BYTE
 
BSqCﬁ‹s
[3];

34 
	`CLSëFocus
(
HWND
);

35 
BOOL
 
	`GëCﬁ‹VÆue
(
WORD
);

36 
	}
};

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/display.cpp

4 
	~<owl\owÕch.h
>

5 #¥agm®
hdr°›


7 
	~<°dio.h
>

8 
	~<°rög.h
>

9 
	~<bwcc.h
>

11 
	~"wcdefs.h
"

12 
	~"exã∫s.h
"

19 
BOARDIDTYPE
 
	gDi•œy
[0x78];

20 *
	gPõ˚Lëãr
 = " KQRBNP";

21 
	gbuf
[280];

27 
RECT
 
	gBﬂrdRe˘
;

34 
HBITMAP
 
	$GëBôm≠H™dÀ
–
PIECETYPE
 
põ˚
, 
COLORTYPE
 
pcﬁ‹
 )

36 if–
põ˚
 == 0 )

39  
Põ˚BmpAºay
[
põ˚
 - 1][
pcﬁ‹
];

40 
	}
}

47 
	$CÀ¨InfoWödow
()

49 
TInfo
->
	`Re£t
();

50 
	}
}

55 
	$Cﬁ‹ToPœy
–
COLORTYPE
 
cﬁ‹
 )

57 
TInfo
->
	`SëTu∫Text
–(
cﬁ‹
 =
whôe
) ? "White" : "Black" );

58 
	}
}

60 
	$Mesßge
–*
°r
 )

62 
TInfo
->
	`SëMesßgeText
(
°r
);

63 
	}
}

65 
	$Eº‹
–*
°r
 )

67 if–
SoundOn
 )

68 
	`MesßgeBìp
(0);

70 
	`°r˝y
–
buf
, 
°r
 );

71 ::
	`SídMesßge
–
hWndMaö
, 
WM_COMMAND
, 
EM_ERROR
, 0L );

72 
	}
}

74 
	$W¨nög
–*
°r
 )

76 if–
SoundOn
 )

77 
	`MesßgeBìp
(0);

78 
	`Mesßge
–
°r
 );

79 
	}
}

86 *
	$MoveSå
–
MOVETYPE
 *
move
 )

88 
°r
[7];

90 
	`°r˝y
–
°r
, " " );

92 if–
move
->
movpõ˚
 =
no_põ˚
 )

93  
°r
;

95 if–
move
->
•e
 && move->
movpõ˚
 =
kög
 ) {

96 if–
move
->
√w1
 > move->
ﬁd
 )

97 
	`°r˝y
–
°r
, "O-O " );

99 
	`°r˝y
–
°r
, "O-O-O " );

101  (
°r
);

104 
°r
[0] = 
Põ˚Lëãr
[
move
->
movpõ˚
];

105 
°r
[1] = 'a' + 
move
->
ﬁd
 % 16;

106 
°r
[2] = '1' + 
move
->
ﬁd
 / 16;

107 
°r
[3] = ( 
move
->
c⁄ã¡
 =
no_põ˚
 ) ? '-' : 'x';

108 
°r
[4] = 'a' + 
move
->
√w1
 % 16;

109 
°r
[5] = '1' + 
move
->
√w1
 / 16;

111  
°r
;

112 
	}
}

115 
	$PrötMove
–
movío
, 
COLORTYPE
 
¥ogømcﬁ‹
, 
MOVETYPE
 *
move
, 
time
 )

117 
möuãs
 = ()(
time
 / 60.0);

119 
	`•rötf
–
buf
, "%2.2d:%#04.1‡%3.3d. %s", 
möuãs
, 
time
 - möuã†* 60.0, 
movío
 / 2 + 1, 
	`MoveSå
(
move
) );

121 if–
¥ogømcﬁ‹
 =
whôe
 )

122 
TInfo
->
	`SëWhôeInfoText
–
buf
 );

124 
TInfo
->
	`SëBœckInfoText
–
buf
 );

125 
	}
}

132 
	$DøwFøme
–
HDC
 
hDC
, 
RECT
& 
‰ame_¨ó
, 
BOOL
 
DøwBackground
 )

134 
À·
 = 
‰ame_¨ó
.left;

135 
right
 = 
‰ame_¨ó
.right;

136 
t›
 = 
‰ame_¨ó
.top;

137 
bŸtom
 = 
‰ame_¨ó
.bottom;

139 
HBRUSH
 
hOldBrush
 = (HBRUSH)
	`Sñe˘Obje˘
–
hDC
, 
	`GëStockObje˘
–
DøwBackground
 ? 
LTGRAY_BRUSH
: 
NULL_BRUSH
 ) );

141 
HPEN
 
hOldPí
 = (HPEN)
	`Sñe˘Obje˘
–
hDC
, 
	`GëStockObje˘
–
WHITE_PEN
 ) );

143 
POINT
 
pﬁylöe
[3];

145 
	`Re˘™gÀ
–
hDC
, 
À·
, 
t›
, 
right
, 
bŸtom
 );

147 
	`Sñe˘Obje˘
–
hDC
, 
	`Cª©ePí
–
PS_SOLID
, 1, 
	`RGB
(192, 192, 192)) );

148 
	`Re˘™gÀ
–
hDC
, 
À·
+1, 
t›
+1, 
right
-1, 
bŸtom
-1 );

150 
	`DñëeObje˘
–
	`Sñe˘Obje˘
–
hDC
, 
	`GëStockObje˘
(
WHITE_PEN
)) );

152 
pﬁylöe
[0].
x
 = 
À·
 + 2;Öﬁylöe[0].
y
 = 
bŸtom
 - 3;

153 
pﬁylöe
[1].
x
 = 
right
 - 3;Öﬁylöe[1].
y
 = 
bŸtom
 - 3;

154 
pﬁylöe
[2].
x
 = 
right
 - 3;Öﬁylöe[2].
y
 = 
t›
 + 2;

156 
	`Pﬁylöe
–
hDC
, 
pﬁylöe
, 3 );

159 
	`Sñe˘Obje˘
–
hDC
, 
	`Cª©ePí
(
PS_SOLID
, 1, 
	`RGB
(128, 128, 128)) );

161 
pﬁylöe
[0].
x
 = 
À·
;Öﬁylöe[0].
y
 = 
bŸtom
-1;

162 
pﬁylöe
[1].
x
 = 
right
-1;Öﬁylöe[1].
y
 = 
bŸtom
-1;

163 
pﬁylöe
[2].
x
 = 
right
-1;Öﬁylöe[2].
y
 = 
t›
;

164 
	`Pﬁylöe
–
hDC
, 
pﬁylöe
, 3 );

166 
pﬁylöe
[0].
x
 = 
À·
 + 2;Öﬁylöe[0].
y
 = 
bŸtom
 - 3;

167 
pﬁylöe
[1].
x
 = 
À·
 + 2;Öﬁylöe[1].
y
 = 
t›
 + 2;

168 
pﬁylöe
[2].
x
 = 
right
 - 3;Öﬁylöe[2].
y
 = 
t›
 + 2;

169 
	`Pﬁylöe
–
hDC
, 
pﬁylöe
, 3 );

172 
	`DñëeObje˘
–
	`Sñe˘Obje˘
(
hDC
, 
hOldPí
) );

175 
	`Sñe˘Obje˘
–
hDC
, 
hOldBrush
 );

176 
	}
}

183 
	$PrötCurLevñ
()

185 
BOOL
 
Mu…iMove
;

187 if–
Mu…iMove
 ) {

188 
TInfo
->
	`SëLevñText
( "Two Player" );

192 
Levñ
) {

193 
n‹mÆ
: 
	`•rötf
–
buf
, "%1.0‡£¯/ move", 
AvîageTime
 ); ;

194 
fuŒgamëime
: 
	`•rötf
–
buf
, "%2.2‡mö / game", 
AvîageTime
 ); ;

195 
ósygame
: 
	`°r˝y
–
buf
, "Easy" ); ;

196 
öföôe
 : 
	`°r˝y
–
buf
, "Infinite" ); ;

197 
∂y£¨ch
 : 
	`•rötf
–
buf
, "Ply-Dïth = %d", 
MaxLevñ
 ); ;

198 
m©e£¨ch
: 
	`°r˝y
–
buf
, "MateSearch" ); ;

199 
m©chög
 : 
	`°r˝y
–
buf
, "Match usersÅime" ); ;

202 
TInfo
->
	`SëLevñText
(
buf
);

203 
	}
}

205 
POINT
 
	$GëSqu¨eXY
–
SQUARETYPE
 
squ¨e
 )

207 
POINT
 
p
;

209 if–
Tu∫ed
 )

210 
squ¨e
 ^= 0x77;

212 
p
.
x
 = (
squ¨e
 % 8Ë* 
SQUARE_SIZE
 + 
BORDERSIZE
 + 
MYFRAMESIZE
;

213 
p
.
y
 = (7 - 
squ¨e
 / 16Ë* 
SQUARE_SIZE
 + 
BORDERSIZE
 + 
MYFRAMESIZE
;

215  
p
;

216 
	}
}

218 
	$CÀ¨Squ¨e
–
SQUARETYPE
 
squ¨e
 )

220 
HANDLE
 
hOldBrush
;

221 
POINT
 
p
;

222 
HDC
 
hDC
;

224 
p
 = 
	`GëSqu¨eXY
(
squ¨e
);

226 
hDC
 = 
	`GëDC
(
hWndMaö
);

227 if–(
squ¨e
 % 8 + square /16) % 2 == 1 )

228 
hOldBrush
 = 
	`Sñe˘Obje˘
(
hDC
, 
hWhôeBrush
);

230 
hOldBrush
 = 
	`Sñe˘Obje˘
(
hDC
, 
hBœckBrush
);

232 
	`P©B…
–
hDC
, 
p
.
x
,Ö.
y
, 
SQUARE_SIZE
, SQUARE_SIZE, 
PATCOPY
 );

233 
	`Sñe˘Obje˘
–
hDC
, 
hOldBrush
 );

234 
	`Rñó£DC
–
hWndMaö
, 
hDC
 );

235 
	}
}

237 
	$CÀ¨Di•œy
()

239 
SQUARETYPE
 
sq
;

240 
	`CÀ¨InfoWödow
();

241 
sq
 = 0; sq <= 0x77; sq++)

242 
Di•œy
[
sq
].
põ˚
 = 
no_põ˚
;

243 
	}
}

250 
	$DøwBﬂrd
()

252 
no
;

253 
HDC
 
hDC
;

254 c⁄° 
SQUARETYPE
 
¥öäo
[64] = {

266 
BﬂrdRe˘
.
À·
 = BﬂrdRe˘.
t›
 = 
BORDERSIZE
;

267 
BﬂrdRe˘
.
right
 = BﬂrdRe˘.
bŸtom
 = 
BORDERSIZE
 + (2 * 
MYFRAMESIZE
Ë+ (8 * 
SQUARE_SIZE
);

269 
hDC
 = 
	`GëDC
–
hWndMaö
 );

270 
	`DøwFøme
–
hDC
, 
BﬂrdRe˘
 );

271 
	`Rñó£DC
–
hWndMaö
, 
hDC
 );

273  
no
 = 0;Ço < 64;Ço++ )

274 
	`CÀ¨Squ¨e
–
¥öäo
[
no
] );

275 
	}
}

278 
	$PrötPõ˚
–
SQUARETYPE
 
squ¨e
, 
PIECETYPE
 
põ˚
, 
COLORTYPE
 
cﬁ‹
, 
DWORD
 
R›
 )

280 
HBITMAP
 
hBôm≠
, 
hOldBmp
, 
hMaskBmp
;

281 
HDC
 
hMem‹yDC
, 
hDC
;

282 
POINT
 
p
;

284 if–
põ˚
 =
no_põ˚
 )

287 
HDC
 
hDC
 = 
	`GëDC
–
hWndMaö
 );

288 
HDC
 
hMem‹yDC
 = 
	`Cª©eCom∑tibÀDC
–
hDC
 );

290 
HBITMAP
 
hBôm≠
 = 
	`GëBôm≠H™dÀ
–
põ˚
, 
cﬁ‹
 );

291 
HBITMAP
 
hMaskBmp
 = 
MaskAºay
[
põ˚
-1];

292 
HBITMAP
 
hOldBmp
 = (HBITMAP)
	`Sñe˘Obje˘
–
hMem‹yDC
, 
hMaskBmp
 );

293 
POINT
 
p
 = 
	`GëSqu¨eXY
–
squ¨e
 );

295 
BITMAP
 
Bôm≠
;

296 
	`GëObje˘
–
hBôm≠
, (
BITMAP
), (
LPSTR
Ë&
Bôm≠
 );

298 
	`BôB…
–
hDC
, 
p
.
x
,Ö.
y
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hMem‹yDC
, 0, 0, 
SRCAND
 );

299 
	`Sñe˘Obje˘
–
hMem‹yDC
, 
hBôm≠
 );

300 
	`BôB…
–
hDC
, 
p
.
x
,Ö.
y
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hMem‹yDC
, 0, 0, 
R›
 );

301 
	`Sñe˘Obje˘
–
hMem‹yDC
, 
hOldBmp
 );

303 
	`DñëeDC
–
hMem‹yDC
 );

304 
	`Rñó£DC
–
hWndMaö
, 
hDC
 );

305 
	}
}

307 
	$InôDi•œy
()

309 
SQUARETYPE
 
squ¨e
;

311  
squ¨e
 = 0; square <= 0x77; square++ )

312 if–!(
squ¨e
 & 0x88) )

313 if–(
Bﬂrd
[
squ¨e
].
põ˚
 !
Di•œy
[squ¨e].põ˚ ) || (Bﬂrd[squ¨e].põ˚ !
no_põ˚
Ë&& (Bﬂrd[squ¨e].
cﬁ‹
 != Display[square].color) ) {

314 
Di•œy
[
squ¨e
].
põ˚
 = 
Bﬂrd
[square].piece;

315 
Di•œy
[
squ¨e
].
cﬁ‹
 = 
Bﬂrd
[square].color;

317 
	}
}

325 
	$FømeSqu¨e
(
SQUARETYPE
 
squ¨e
, 
BOOL
 
De„nded
)

327 
POINT
 
p
;

328 
HPEN
 
hOldPí
;

329 
HBRUSH
 
hOldBrush
;

330 
HDC
 
hDC
;

331 
hDC
 = 
	`GëDC
(
hWndMaö
);

333 
p
 = 
	`GëSqu¨eXY
(
squ¨e
);

334 
hOldBrush
 = (
HBRUSH
)
	`Sñe˘Obje˘
(
hDC
, 
	`GëStockObje˘
(
NULL_BRUSH
));

335 i‡(
De„nded
)

336 
hOldPí
 = (
HPEN
)
	`Sñe˘Obje˘
(
hDC
, 
	`GëStockObje˘
(
BLACK_PEN
));

338 
hOldPí
 = (
HPEN
)
	`Sñe˘Obje˘
(
hDC
, 
	`Cª©ePí
(
PS_SOLID
,1,
	`RGB
(192, 0, 0)));

341 
	`Re˘™gÀ
(
hDC
, 
p
.
x
+1,Ö.
y
+1,Ö.x+
SQUARE_SIZE
-1,Ö.y+SQUARE_SIZE-1);

342 
	`Sñe˘Obje˘
(
hDC
, 
hOldBrush
);

343 i‡(
De„nded
)

344 
	`Sñe˘Obje˘
(
hDC
, 
hOldPí
);

346 
	`DñëeObje˘
(
	`Sñe˘Obje˘
(
hDC
, 
hOldPí
));

347 
	`Rñó£DC
(
hWndMaö
, 
hDC
);

348 
	}
}

350 
	$HideAâacks
()

352 
SQUARETYPE
 
squ¨e
;

354 
squ¨e
 = 0; square <= 0x77; square++)

355 i‡(!(
squ¨e
 & 0x88))

357 i‡(
Bﬂrd
[
squ¨e
].
©ècked
 =
TRUE
)

359 
Bﬂrd
[
squ¨e
].
©ècked
 = 
FALSE
;

360 
	`CÀ¨Squ¨e
(
squ¨e
);

361 
	`PrötPõ˚
(
squ¨e
, 
Bﬂrd
[squ¨e].
põ˚
,

362 
Bﬂrd
[
squ¨e
].
cﬁ‹
, 
SRCINVERT
);

365 
	}
}

367 
	$ShowAâacks
()

369 
SQUARETYPE
 
squ¨e
;

371 
squ¨e
 = 0; square <= 0x77; square++)

372 i‡(!(
squ¨e
 & 0x88))

374 i‡(
	`Aâacks
(
CompuãrCﬁ‹
, 
squ¨e
Ë&& 
Bﬂrd
[squ¨e].
cﬁ‹
 !CompuãrCﬁ‹ && Bﬂrd[squ¨e].
põ˚
 !
no_põ˚
)

376 
Bﬂrd
[
squ¨e
].
©ècked
 = 
TRUE
;

377 i‡(
	`Aâacks
((
COLORTYPE
)!
CompuãrCﬁ‹
, 
squ¨e
))

378 
	`FømeSqu¨e
(
squ¨e
, 
TRUE
);

380 
	`FømeSqu¨e
(
squ¨e
, 
FALSE
);

382 i‡(
Bﬂrd
[
squ¨e
].
©ècked
 =
TRUE
)

384 
Bﬂrd
[
squ¨e
].
©ècked
 = 
FALSE
;

385 
	`CÀ¨Squ¨e
(
squ¨e
);

386 
	`PrötPõ˚
(
squ¨e
, 
Bﬂrd
[squ¨e].
põ˚
,

387 
Bﬂrd
[
squ¨e
].
cﬁ‹
, 
SRCINVERT
);

390 
	}
}

392 
	$Upd©eBﬂrd
()

394 
SQUARETYPE
 
squ¨e
;

395 
squ¨e
 = 0; square <= 0x77; square++)

396 i‡(!(
squ¨e
 & 0x88))

397 i‡((
Bﬂrd
[
squ¨e
].
põ˚
 !
Di•œy
[square].piece) ||

398 (
Bﬂrd
[
squ¨e
].
põ˚
 !
no_põ˚
Ë&& (Bﬂrd[squ¨e].
cﬁ‹
 !=

399 
Di•œy
[
squ¨e
].
cﬁ‹
))

401 i‡(
Di•œy
[
squ¨e
].
põ˚
 !
no_põ˚
)

402 
	`CÀ¨Squ¨e
(
squ¨e
);

403 
Di•œy
[
squ¨e
].
põ˚
 = 
Bﬂrd
[square].piece;

404 
Di•œy
[
squ¨e
].
cﬁ‹
 = 
Bﬂrd
[square].color;

405 i‡(
Bﬂrd
[
squ¨e
].
põ˚
 !
no_põ˚
)

406 
	`PrötPõ˚
(
squ¨e
, 
Bﬂrd
[squ¨e].
põ˚
,

407 
Bﬂrd
[
squ¨e
].
cﬁ‹
, 
SRCINVERT
);

409 i‡(
Levñ
 =
ósygame
 && !
Edôög
)

410 
	`ShowAâacks
();

411 
	}
}

413 
DøwAÕhaNum
();

415 
	$PrötBﬂrd
()

417 
SQUARETYPE
 
squ¨e
;

419 
	`DøwBﬂrd
();

420 
squ¨e
 = 0; square <= 0x77; square++)

421 i‡(!(
squ¨e
 & 0x88))

423 i‡(
Di•œy
[
squ¨e
].
põ˚
 !
no_põ˚
)

424 
	`PrötPõ˚
(
squ¨e
, 
Di•œy
[squ¨e].
põ˚
,

425 
Di•œy
[
squ¨e
].
cﬁ‹
, 
SRCINVERT
);

427 
	`DøwAÕhaNum
();

428 i‡(
Levñ
 =
ósygame
 && !
Edôög
)

429 
	`ShowAâacks
();

430 
	}
}

438 
SQUARETYPE
 
	$GëVÆidSqu¨e
(
POINT
 
p
, 
COLORTYPE
 
∂ayî
, 
BOOL
 
CheckPõ˚
)

440 
POINT
 
poöt
;

441 
SQUARETYPE
 
squ¨e
;

442 
RECT
 
sqª˘
;

445 
squ¨e
 = 0; square <= 0x77; square++)

447 i‡(!(
squ¨e
 & 0x88))

449 
poöt
 = 
	`GëSqu¨eXY
(
squ¨e
);

450 
sqª˘
.
À·
 = 
poöt
.
x
;

451 
sqª˘
.
t›
 = 
poöt
.
y
;

452 
sqª˘
.
right
 = sqª˘.
À·
 + 
SQUARE_SIZE
;

453 
sqª˘
.
bŸtom
 = sqª˘.
t›
 + 
SQUARE_SIZE
;

454 i‡(
	`PtInRe˘
(&
sqª˘
, 
p
))

456 i‡((
Di•œy
[
squ¨e
].
cﬁ‹
 =
∂ayî
 && Di•œy[squ¨e].
põ˚


457 !
no_põ˚
Ë|| !
CheckPõ˚
)

458  
squ¨e
;

463 
	}
}

465 
	$DøwN‹mÆBôm≠
(
SQUARETYPE
 
squ¨e
)

467 
	`CÀ¨Squ¨e
(
squ¨e
);

468 
	`PrötPõ˚
(
squ¨e
, 
Di•œy
[squ¨e].
põ˚
, Di•œy[squ¨e].
cﬁ‹
, 
SRCINVERT
);

469 
	}
}

471 
	$DøwInvîãdBôm≠
(
SQUARETYPE
 
squ¨e
)

473 
	`PrötPõ˚
(
squ¨e
, 
Di•œy
[squ¨e].
põ˚
, Di•œy[squ¨e].
cﬁ‹
, 
NOTSRCERASE
);

474 
	}
}

476 
	$O≥nögLibMsg
()

478 
TInfo
->
	`SëMesßgeText
("Using openingÜibrary");

479 
	}
}

481 
	$PrötNodes
(
NODEVAL
 *
nodes
, 
time
)

483 
nodîól
;

484 
buf
[80];

486 
nodîól
 = (
nodes
->
nodeba£
 * 
MAXINT
Ë+Çodes->
nodeoff£t
;

487 i‡(
time
)

489 
	`•rötf
(
buf
, "%7.1f", 
nodîól
/
time
);

490 
TInfo
->
	`SëSec⁄dsText
(
buf
);

492 
	`•rötf
(
buf
, "%7.0‡", 
nodîól
);

493 
TInfo
->
	`SëNodeText
(
buf
);

494 
	}
}

501 
	$PrötBe°Move
(
MOVETYPE
 *
maölöe
, 
MAXTYPE
 
maöevÆu
)

503 
DEPTHTYPE
 
dï
 = 0;

505 *
buf
 = 0;

507 i‡(
ShowBe°Löe
 =
FALSE
)

509 
dï
 < 7 && (
maölöe
[dï].
movpõ˚
 !
no_põ˚
))

511 
	`°rˇt
(
buf
, 
	`MoveSå
(&
maölöe
[
dï
++]));

512 
	`°rˇt
(
buf
, " ");

514 
TInfo
->
	`SëBe°LöeText
(
buf
);

515 
	`•rötf
(
buf
, "%7.2f", 
maöevÆu
 /256.0);

516 
TInfo
->
	`SëVÆueText
(
buf
);

517 
	}
}

519 
	$CÀ¨Be°Löe
()

521 
TInfo
->
	`SëBe°LöeText
("");

522 
	}
}

524 
	$CÀ¨Mesßge
()

526 
TInfo
->
	`SëMesßgeText
("");

527 
	}
}

529 * 
	gCh¨Aºay
[] = { "a","b", "c", "d", "e", "f", "g", "h" };

530 * 
	gNumAºay
[] = { "1", "2", "3", "4", "5", "6", "7", "8" };

532 
	$DøwBump
–
HDC
 
hDC
, 
x
, 
y
 )

534 
x2
, 
y2
;

535 
HPEN
 
hOldPí
;

536 
HBRUSH
 
hOldBrush
;

537 
POINT
 
pAºay
[3];

539 
x2
 = 
x
 + 
CHARSIZE
 + 2;

540 
y2
 = 
y
-- + 
LINESIZE
 + 1;

541 
x
-=2;

543 
hOldBrush
 = (
HBRUSH
)
	`Sñe˘Obje˘
(
hDC
, 
	`GëStockObje˘
(
LTGRAY_BRUSH
));

544 
hOldPí
 = (
HPEN
)
	`Sñe˘Obje˘
(
hDC
, 
	`GëStockObje˘
(
WHITE_PEN
));

546 
	`Re˘™gÀ
(
hDC
, 
x
, 
y
, 
x2
, 
y2
);

548 
	`Sñe˘Obje˘
(
hDC
, 
	`Cª©ePí
(
PS_SOLID
, 1, 
	`RGB
(128, 128, 128)));

549 
pAºay
[0].
x
 = ++x;

550 
pAºay
[1].
y
 =ÖAºay[0].y = 
y2
;

551 
pAºay
[2].
x
 =ÖAºay[1].x = 
x2
;

552 
pAºay
[2].
y
 = ++y;

553 
	`Pﬁylöe
(
hDC
, 
pAºay
, 3);

555 
	`Sñe˘Obje˘
(
hDC
, 
hOldBrush
);

556 
	`DñëeObje˘
(
	`Sñe˘Obje˘
(
hDC
, 
hOldPí
));

557 
	}
}

559 
	$DøwAÕhaNum
()

561 
i
;

562 
XPos
, 
YPos
;

563 
HDC
 
hDC
;

565 
hDC
 = 
	`GëDC
–
hWndMaö
 );

567 
XPos
 = (
BORDERSIZE
 + 
MYFRAMESIZE
)/2 - 
CHARSIZE
/2;

568 
YPos
 = (
BORDERSIZE
 + 
SQUARE_SIZE
/2Ë- 
LINESIZE
 / 2;

570 
	`SëBkCﬁ‹
–
hDC
, 
	`RGB
(192, 192, 192) );

572  
i
 = 7; i >= 0; i-- ) {

573 
	`DøwBump
–
hDC
, 
XPos
, 
YPos
 );

574 
	`TextOut
–
hDC
, 
XPos
, 
YPos
, 
NumAºay
[ (
Tu∫ed
 ? 7-
i
 : i) ], 1 );

575 
YPos
 +
SQUARE_SIZE
;

578 
XPos
 = 
BORDERSIZE
 + 
SQUARE_SIZE
 / 2 - 
CHARSIZE
/2;

579 
YPos
 = 
BORDERSIZE
 + (8 * 
SQUARE_SIZE
Ë+ (2 * 
MYFRAMESIZE
) + 1;

581  
i
 = 0; i < 8; i++ ) {

582 
	`DøwBump
–
hDC
, 
XPos
, 
YPos
 );

583 
	`TextOut
(
hDC
, 
XPos
, 
YPos
, 
Ch¨Aºay
[ (
Tu∫ed
 ? 7-
i
 : i) ], 1);

584 
XPos
 +
SQUARE_SIZE
;

587 
	`Rñó£DC
(
hWndMaö
, 
hDC
);

588 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/drag.cpp

3 
	~<wödows.h
>

4 
	~<m©h.h
>

5 
	~"wcdefs.h
"

6 
	~"exã∫s.h
"

8 
	#Anim©i⁄S≥ed
 2

	)

10 
HDC
 
	ghSaveDC
;

11 
POINT
 
	gLa°Poöt
;

12 
HBITMAP
 
	ghOldBmp
, 
	ghDøgPõ˚
, 
	ghDøgMask
;

13 
HCURSOR
 
	ghPªvCurs‹
;

15 #unde‡
max


16 #unde‡
mö


17 
	#max
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

18 
	#mö
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

19 
BOOL
 
	gIsDøggög
 = 
FALSE
;

20 
POINT
 
	gSèπPoöt
;

21 
POINT
 
	gCurPoöt
;

22 
FAR
 
PASCAL
 
Rëu∫Home
(
X
, 
Y
, 
LPSTR
 
ÕD©a
);

24 
	$SaveBackground
(
POINT
& 
p
)

26 
HDC
 
hDC
;

27 
HBITMAP
 
hBôm≠
;

28 
BITMAP
 
Bôm≠
;

31 
La°Poöt
 = 
p
;

32 
hDC
 = 
	`GëDC
(
hWndMaö
);

34 
	`GëObje˘
–
	`GëBôm≠H™dÀ
–
∑wn
, 
whôe
 ), (
BITMAP
), (
LPSTR
Ë&
Bôm≠
 );

37 
hSaveDC
 = 
	`Cª©eCom∑tibÀDC
(
hDC
);

38 
hOldBmp
 = (
HBITMAP
)
	`Sñe˘Obje˘
(
hSaveDC
, 
	`Cª©eCom∑tibÀBôm≠
(
hDC
, 
Bôm≠
.
bmWidth
,Bôm≠.
bmHeight
));

40 
	`BôB…
(
hSaveDC
, 0, 0, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hDC
, 
p
.
x
,Ö.
y
, 
SRCCOPY
);

42 
	`Rñó£DC
(
hWndMaö
, 
hDC
);

43 
	}
}

46 
	$Re°‹eBackground
()

48 
HDC
 
hDC
;

49 
HBITMAP
 
hBôm≠
;

50 
BITMAP
 
Bôm≠
;

52 
hDC
 = 
	`GëDC
(
hWndMaö
);

53 
	`GëObje˘
–
	`GëBôm≠H™dÀ
–
∑wn
, 
whôe
 ), (
BITMAP
), (
LPSTR
Ë&
Bôm≠
 );

55 
	`BôB…
(
hDC
, 
La°Poöt
.
x
, La°Poöt.
y
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hSaveDC
, 0, 0, 
SRCCOPY
);

57 
	`DñëeObje˘
(
	`Sñe˘Obje˘
(
hSaveDC
, 
hOldBmp
));

58 
	`DñëeDC
(
hSaveDC
);

59 
	`Rñó£DC
(
hWndMaö
, 
hDC
);

60 
	}
}

63 
	$ShowPõ˚
(
POINT
& 
p
)

65 
HBITMAP
 
hOldBmp
;

66 
BITMAP
 
Bôm≠
;

67 
HDC
 
hMem‹yDC
, 
hDC
;

69 
hDC
 = 
	`GëDC
(
hWndMaö
);

70 
hMem‹yDC
 = 
	`Cª©eCom∑tibÀDC
(
hDC
);

71 
	`GëObje˘
(
hDøgPõ˚
, (
BITMAP
), (
LPSTR
Ë&
Bôm≠
);

73 
hOldBmp
 = (
HBITMAP
)
	`Sñe˘Obje˘
(
hMem‹yDC
, 
hDøgMask
);

74 
	`BôB…
(
hDC
, 
p
.
x
,Ö.
y
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
,

75 
hMem‹yDC
, 0, 0, 
SRCAND
);

77 
	`Sñe˘Obje˘
(
hMem‹yDC
, 
hDøgPõ˚
);

78 
	`BôB…
(
hDC
, 
p
.
x
,Ö.
y
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
,

79 
hMem‹yDC
, 0, 0, 
SRCINVERT
);

81 
	`Sñe˘Obje˘
(
hMem‹yDC
, 
hOldBmp
);

82 
	`DñëeDC
(
hMem‹yDC
);

83 
	`Rñó£DC
(
hWndMaö
, 
hDC
);

84 
	}
}

86 
BOOL
 
	$I¡î£˘
(
RECT
& 
r1
, RECT& 
r2
)

88 
POINT
 
p
;

90 
p
.
x
 = 
r1
.
À·
;

91 
p
.
y
 = 
r1
.
t›
;

93 i‡(
	`PtInRe˘
(&
r2
, 
p
))

94  
TRUE
;

95 
p
.
y
 = 
r1
.
bŸtom
;

96 i‡(
	`PtInRe˘
(&
r2
, 
p
))

97  
TRUE
;

98 
p
.
x
 = 
r1
.
right
;

99 i‡(
	`PtInRe˘
(&
r2
, 
p
))

100  
TRUE
;

101 
p
.
y
 = 
r1
.
t›
;

102 i‡(
	`PtInRe˘
(&
r2
, 
p
))

103  
TRUE
;

104  
FALSE
;

105 
	}
}

108 
	$Upd©eS¸ìn
(
POINT
& 
p
)

110 
HDC
 
hDC
, 
hUpd©eDC
, 
hNewSaveDC
;

111 
HBITMAP
 
hUOldBmp
, 
hNewOldBmp
;

112 
BITMAP
 
Bôm≠
;

113 
RECT
 
ª˘
, 
ª˘1
, 
ª˘2
;

114 
Width
, 
Height
;

116 
	`GëObje˘
(
hDøgPõ˚
, (
BITMAP
), (
LPSTR
Ë&
Bôm≠
);

118 
ª˘1
.
À·
 = 
p
.
x
;

119 
ª˘1
.
t›
 = 
p
.
y
;

120 
ª˘1
.
right
 = 
p
.
x
 + 
Bôm≠
.
bmWidth
;

121 
ª˘1
.
bŸtom
 = 
p
.
y
 + 
Bôm≠
.
bmHeight
;

122 
ª˘2
.
À·
 = 
La°Poöt
.
x
;

123 
ª˘2
.
t›
 = 
La°Poöt
.
y
;

124 
ª˘2
.
right
 = 
La°Poöt
.
x
 + 
Bôm≠
.
bmWidth
;

125 
ª˘2
.
bŸtom
 = 
La°Poöt
.
y
 + 
Bôm≠
.
bmHeight
;

127 i‡(!
	`I¡î£˘
(
ª˘1
, 
ª˘2
))

129 
	`Re°‹eBackground
();

130 
	`SaveBackground
(
p
);

131 
	`ShowPõ˚
(
p
);

135 
hDC
 = 
	`GëDC
(
hWndMaö
);

137 
hNewSaveDC
 = 
	`Cª©eCom∑tibÀDC
(
hDC
);

138 
hNewOldBmp
 = (
HBITMAP
)
	`Sñe˘Obje˘
(
hNewSaveDC
,

139 
	`Cª©eCom∑tibÀBôm≠
(
hDC
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
));

141 
ª˘
.
À·
 = 
	`mö
(
ª˘1
.À·, 
ª˘2
.left);

142 
ª˘
.
t›
 = 
	`mö
(
ª˘1
.t›, 
ª˘2
.top);

143 
ª˘
.
bŸtom
 = 
	`max
(
ª˘1
.bŸtom, 
ª˘2
.bottom);

144 
ª˘
.
right
 = 
	`max
(
ª˘1
.right, 
ª˘2
.right);

146 
Width
 = 
ª˘
.
right
 -Ñe˘.
À·
;

147 
Height
 = 
ª˘
.
bŸtom
 -Ñe˘.
t›
;

149 
hUpd©eDC
 = 
	`Cª©eCom∑tibÀDC
(
hDC
);

150 
hUOldBmp
 = (
HBITMAP
)
	`Sñe˘Obje˘
(
hUpd©eDC
,

151 
	`Cª©eCom∑tibÀBôm≠
(
hDC
, 
Width
,
Height
));

154 
	`BôB…
(
hUpd©eDC
, 0, 0, 
Width
, 
Height
, 
hDC
, 
ª˘
.
À·
,Ñe˘.
t›
, 
SRCCOPY
);

157 
	`BôB…
(
hUpd©eDC
, 
	`abs
(
ª˘
.
À·
 - 
ª˘2
.À·),ábs‘e˘.
t›
 -Ñect2.top),

158 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hSaveDC
, 0, 0, 
SRCCOPY
);

161 
	`BôB…
(
hNewSaveDC
, 0, 0, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
,

162 
hUpd©eDC
, 
	`abs
(
ª˘
.
À·
 - 
ª˘1
.À·),ábs‘e˘.
t›
 -Ñect1.top),

163 
SRCCOPY
);

166 
	`DñëeObje˘
(
	`Sñe˘Obje˘
(
hSaveDC
, 
hDøgMask
));

168 
	`BôB…
(
hUpd©eDC
, 
	`abs
(
ª˘
.
À·
 - 
ª˘1
.À·),ábs‘e˘.
t›
 -Ñect1.top),

169 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hSaveDC
, 0, 0, 
SRCAND
);

172 
	`Sñe˘Obje˘
(
hSaveDC
, 
hDøgPõ˚
);

173 
	`BôB…
(
hUpd©eDC
, 
	`abs
(
ª˘
.
À·
 - 
ª˘1
.À·),ábs‘e˘.
t›
 -Ñect1.top),

174 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hSaveDC
, 0, 0, 
SRCINVERT
);

177 
	`BôB…
(
hDC
, 
ª˘
.
À·
,Ñe˘.
t›
, 
Width
, 
Height
, 
hUpd©eDC
, 0, 0, 
SRCCOPY
);

179 
	`Sñe˘Obje˘
(
hSaveDC
, 
hOldBmp
);

180 
	`DñëeDC
(
hSaveDC
);

181 
hSaveDC
 = 
hNewSaveDC
;

182 
hOldBmp
 = 
hNewOldBmp
;

183 
La°Poöt
 = 
p
;

184 
	`DñëeObje˘
(
	`Sñe˘Obje˘
(
hUpd©eDC
, 
hUOldBmp
));

185 
	`DñëeDC
(
hUpd©eDC
);

186 
	`Rñó£DC
(
hWndMaö
, 
hDC
);

187 
	}
}

189 
	$DøgSèπ
(
SQUARETYPE
 
squ¨e
, 
POINT
& 
poöt
)

191 
poöt
.
x
 -= 18;

192 
poöt
.
y
 -= 18;

194 
SèπPoöt
 = 
	`GëSqu¨eXY
(
squ¨e
);

196 
hDøgPõ˚
 = 
	`GëBôm≠H™dÀ
–
Bﬂrd
[
squ¨e
].
põ˚
, Bﬂrd[squ¨e].
cﬁ‹
 );

197 
hDøgMask
 = 
MaskAºay
[
Bﬂrd
[
squ¨e
].
põ˚
-1];

199 
hPªvCurs‹
 = 
	`SëCurs‹
(0);

200 
	`SëCœssW‹d
(
hWndMaö
, 
GCW_HCURSOR
, 0);

201 
	`SëC≠tuª
(
hWndMaö
);

202 
	`CÀ¨Squ¨e
(
squ¨e
);

203 
	`SaveBackground
(
poöt
);

204 
	`ShowPõ˚
(
poöt
);

205 
IsDøggög
 = 
TRUE
;

206 
	}
}

208 
	$DøgEnd
(
BOOL
 
VÆidMove
)

210 i‡(!
IsDøggög
)

212 i‡(
VÆidMove
)

213 
	`Re°‹eBackground
();

216 
	`LöeDDA
(
CurPoöt
.
x
, CurPoöt.
y
, 
SèπPoöt
.x, StartPoint.y,

217 
	`LINEDDAPROC
(
Rëu∫Home
), 
NULL
);

218 
	`Re°‹eBackground
();

220 
	`SëCurs‹
(
hPªvCurs‹
);

221 
	`SëCœssW‹d
(
hWndMaö
, 
GCW_HCURSOR
, 
	`WORD
(
hPªvCurs‹
));

222 
	`Rñó£C≠tuª
();

223 
IsDøggög
 = 
FALSE
;

224 
	}
}

226 
	$Døg
(
POINT
& 
p
)

228 
p
.
x
 -= 18;

229 
p
.
y
 -= 18;

230 
CurPoöt
 = 
p
;

231 
	`Upd©eS¸ìn
(
p
);

232 
	}
}

234 #¥agm®
¨gsu£d


235 
FAR
 
PASCAL
 
	$Rëu∫Home
(
X
, 
Y
, 
LPSTR
 
ÕD©a
)

237 
POINT
 
Poöt
;

238 
Cou¡
 = 
Anim©i⁄S≥ed
;

240 i‡(
Cou¡
 != 0)

242 
Cou¡
--;

245 
Cou¡
 = 
Anim©i⁄S≥ed
;

246 
Poöt
.
x
 = 
X
;

247 
Poöt
.
y
 = 
Y
;

248 
	`Upd©eS¸ìn
(
Poöt
);

249 
	}
}

252 
	$SlidePõ˚
(
SQUARETYPE
 
íd
, SQUARETYPE 
°¨t
)

254 
POINT
 
p1
 = 
	`GëSqu¨eXY
(
°¨t
);

255 
POINT
 
p2
;

257 i‡(
IsDøggög
)

258 
	`MesßgeBox
(
NULL
, "SlidePõ˚ cÆÀd bef‹êDøgEnd", "WChess", 
MB_OK
);

260 
hDøgPõ˚
 = 
	`GëBôm≠H™dÀ
–
Bﬂrd
[
°¨t
].
põ˚
, Bﬂrd[°¨t].
cﬁ‹
 );

261 
hDøgMask
 = 
MaskAºay
[
Bﬂrd
[
°¨t
].
põ˚
-1];

263 
hPªvCurs‹
 = 
	`SëCurs‹
(0);

264 
	`SëCœssW‹d
(
hWndMaö
, 
GCW_HCURSOR
, 0);

265 
	`CÀ¨Squ¨e
(
°¨t
);

266 
	`SaveBackground
(
p1
);

267 
	`ShowPõ˚
(
p1
);

269 
p2
 = 
	`GëSqu¨eXY
(
íd
);

270 
	`LöeDDA
(
p1
.
x
,Ö1.
y
, 
p2
.x,Ö2.y, 
	`LINEDDAPROC
(
Rëu∫Home
), 
NULL
);

271 
	`Upd©eS¸ìn
(
p2
);

272 
	`DñëeObje˘
(
	`Sñe˘Obje˘
(
hSaveDC
, 
hOldBmp
));

273 
	`DñëeDC
(
hSaveDC
);

274 
	`SëCurs‹
(
hPªvCurs‹
);

275 
	`SëCœssW‹d
(
hWndMaö
, 
GCW_HCURSOR
, 
	`WORD
(
hPªvCurs‹
));

276 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/edit.cpp

3 
	~<wödows.h
>

4 
	~<owl.h
>

5 
	~"wcdefs.h
"

6 
	~"edô.h
"

7 
	~"exã∫s.h
"

10 
	gTEdôB¨Wödow
::
	$TEdôB¨Wödow
–
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
ATôÀ
 ) : 
	$TWödow
(
AP¨ít
, 
ATôÀ
)

12 
Aâr
.
StyÀ
 = 
WS_CHILD
;

13 
Aâr
.
X
 = (3 * 
BORDERSIZE
Ë+ (
MAXBDSIZE
 * 
SQUARE_SIZE
Ë+ (2 * 
MYFRAMESIZE
);

14 
Aâr
.
Y
 = 
BORDERSIZE
;

16 
EdôB¨Re˘
.
right
 = 
Aâr
.
W
 = (
SQUARE_SIZE
*2) + 6;

17 
EdôB¨Re˘
.
bŸtom
 = 
Aâr
.
H
 = (
SQUARE_SIZE
 * 6) + 6;

18 
EdôB¨Re˘
.
À·
 = EdôB¨Re˘.
t›
 = 0;

19 
Sñe˘edIãm
 = 0;

20 
	}
}

23 
	gTEdôB¨Wödow
::
	$Paöt
–
HDC
 
hDC
, 
PAINTSTRUCT
 
_FAR
 & )

25 
HDC
 
	`hMem‹yDC
–
	`Cª©eCom∑tibÀDC
–
hDC
 ) );

27 
	`DøwFøme
–
hDC
, 
EdôB¨Re˘
, 
TRUE
 );

29 
BITMAP
 
Bôm≠
;

30 
	`GëObje˘
–
	`GëBôm≠H™dÀ
–
∑wn
, 
whôe
 ), (
BITMAP
), (
LPSTR
)&
Bôm≠
 );

32  
ôem
 = 0; item < 12; item++ ) {

33 
PIECETYPE
 
põ˚
 = (PIECETYPE)((
ôem
%6)+1);

34 
COLORTYPE
 
cﬁ‹
 = (
ôem
/6Ë? 
bœck
 : 
whôe
;

36 
HBITMAP
 
hBôm≠
 = 
	`GëBôm≠H™dÀ
–
põ˚
, 
cﬁ‹
 );

37 
HBITMAP
 
hMaskBmp
 = 
MaskAºay
[
ôem
%6];

38 
RECT
 
rc
;

40 
rc
.
t›
 = ((
ôem
%6Ë* 
SQUARE_SIZE
) + 3;

41 
rc
.
À·
 = ((
ôem
/6Ë* 
SQUARE_SIZE
) + 3;

43 
HBITMAP
 
hOldBmp
 = (HBITMAP)
	`Sñe˘Obje˘
–
hMem‹yDC
, 
hMaskBmp
 );

44 
	`BôB…
–
hDC
, 
rc
.
À·
,Ñc.
t›
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hMem‹yDC
, 0, 0, 
SRCAND
 );

45 
	`Sñe˘Obje˘
–
hMem‹yDC
, 
hBôm≠
 );

46 
	`BôB…
–
hDC
, 
rc
.
À·
,Ñc.
t›
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hMem‹yDC
, 0, 0, (
Sñe˘edIãm
 =
ôem
Ë? 
NOTSRCERASE
 : 
SRCINVERT
 );

47 
	`Sñe˘Obje˘
–
hMem‹yDC
, 
hOldBmp
 );

50 
	`DñëeDC
–
hMem‹yDC
 );

51 
	}
}

54 
	gTEdôB¨Wödow
::
	$WMLBuâ⁄Up
–
RTMesßge
 )

56 
POINT
 
Poöt
;

57 
i
, 
j
, 
ãmp
;

58 
RECT
 
Re˘
;

59 
BITMAP
 
Bôm≠
;

60 
HBITMAP
 
hBôm≠
, 
hOldBmp
, 
hMaskBmp
;

61 
HDC
 
hDC
 = 
	`GëDC
(
HWödow
);

62 
HDC
 
hMem‹yDC
 = 
	`Cª©eCom∑tibÀDC
(
hDC
);

64 
PªviousIãm
 = 
Sñe˘edIãm
;

66 
	`GëCurs‹Pos
–&
Poöt
 );

67 
	`S¸ìnToClõ¡
–
HWödow
, &
Poöt
 );

70  
ôem
 = 0, 
Sñe˘edIãm
 = -1; (item < 12) && (SelectedItem == -1); item++ ) {

72 
Re˘
.
t›
 = ((
ôem
%6Ë* 
SQUARE_SIZE
) + 3;

73 
Re˘
.
À·
 = ((
ôem
/6Ë* 
SQUARE_SIZE
) + 3;

74 
Re˘
.
bŸtom
 = Re˘.
t›
 + 
SQUARE_SIZE
;

75 
Re˘
.
right
 = Re˘.
À·
 + 
SQUARE_SIZE
;

77 if–
	`PtInRe˘
–&
Re˘
, 
Poöt
 ) )

78 
Sñe˘edIãm
 = 
ôem
;

81 if–(
Sñe˘edIãm
 =
PªviousIãm
) || (SelectedItem == -1) )

86 
PIECETYPE
 
põ˚
 = (PIECETYPE)((
PªviousIãm
 % 6) + 1);

87 
COLORTYPE
 
cﬁ‹
 = (
PªviousIãm
/6Ë? 
bœck
 : 
whôe
;

89 
hMaskBmp
 = 
MaskAºay
[
PªviousIãm
 % 6];

90 
Re˘
.
t›
 = ((
PªviousIãm
%6Ë* 
SQUARE_SIZE
) + 3;

91 
Re˘
.
À·
 = ((
PªviousIãm
/6Ë* 
SQUARE_SIZE
) + 3;

94 
	`GëObje˘
–
	`GëBôm≠H™dÀ
–
põ˚
, 
cﬁ‹
 ), (
BITMAP
), (
LPSTR
)&
Bôm≠
 );

96 
hOldBmp
 = (
HBITMAP
)
	`Sñe˘Obje˘
–
hMem‹yDC
, 
hMaskBmp
 );

97 
	`BôB…
–
hDC
, 
Re˘
.
À·
, Re˘.
t›
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hMem‹yDC
, 0, 0, 
SRCERASE
 );

98 
	`Sñe˘Obje˘
–
hMem‹yDC
, 
	`GëBôm≠H™dÀ
–
põ˚
, 
cﬁ‹
 ) );

99 
	`BôB…
–
hDC
, 
Re˘
.
À·
, Re˘.
t›
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hMem‹yDC
, 0, 0, 
SRCINVERT
 );

100 
	`Sñe˘Obje˘
–
hMem‹yDC
, 
hOldBmp
 );

103 
põ˚
 = (
PIECETYPE
)((
Sñe˘edIãm
 % 6) + 1);

104 
cﬁ‹
 = (
Sñe˘edIãm
/6Ë? 
bœck
 : 
whôe
;

105 
hBôm≠
 = ;

106 
hMaskBmp
 = 
MaskAºay
[
Sñe˘edIãm
 % 6];

107 
Re˘
.
t›
 = ((
Sñe˘edIãm
%6Ë* 
SQUARE_SIZE
) + 3;

108 
Re˘
.
À·
 = ((
Sñe˘edIãm
/6Ë* 
SQUARE_SIZE
) + 3;

110 
hOldBmp
 = (
HBITMAP
)
	`Sñe˘Obje˘
(
hMem‹yDC
, 
hMaskBmp
);

111 
	`BôB…
–
hDC
, 
Re˘
.
À·
, Re˘.
t›
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hMem‹yDC
, 0, 0, 
SRCAND
 );

112 
	`Sñe˘Obje˘
–
hMem‹yDC
, 
	`GëBôm≠H™dÀ
–
põ˚
, 
cﬁ‹
 ) );

113 
	`BôB…
–
hDC
, 
Re˘
.
À·
, Re˘.
t›
, 
Bôm≠
.
bmWidth
, Bôm≠.
bmHeight
, 
hMem‹yDC
, 0, 0, 
NOTSRCERASE
 );

114 
	`Sñe˘Obje˘
–
hMem‹yDC
, 
hOldBmp
 );

116 
	`DñëeDC
–
hMem‹yDC
 );

117 
	`Rñó£DC
–
HWödow
, 
hDC
 );

118 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/edit.h

3 #i‚de‡
_EDITBAR_H


4 
	#_EDITBAR_H


	)

6 
	$_CLASSDEF
(
TEdôB¨Wödow
)

8 ˛as†
	cTEdôB¨Wödow
: 
public
 
TWödow


10 
public
:

11 
	`TEdôB¨Wödow
–
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
ATôÀ
 );

13 
vútuÆ
 
	`Paöt
–
HDC
 
PaötDC
, 
PAINTSTRUCT
 
_FAR
 & 
PaötInfo
 );

14 
vútuÆ
 
	`WMLBuâ⁄Up
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
WM_LBUTTONUP
 ];

16 
vútuÆ
 
	$GëWödowCœss
–
WNDCLASS
& 
WndCœss
 ) {

17 
TWödow
::
	`GëWödowCœss
–
WndCœss
 );

18 
WndCœss
.
hbrBackground
 = (
HBRUSH
)
	`GëStockObje˘
–
LTGRAY_BRUSH
 );

21 
	$GëSñe˘edIãm
(Ë{  
Sñe˘edIãm
; 
	}
}

23 
	g¥iv©e
:

24 
Sñe˘edIãm
;

25 
RECT
 
	gEdôB¨Re˘
;

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/evalu.cpp

4 
	~<owl\owÕch.h
>

5 #¥agm®
hdr°›


7 
	~<m©h.h
>

8 
	~"wcdefs.h
"

9 
	~"exã∫s.h
"

11 
MAXTYPE
 
	gRoŸVÆue
;

12 
BOARDTYPE
 
	gBﬂrd
[0x78];

14 #unde‡
max


15 #unde‡
mö


16 
	#max
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

17 
	#mö
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

19 
	#VALIDSQUARE
–
squ¨e
 ) ( !–(squ¨eË& 0x88 ) )

	)

21 
	#TOLERANCE
 8

	)

22 
	#EXCHANGEVALUE
 32

	)

23 
	#ISOLATEDPAWN
 20

	)

24 
	#DOUBLEPAWN
 8

	)

25 
	#SIDEPAWN
 6

	)

26 
	#CHAINPAWN
 3

	)

27 
	#COVERPAWN
 3

	)

28 
	#NOTMOVEPAWN
 2

	)

29 
	#BISHOPBLOCKVALUE
 20

	)

30 
	#ROOKBEHINDPASSPAWN
 16

	)

33 
	tFILETYPE
;

34 
	tRANKTYPE
;

35 
	tSETOFFILE
;

38 
SETOFFILE
 
	m⁄e
, 
	mdob
;

39 } 
	tPAWNBITTYPE
[2];

42 
ajl
 
‰om
 
	gevÆu2
.
˝p


47 
	gRoŸVÆue
;

48 
BOARDTYPE
 
	gBﬂrd
[ 0x78 ];

49 
	gPosôi⁄VÆueTabÀ
[2][7][0x78];

56 
	gPõ˚VÆue
[7] = {0, 0x1000, 0x900, 0x4c0, 0x300, 0x300, 0x100};

57 c⁄° 
	gdi°™
[8] = { 3, 2, 1, 0, 0, 1, 2, 3 };

60 c⁄° 
	g∑wƒ™k
[8] = {0, 0, 0, 2, 4, 8, 30, 0};

61 c⁄° 
	g∑s•awƒ™k
[8] = {0, 0, 10, 20, 40, 60, 70, 0};

62 c⁄° 
	g∑wnfûeÁ˘‹
[8] = {0, 0, 2, 5, 6, 2, 0, 0};

63 c⁄° 
	gˇ°vÆue
[2] = {4, 32};

65 c⁄° 
SETOFFILE
 
	gfûebôèb
[8] = {1, 2, 4, 8, 0x10, 0x20, 0x40, 0x80};

66 
PAWNBITTYPE
 
	g∑wnbôt
[
MAXPLY
 + 2];

67 
PAWNBITTYPE
 *
	g∑wnbô
 = &
∑wnbôt
[1];

68 
	gtŸÆm©îül
, 
	g∑w¡ŸÆm©îül
, 
	gm©îül
;

71 
	gm©îüŒevñ
;

72 c⁄° 
	gsqu¨î™kvÆue
[8] = { 0, 0, 0, 0, 1, 2, 4, 4};

73 
COLORTYPE
 
	gãmpcﬁ‹
;

74 
	gãmp
, 
	gãmp2
;

82 
	$cou¡
(
SETOFFILE
 
b
)

84 
˙t
 = 0;

86  
b
 ) {

87 if–
b
 % 2 == 1 )

88 
˙t
++;

89 
b
 >>= 1;

91  
˙t
;

92 
	}
}

99 
	$∑wn°rvÆ
(
DEPTHTYPE
 
dïth
, 
COLORTYPE
 
cﬁ‹
)

101 
SETOFFILE
 
iso
;

103 
iso
 = 
∑wnbô
[
dïth
][
cﬁ‹
].
⁄e
 &

104 ~((
∑wnbô
[
dïth
][
cﬁ‹
].
⁄e
 << 1) | (pawnbit[depth][color].one

106  (-(
	`cou¡
(
∑wnbô
[
dïth
][
cﬁ‹
].
dob
Ë* 
DOUBLEPAWN
 +

107 
	`cou¡
(
iso
Ë* 
ISOLATEDPAWN
 + count(iso &

108 
∑wnbô
[
dïth
][
cﬁ‹
].
dob
Ë* 
ISOLATEDPAWN
 * 2));

109 
	}
}

116 
ölöe
 
	$Põ˚PosVÆ
(
PIECETYPE
 
põ˚
, 
COLORTYPE
 
cﬁ‹
, 
SQUARETYPE
 
squ¨e
)

118  (
Põ˚VÆue
[
põ˚
] + 
PVTabÀ
[
cﬁ‹
][põ˚][
squ¨e
]);

119 
	}
}

122 
	gm©ög
;

128 
	$CÆcPVTabÀ
()

130 
SETOFFILE
 
	tPAWNTABTYPE
[8];

132 
PAWNTABTYPE
 
∑w¡ab
[2];

134 
SETOFFILE
 
∑wnfûëab
, 
bô
, 
›∑s°ab
, 
behöd›∑ss
,

135 
À·sidëab
, 
rightsidëab
, 
sidëab
, 
À·chaöèb
,

136 
rightchaöèb
, 
chaöèb
, 
À·covîèb
, 
rightcovîèb
;

139 
©èckvÆue
[2][0x78];

141 
pvc⁄åﬁ
[2][5][0x78];

143 
COLORTYPE
 
losögcﬁ‹
;

144 
posvÆ
;

145 
©tvÆ
;

146 
FILETYPE
 
löe
;

147 
RANKTYPE
 
ønk
;

148 
di°
, 
kögdi°
;

149 
CASTTYPE
 
ˇ°
;

150 
dúe˘
;

151 
˙t
;

152 
°rvÆ
;

153 
COLORTYPE
 
cﬁ‹
, 
›pcﬁ‹
;

154 
PIECETYPE
 
põ˚cou¡
;

155 
SQUARETYPE
 
squ¨e
;

156 
DIRTYPE
 
dú
;

157 
EDGESQUARETYPE
 
sq
;

158 
ãmp
, 
ãmp2
;

161 
m©îül
 = 
∑w¡ŸÆm©îül
 = 
tŸÆm©îül
 = 
m©ög
 = 0;

163 
squ¨e
 = 0; square < 0x78; square++)

164 i‡(!(
squ¨e
 & 0x88))

165 i‡(
Bﬂrd
[
squ¨e
].
põ˚
 !
no_põ˚
)

166 i‡(
Bﬂrd
[
squ¨e
].
põ˚
 !
kög
)

168 
ãmp
 = 
Põ˚VÆue
[
Bﬂrd
[
squ¨e
].
põ˚
];

169 
tŸÆm©îül
 +
ãmp
;

170 i‡(
Bﬂrd
[
squ¨e
].
põ˚
 =
∑wn
)

171 
∑w¡ŸÆm©îül
 +
Põ˚VÆue
[
∑wn
];

172 i‡(
Bﬂrd
[
squ¨e
].
cﬁ‹
 =
whôe
Ë
ãmp
 = -temp;

173 
m©îül
 -
ãmp
;

175 
m©îüŒevñ
 = 
	`max
(0, 
tŸÆm©îül
 - 0x2000) / 0x100;

178 i‡(
m©îül
 < 0)

179 
losögcﬁ‹
 = 
whôe
;

181 
losögcﬁ‹
 = 
bœck
;

182 
m©ög
 = ((
tŸÆm©îül
 - 
	`abs
(
m©îül
)Ë/ 2 <
Põ˚VÆue
[
bish›
] * 2)

183 && (
	`abs
(
m©îül
Ë>
Põ˚VÆue
[
rook
] - Põ˚VÆue[
bish›
]);

185 
ønk
 = 0;Ñank < 8;Ñank++)

186 
löe
 = 0;Üine < 8;Üine++)

188 
squ¨e
 = (
ønk
 << 4Ë+ 
löe
;

189 
©tvÆ
 = 
	`max
(0, 8 - 3 * (
di°™
[
ønk
] + di°™[
löe
]));

192 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++)

194 
©èckvÆue
[
cﬁ‹
][
squ¨e
] = ((
squ¨î™kvÆue
[
ønk
] * 3 *

195 (
m©îüŒevñ
 + 8)Ë>> 5Ë+ 
©tvÆ
;

196 
squ¨e
 ^= 0x70;

199 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++)

201 
›pcﬁ‹
 = (
COLORTYPE
)(1 - 
cﬁ‹
);

202 
	`CÆcCa°lög
(
›pcﬁ‹
, &
ˇ°
);

203 i‡(
ˇ°
 !
shπ
 && 
m©îüŒevñ
 > 0)

205 
dú
 = 0; dir < 8; dir++)

207 
sq
 = 
Põ˚Tab
[
›pcﬁ‹
][0].
isqu¨e
 + 
DúTab
[
dú
];

208 i‡(!(
sq
 & 0x88))

209 
©èckvÆue
[
cﬁ‹
][
sq
] +((12 * (
m©îüŒevñ
 + 8)) >> 5);

214 
squ¨e
 = 0x77; square >=0; square--)

215 if(!(
squ¨e
 & 0x88))

216 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++)

217 
põ˚cou¡
 = 
rook
;Öõ˚cou¡ <
bish›
; (()piececount)++)

218 
pvc⁄åﬁ
[
cﬁ‹
][
põ˚cou¡
][
squ¨e
] = 0;

219 
squ¨e
 = 0x77; square >=0; square--)

220 if(!(
squ¨e
 & 0x88))

221 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++)

223 
dú
 = 7; dir >= 0; dir--)

225 i‡(
dú
 < 4)

226 
põ˚cou¡
 = 
rook
;

228 
põ˚cou¡
 = 
bish›
;

235 
˙t
 = 0;

236 
sq
 = 
squ¨e
;

237 
dúe˘
 = 1;

240 
sq
 +
DúTab
[
dú
];

241 i‡(
sq
 & 0x88Ë
TEN
;

242 
ãmp
 = 
©èckvÆue
[
cﬁ‹
][
sq
];

243 i‡(
dúe˘
)

244 
˙t
 +
ãmp
;

246 
˙t
 +(
ãmp
 >> 1);

247 i‡(
Bﬂrd
[
sq
].
põ˚
 !
no_põ˚
)

248 i‡((
Bﬂrd
[
sq
].
põ˚
 !
põ˚cou¡
)

249 && (
Bﬂrd
[
sq
].
põ˚
 !
quìn
))

250 
dúe˘
 = 0;

251 } 
Bﬂrd
[
sq
].
põ˚
 !
∑wn
);

252 
TEN
: 
pvc⁄åﬁ
[
cﬁ‹
][
põ˚cou¡
][
squ¨e
] +(
˙t
 >> 2);

257 
squ¨e
 = 0x77; square >= 0; square--)

258 i‡(!(
squ¨e
 & 0x88))

260 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++)

262 
›pcﬁ‹
 = (
COLORTYPE
)(1 - 
cﬁ‹
);

263 
löe
 = 
squ¨e
 & 7;

264 
ønk
 = 
squ¨e
 >> 4;

265 i‡(
cﬁ‹
 =
bœck
Ë
ønk
 = 7 -Ñank;

266 
di°
 = 
di°™
[
ønk
] + di°™[
löe
];

267 
kögdi°
 = 
	`abs
((
squ¨e
 >> 4Ë- (
Põ˚Tab
[
›pcﬁ‹
][0].
isqu¨e


268 >> 4)Ë+ ((
squ¨e
 - 
Põ˚Tab
[
›pcﬁ‹
][0].
isqu¨e
) & 7);

269 
põ˚cou¡
 = 
kög
;Öõ˚cou¡ <
∑wn
; (()piececount)++)

271 
posvÆ
 = 0;

273 i‡(
m©ög
 && (
põ˚cou¡
 !
∑wn
))

275 i‡(
põ˚cou¡
 =
kög
)

276 i‡(
cﬁ‹
 =
losögcﬁ‹
)

278 
posvÆ
 = 128 - 16 * 
di°™
[
ønk
]

279 - 12 * 
di°™
[
löe
];

280 i‡(
di°™
[
ønk
] == 3)

281 
posvÆ
 -= 16;

285 
posvÆ
 = 128 - 4 * 
kögdi°
;

286 i‡((
di°™
[
ønk
] >2Ë|| (di°™[
löe
] == 3))

287 
posvÆ
 -= 16;

292 
ãmp
 = 
pvc⁄åﬁ
[
cﬁ‹
][
rook
][
squ¨e
];

293 
ãmp2
 = 
pvc⁄åﬁ
[
cﬁ‹
][
bish›
][
squ¨e
];

295 
põ˚cou¡
)

297 
kög
 :

298 i‡(
m©îüŒevñ
 <0Ë
posvÆ
 = -2 * 
di°
;

300 
quìn
 :

301 
posvÆ
 = (
ãmp
 + 
ãmp2
) >> 2;

303 
rook
 :

304 
posvÆ
 = 
ãmp
;

306 
bish›
 :

307 
posvÆ
 = 
ãmp2
;

309 
knight
 :

310 
˙t
 = 0;

311 
dú
 = 0; dir < 8; dir++)

313 
sq
 = 
squ¨e
 + 
KnightDú
[
dú
];

314 i‡(!(
sq
 & 0x88))

315 
˙t
 +
©èckvÆue
[
cﬁ‹
][
sq
];

317 
posvÆ
 = (
˙t
 >> 1Ë- 
di°
 * 3;

319 
∑wn
 :

320 i‡((
ønk
 != 0) && (rank != 7))

321 
posvÆ
 = 
∑wƒ™k
[
ønk
] +

322 
∑wnfûeÁ˘‹
[
löe
] * (
ønk
 + 2) - 12;

325 
PVTabÀ
[
cﬁ‹
][
põ˚cou¡
][
squ¨e
] = 
posvÆ
;

332 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++)

333 
ønk
 = 0;Ñank < 8;Ñank++)

334 
∑w¡ab
[
cﬁ‹
][
ønk
] = 0;

335 
squ¨e
 = 0x77; square >= 0; square--)

336 i‡(!(
squ¨e
 & 0x88))

337 i‡(
Bﬂrd
[
squ¨e
].
põ˚
 =
∑wn
)

339 
ønk
 = 
squ¨e
 >> 4;

340 i‡(
Bﬂrd
[
squ¨e
].
cﬁ‹
 =
bœck
Ë
ønk
 = 7 -Ñank;

341 
∑w¡ab
[
Bﬂrd
[
squ¨e
].
cﬁ‹
][
ønk
] |=

342 
fûebôèb
[
squ¨e
 & 7];

344 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++)

346 
∑wnbô
[-1][
cﬁ‹
].
⁄e
 =Öawnbô[-1][cﬁ‹].
dob
 = 0;

347 
ønk
 = 1;Ñank < 7;Ñank++)

349 
ãmp
 = 
∑w¡ab
[
cﬁ‹
][
ønk
];

350 
∑wnbô
[-1][
cﬁ‹
].
dob
 |’awnbô[-1][cﬁ‹].
⁄e
 & 
ãmp
);

351 
∑wnbô
[-1][
cﬁ‹
].
⁄e
 |
ãmp
;

355 
RoŸVÆue
 = 
	`∑wn°rvÆ
(-1, 
Pœyî
Ë-Öawn°rvÆ(-1, 
Oµ⁄ít
);

358 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++)

360 
›pcﬁ‹
 = (
COLORTYPE
)(1 - 
cﬁ‹
);

361 
∑wnfûëab
 = 
À·sidëab
 = 
rightsidëab
 = 
behöd›∑ss
 = 0;

362 
›∑s°ab
 = 0xff;

363 
ønk
 = 1;Ñank < 7;Ñank++)

366 
›∑s°ab
 &(~(
∑wnfûëab
 | 
À·sidëab
 | 
rightsidëab
));

368 
behöd›∑ss
 |(
›∑s°ab
 & 
∑w¡ab
[
›pcﬁ‹
][7 - 
ønk
]);

370 
À·chaöèb
 = 
À·sidëab
;

371 
rightchaöèb
 = 
rightsidëab
;

372 
∑wnfûëab
 = 
∑w¡ab
[
cﬁ‹
][
ønk
];

374 
À·sidëab
 = (
∑wnfûëab
 << 1) & 0xff;

375 
rightsidëab
 = (
∑wnfûëab
 >> 1) & 0xff;

376 
sidëab
 = 
À·sidëab
 | 
rightsidëab
;

377 
chaöèb
 = 
À·chaöèb
 | 
rightchaöèb
;

379 
ãmp
 = 
∑w¡ab
[
cﬁ‹
][
ønk
+1];

380 
À·covîèb
 = (
ãmp
 << 1) & 0xff;

381 
rightcovîèb
 = (
ãmp
 >> 1 ) & 0xff;

382 
sq
 = 
ønk
 << 4;

383 i‡(
cﬁ‹
 =
bœck
Ë
sq
 ^= 0x70;

384 
bô
 = 1;

385 
bô
)

387 
°rvÆ
 = 0;

388 i‡(
bô
 & 
sidëab
)

389 
°rvÆ
 = 
SIDEPAWN
;

390 i‡(
bô
 & 
chaöèb
)

391 
°rvÆ
 = 
CHAINPAWN
;

392 i‡(
bô
 & 
À·covîèb
)

393 
°rvÆ
 +
COVERPAWN
;

394 i‡(
bô
 & 
rightcovîèb
)

395 
°rvÆ
 +
COVERPAWN
;

396 i‡(
bô
 & 
∑wnfûëab
)

397 
°rvÆ
 +
NOTMOVEPAWN
;

398 
PVTabÀ
[
cﬁ‹
][
∑wn
][
sq
] +
°rvÆ
;

399 i‡((
m©îüŒevñ
 <0Ë|| (
›pcﬁ‹
 !
ProgømCﬁ‹
))

401 i‡(
bô
 & 
›∑s°ab
)

402 
PVTabÀ
[
›pcﬁ‹
][
∑wn
][
sq
] +
∑s•awƒ™k
[7 - 
ønk
];

403 i‡(
bô
 & 
behöd›∑ss
)

405 
ãmp
 = 
sq
 ^ 0x10;

406 
ãmpcﬁ‹
 = 
bœck
;Åempcﬁ‹ >
whôe


407 ; (()
ãmpcﬁ‹
)--)

409 
PVTabÀ
[
ãmpcﬁ‹
][
rook
][
sq
] +=

410 
ROOKBEHINDPASSPAWN
;

411 i‡(
ønk
 == 6)

412 
PVTabÀ
[
ãmpcﬁ‹
][
rook
][
ãmp
] +=

413 
ROOKBEHINDPASSPAWN
;

417 
sq
++;

418 
bô
 = (bit << 1) & 0xff;

423 
sq
 = 3; sq < 5; sq ++)

425 i‡((
Bﬂrd
[
sq
 + 0x10].
põ˚
 =
∑wn
Ë&& (Bﬂrd[sq + 0x10].
cﬁ‹


426 =
whôe
))

427 
PVTabÀ
[
whôe
][
bish›
][
sq
 + 0x20] -
BISHOPBLOCKVALUE
;

428 i‡((
Bﬂrd
[
sq
+0x60].
põ˚
 =
∑wn
Ë&& (Bﬂrd[sq+0x60].
cﬁ‹
 =
bœck
))

429 
PVTabÀ
[
bœck
][
bish›
][
sq
+0x50] -
BISHOPBLOCKVALUE
;

431 
squ¨e
 = 0x77; square >= 0; square--)

432 i‡(!(
squ¨e
 & 0x88))

433 i‡(
Bﬂrd
[
squ¨e
].
põ˚
 !
no_põ˚
)

434 i‡(
Bﬂrd
[
squ¨e
].
cﬁ‹
 =
Pœyî
)

435 
RoŸVÆue
 +=

436 
	`Põ˚PosVÆ
(
Bﬂrd
[
squ¨e
].
põ˚
, 
Pœyî
, square);

438 
RoŸVÆue
 -=

439 
	`Põ˚PosVÆ
(
Bﬂrd
[
squ¨e
].
põ˚
, 
Oµ⁄ít
, square);

440 
	}
}

444 
	gvÆue
;

445 
SQUARETYPE
 
	gˇ°squ¨e
, 
	gc‹√rsqu¨e
, 
	gïsqu¨e
;

452 
ölöe
 
	$de˝awn°rvÆ
(
COLORTYPE
 
cﬁ‹
, 
FILETYPE
 
löe
)

454 
ãmp
 = ~
fûebôèb
[
löe
];

455 
∑wnbô
[
Dïth
][
cﬁ‹
].
⁄e
 = (∑wnbô[Dïth][cﬁ‹].⁄ê& 
ãmp
) |

456 
∑wnbô
[
Dïth
][
cﬁ‹
].
dob
;

457 
∑wnbô
[
Dïth
][
cﬁ‹
].
dob
 &
ãmp
;

458  (
	`∑wn°rvÆ
(
Dïth
, 
cﬁ‹
) -Öawnstrval(Depth - 1, color));

459 
	}
}

466 
	$movïawn°rvÆ
(
COLORTYPE
 
cﬁ‹
, 
FILETYPE
 
√w1
, FILETYPE 
ﬁd
)

468 
ãmp
 = 
fûebôèb
[
√w1
];

469 
ãmp2
 = ~
fûebôèb
[
ﬁd
];

470 
∑wnbô
[
Dïth
][
cﬁ‹
].
dob
 |’awnbô[Dïth][cﬁ‹].
⁄e
 & 
ãmp
);

471 
∑wnbô
[
Dïth
][
cﬁ‹
].
⁄e
 = (’awnbô[Dïth][cﬁ‹].⁄ê& 
ãmp2
) |

472 
∑wnbô
[
Dïth
][
cﬁ‹
].
dob
Ë| 
ãmp
;

473 
∑wnbô
[
Dïth
][
cﬁ‹
].
dob
 &
ãmp2
;

474  (
	`∑wn°rvÆ
(
Dïth
, 
cﬁ‹
) -Öawnstrval(Depth - 1, color));

475 
	}
}

483 
	$SètEvÆu
(
MOVETYPE
 *
move
)

485 
vÆue
 = 0;

486 i‡(
move
->
•e
)

487 i‡(
move
->
movpõ˚
 =
kög
)

489 
	`GíCa°Squ¨e
(
move
->
√w1
, &
ˇ°squ¨e
, &
c‹√rsqu¨e
);

490 
vÆue
 = 
	`Põ˚PosVÆ
(
rook
, 
Pœyî
, 
ˇ°squ¨e
) -

491 
	`Põ˚PosVÆ
(
rook
,
Pœyî
, 
c‹√rsqu¨e
);

492 i‡(
move
->
√w1
 > move->
ﬁd
)

493 
vÆue
 +
ˇ°vÆue
[
shπ
-1];

495 
vÆue
 +
ˇ°vÆue
[
 g
-1];

497 i‡(
move
->
movpõ˚
 =
∑wn
)

499 
ïsqu¨e
 = 
move
->
√w1
 - 
PawnDú
[
Pœyî
];

500 
vÆue
 = 
	`Põ˚PosVÆ
(
∑wn
, 
Oµ⁄ít
, 
ïsqu¨e
);

503 
vÆue
 = 
	`Põ˚PosVÆ
(
move
->
movpõ˚
, 
Pœyî
, move->
ﬁd
) -

504 
	`Põ˚PosVÆ
(
∑wn
, 
Pœyî
, 
move
->
ﬁd
) +

505 
	`de˝awn°rvÆ
(
Pœyî
, 
move
->
ﬁd
 & 7);

506 i‡(
move
->
c⁄ã¡
 !
no_põ˚
)

508 
vÆue
 +
	`Põ˚PosVÆ
(
move
->
c⁄ã¡
, 
Oµ⁄ít
, move->
√w1
);

510 i‡(
	`abs
(
MaöEvÆu
) >= 0x100)

511 i‡(
move
->
c⁄ã¡
 !
∑wn
)

512 i‡((
ProgømCﬁ‹
 =
Oµ⁄ít
Ë=(
MaöEvÆu
 >= 0))

513 
vÆue
 -
EXCHANGEVALUE
;

515 
∑wnbô
[
Dïth
][
bœck
] =Öawnbit[Depth - 1][black];

516 
∑wnbô
[
Dïth
][
whôe
] =Öawnbit[Depth - 1][white];

517 i‡((
move
->
movpõ˚
 =
∑wn
Ë&& ((move->
c⁄ã¡
 !
no_põ˚
)

518 || 
move
->
•e
))

519 
vÆue
 +
	`movïawn°rvÆ
(
Pœyî
, 
move
->
√w1
 & 7, move->
ﬁd
 & 7);

520 i‡((
move
->
c⁄ã¡
 =
∑wn
Ë|| move->
•e
 && (move->
movpõ˚
 ==Öawn))

521 
vÆue
 -
	`de˝awn°rvÆ
(
Oµ⁄ít
, 
move
->
√w1
 & 7);

523  (
vÆue
 + 
	`Põ˚PosVÆ
(
move
->
movpõ˚
, 
Pœyî
, move->
√w1
)-

524 
	`Põ˚PosVÆ
(
move
->
movpõ˚
, 
Pœyî
, move->
ﬁd
));

525 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/externs.h

3 #i‚de‡
__EXTERNS_H


4 
	#__EXTERNS_H


	)

6 
	~"wcdefs.h
"

7 
	~"öfo.h
"

9 
COLORTYPE
 
Oµ⁄ít
;

10 
PIECETAB
 
Põ˚Tab
[][16];

11 
BOARDTYPE
 
Bﬂrd
[0x78];

12 
BYTE
 
WhôeSqu¨eCﬁ‹s
[];

13 
BYTE
 
BœckSqu¨eCﬁ‹s
[];

14 
buf
[];

16 
PTInfoWödow
 
TInfo
;

17 
HBRUSH
 
hBœckBrush
;

18 
HBRUSH
 
hWhôeBrush
;

19 
BOOL
 
ShowBe°Löe
;

20 
BOOL
 
Tu∫ed
;

21 
HWND
 
hWndMaö
;

22 
HBITMAP
 
Põ˚BmpAºay
[][2];

23 
HBITMAP
 
MaskAºay
[];

24 
LEVELTYPE
 
Levñ
;

25 
AvîageTime
;

26 
COLORTYPE
 
RunCﬁ‹
;

27 
BYTE
 
MaxLevñ
;

28 
COLORTYPE
 
CompuãrCﬁ‹
;

29 
BORDERSIZE
;

30 
CHARSIZE
;

31 
LINESIZE
;

32 
BOOL
 
Edôög
;

33 
COLORTYPE
 
Pœyî
;

34 
COLORTYPE
 
ProgømCﬁ‹
;

35 
MAXTYPE
 
MaöEvÆu
;

36 
PVTabÀ
[2][7][0x78];

37 
DúTab
[];

38 
KnightDú
[];

39 
PawnDú
[];

40 
DEPTHTYPE
 
Dïth
;

41 
INFOXSIZE
, 
INFOYSIZE
;

42 
Offi˚rNo
[];

43 
PawnNo
[];

44 
MOVETYPE
 *
MovTab
;

45 
MOVETYPE
 
ZîoMove
;

46 
Põ˚VÆue
[];

47 
CLOCKTYPE
 
ChessTime
[];

48 
BOOL
 
Mu…iMove
, 
AutoPœy
, 
SögÀSãp
;

49 
MoveNo
;

50 
CLOCKTYPE
 
ChessClock
;

51 
BOOL
 
A«lysis
, 
O∑n
;

52 
NODEVAL
 
Nodes
;

53 
CASTMOVETYPE
 
Ca°Move
[2][2];

54 
MAXTYPE
 
RoŸVÆue
;

55 
MOVETYPE
 
KeyMove
;

56 
BOARDIDTYPE
 
Di•œy
[];

57 
LINETYPE
 
HötLöe
;

58 
MAXTYPE
 
HötEvÆu
;

59 
MOVETYPE
 
Next
;

60 
MOVETYPE
 
PœyîMove
;

61 
BOOL
 
CompuãrThökög
;

62 
LINETYPE
 
MaöLöe
;

63 
MaxDïth
;

64 
HCURSOR
 
hWaôCurs‹
;

65 
HMENU
 
ThökMíu
;

66 
HMENU
 
MaöMíu
;

67 
BOOL
 
Ru¬ög
;

68 
BOOL
 
GŸVÆidMove
;

69 
BOOL
 
GameOvî
;

70 
EndGameMesßge
[];

71 
BOOL
 
NoCompuãrMove
;

72 
BOOL
 
SoundOn
;

73 
WORD
 
MesßgeToPo°
;

77 
GíCa°Squ¨e
(
SQUARETYPE
 
√w1
, SQUARETYPE *
ˇ°squ¨e
, SQUARETYPE *
c‹√rsqu¨e
);

78 
CÀ¨Bﬂrd
();

79 
Pîf‹m
(
MOVETYPE
 *, 
BOOL
);

80 
BOOL
 
EqMove
(
MOVETYPE
 *
a
, MOVETYPE *
b
);

81 
CÆcPõ˚Tab
();

82 
GíCa°Squ¨e
(
SQUARETYPE
, SQUARETYPE*, SQUARETYPE*);

87 
CÀ¨Di•œy
();

88 
CÀ¨Squ¨e
(
SQUARETYPE
 
squ¨e
);

89 
CÀ¨InfoWödow
();

90 
DøwFøme
(
HDC
, 
RECT
&, 
BOOL
=
FALSE
);

91 
POINT
 
GëSqu¨eXY
(
SQUARETYPE
);

92 
Eº‹
(*);

93 
Cﬁ‹ToPœy
(
COLORTYPE
);

94 
InôDi•œy
();

95 
PrötBe°Move
(
MOVETYPE
 *
maölöe
, 
MAXTYPE
 
maöevÆu
);

96 
PrötCurLevñ
();

97 
PrötNodes
(
NODEVAL
 *, );

98 
W¨nög
(*);

99 
PrötMove
(, 
COLORTYPE
, 
MOVETYPE
 *, );

100 
Upd©eBﬂrd
();

101 
CÀ¨Be°Löe
();

102 
O≥nögLibMsg
();

103 *
MoveSå
(
MOVETYPE
 *);

104 
CÀ¨Mesßge
();

105 
PrötBﬂrd
();

106 
SQUARETYPE
 
GëVÆidSqu¨e
(
POINT
, 
COLORTYPE
, 
BOOL
);

107 
DøwInvîãdBôm≠
(
SQUARETYPE
);

108 
DøwN‹mÆBôm≠
(
SQUARETYPE
);

109 
HideAâacks
();

110 
Mesßge
(*);

113 
DøgSèπ
(
SQUARETYPE
, 
POINT
&);

114 
DøgEnd
(
BOOL
);

115 
Døg
(
POINT
&);

116 
SlidePõ˚
(
SQUARETYPE
, SQUARETYPE);

121 
CÆcPVTabÀ
();

122 
SètEvÆu
(
MOVETYPE
 *
move
);

127 
Aâacks
(
COLORTYPE
 
acﬁ‹
, 
SQUARETYPE
 
squ¨e
);

128 
Põ˚Aâacks
(
PIECETYPE
, 
COLORTYPE
, 
SQUARETYPE
, SQUARETYPE);

129 
CÆcCa°lög
(
COLORTYPE
 
öcﬁ‹
, 
CASTDIRTYPE
 *
ˇ°
);

130 
CÆcAâackTab
();

131 
FIFTYTYPE
 
Fi·yMoveC¡
();

132 
REPEATTYPE
 
Rïëôi⁄
(
immedüã
);

133 
KûlMovGí
(
MOVETYPE
 *
move
);

134 
InôMovGí
();

135 
MovGí
();

140 
SaveGame
(*
ßvefûe
);

141 
Re°‹eGame
(*);

144 
FödMove
(
maxÀvñ
);

147 
InôNode
(
NODEVAL
*);

148 
TakeBackMove
(
MOVETYPE
 *
move
);

149 
MakeMove
(
MOVETYPE
 *);

150 
IncNode
(
NODEVAL
 *
nodes
);

151 
E¡îKeyMove
();

152 
SèπA«lysis
();

153 
Re£tMoves
();

154 
InôChessTime
();

155 
CÀ¨Höt
();

156 
Adju°Moves
();

157 
E¡îMove
(
MOVETYPE
 *
move
);

158 
FœshMove
(
MOVETYPE
 *
move
);

159 
St‹eMoves
();

160 
ShowHöt
();

161 
BOOL
 
MoveCheck
(
SQUARETYPE
, SQUARETYPE);

162 
DoSlideMove
(
MOVETYPE
&);

165 
Re£tNewPos
();

166 
NewGame
();

167 
In£πPõ˚
(
PIECETYPE
 
p
, 
COLORTYPE
 
c
, 
SQUARETYPE
 
sq
);

168 
CÀ¨PVTabÀ
();

169 
BOOL
 
Undo
();

170 
BOOL
 
Redo
();

171 
FödHötMove
();

172 
TÆk
();

173 
ProgømMove
();

174 
QuôProgøm
();

177 
InôTime
(
CLOCKTYPE
 *
˛ock
);

178 
SèπTime
(
CLOCKTYPE
 *);

179 
St›Time
(
CLOCKTYPE
 *);

180 
Di•œyTime
();

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/info.cpp

3 
	~<owl.h
>

4 
	~<°©ic.h
>

5 
	~"wcdefs.h
"

6 
	~"öfo.h
"

7 
	~"exã∫s.h
"

9 
	gLEFTMARGIN
 = 6;

10 
	gSEPERATOR
 = 4;

11 
	#MAXLINE
 (
INFOXSIZE
 - 
LEFTMARGIN
 -1)

	)

13 
	#COLORX
 (
LEFTMARGIN
 + 
CHARSIZE
 * 6)

	)

14 
	#COLORY
 (
SEPERATOR
 + 
MYFRAMESIZE
)

	)

15 
	#COLORW
 (
CHARSIZE
 * 6)

	)

16 
	#TIMERX
 (
LEFTMARGIN
 + 
CHARSIZE
 * 6)

	)

17 
	#TIMERY
 (
COLORY
 + 
LINESIZE
 + 
SEPERATOR
)

	)

18 
	#TIMERW
 (
MAXLINE
 - 
TIMERX
)

	)

19 
	#WHITEINFOX
 (
LEFTMARGIN
 + 
CHARSIZE
 * 7)

	)

20 
	#WHITEINFOY
 (
TIMERY
 + 
LINESIZE
 + 
SEPERATOR
 * 2)

	)

21 
	#WHITEINFOW
 (
MAXLINE
 - 
WHITEINFOX
)

	)

22 
	#BLACKINFOX
 (
WHITEINFOX
)

	)

23 
	#BLACKINFOY
 (
WHITEINFOY
 + 
LINESIZE
 + 
SEPERATOR
)

	)

24 
	#BLACKINFOW
 (
WHITEINFOW
)

	)

25 
	#LEVELX
 (
LEFTMARGIN
 + 
CHARSIZE
 * 7)

	)

26 
	#LEVELY
 (
BLACKINFOY
 + 
LINESIZE
 + 
SEPERATOR
)

	)

27 
	#LEVELW
 (
MAXLINE
 - 
LEVELX
)

	)

28 
	#VALUEX
 (
LEFTMARGIN
 + 
CHARSIZE
 * 7)

	)

29 
	#VALUEY
 (
LEVELY
 + 
LINESIZE
 + 
SEPERATOR
 * 2)

	)

30 
	#VALUEW
 (
MAXLINE
 - 
VALUEX
)

	)

31 
	#NODEX
 (
LEFTMARGIN
 + 
CHARSIZE
 * 8)

	)

32 
	#NODEY
 (
VALUEY
 + 
LINESIZE
 + 
SEPERATOR
)

	)

33 
	#NODEW
 (
MAXLINE
 - 
NODEX
)

	)

34 
	#SECX
 (
LEFTMARGIN
 + 
CHARSIZE
 * 7)

	)

35 
	#SECY
 (
NODEY
 + 
LINESIZE
 + 
SEPERATOR
)

	)

36 
	#SECW
 (
MAXLINE
 - 
SECX
)

	)

37 
	#DEPTHY
 (
SECY
 + 
LINESIZE
 + 
SEPERATOR
)

	)

38 
	#DEPTHX
 (
LEFTMARGIN
 + 
CHARSIZE
 * 7)

	)

39 
	#DEPTHW
 (
MAXLINE
 - 
DEPTHX
)

	)

40 
	#STATBESTY
 (
DEPTHY
 + 
LINESIZE
 + 
SEPERATOR
 * 2)

	)

41 
	#BESTX
 (
LEFTMARGIN
)

	)

42 
	#BESTY
 (
STATBESTY
 + 
LINESIZE
 + 1)

	)

43 
	#BESTW
 (
MAXLINE
 - 
LEFTMARGIN
)

	)

44 
	#BESTH
 (
LINESIZE
 * 3 + 
SEPERATOR
 * 3 - 9)

	)

45 
	#MESSX
 (
LEFTMARGIN
)

	)

46 
	#MESSY
 (
BESTY
 + 
BESTH
 + 
SEPERATOR
 * 2)

	)

47 
	#MESSW
 (
MAXLINE
 - 
MESSX
)

	)

50 
	#Em±ySå
 ""

	)

55 
	gTNoEø£BkGndSètic
::
	$TNoEø£BkGndSètic
–
PTWödows
 
AP¨ít
, 
AnId
, 
LPSTR
 
ATôÀ
, 
X
, 
Y
, 
W
, 
H
, 
WORD
 
ATextLí
, 
PTModuÀ
 
AModuÀ
 = 
NULL
 )

56 : 
	$TSètic
–
AP¨ít
, 
AnId
, 
ATôÀ
, 
X
, 
Y
, 
W
, 
H
, 
ATextLí
 ) {

57 
DoEø£
 = 
åue
;

58 
La°Lí
 = 0;

59 
	}
}

61 
	gTNoEø£BkGndSètic
::
	$SëText
–
LPSTR
 
ãxt
 )

63 
Lí
 = 
	`°æí
(
ãxt
);

65 if–
Lí
 < 
La°Lí
 )

66 
DoEø£
 = 
åue
;

68 
TSètic
::
	`SëText
(
ãxt
);

69 
La°Lí
 = 
Lí
;

70 
	}
}

72 
	gTNoEø£BkGndSètic
::
	$WMEø£BkGnd
–
RTMesßge
 
msg
 )

74 if–!
DoEø£
 ) {

75 
msg
.
Resu…
 = 0;

79 
HDC
 
hDC
 = 
	`HDC
–
msg
.
WP¨am
 );

80 
RECT
 
Re˘
;

81 
HBRUSH
 
hOldBrush
 = (HBRUSH)
	`Sñe˘Obje˘
–
hDC
, 
	`GëStockObje˘
–
LTGRAY_BRUSH
 ) );

83 
	`GëClõ¡Re˘
–
HWödow
, &
Re˘
 );

84 
	`P©B…
–
hDC
, 
Re˘
.
À·
, Re˘.
t›
, Re˘.
right
 - Re˘.À·, Re˘.
bŸtom
 - Re˘.t›, 
PATCOPY
 );

85 
	`Sñe˘Obje˘
–
hDC
, 
hOldBrush
 );

86 
DoEø£
 = 
Ál£
;

88 
msg
.
Resu…
 = 1;

89 
	}
}

93 
	gTInfoWödow
::
	$TInfoWödow
–
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
ATôÀ
 ) : 
	$TWödow
–
AP¨ít
, 
ATôÀ
 )

95 
ãmp
;

97 
Aâr
.
StyÀ
 |
WS_CHILD
 | 
WS_VISIBLE
;

98 
Aâr
.
X
 = (3 * 
BORDERSIZE
Ë+ (
MAXBDSIZE
 * 
SQUARE_SIZE
Ë+ (2 * 
MYFRAMESIZE
);

99 
Aâr
.
Y
 = 
BORDERSIZE
;

100 
LEFTMARGIN
 = 
MYFRAMESIZE
 + 
CHARSIZE
/2;

101 
SEPERATOR
 = 
LINESIZE
/4;

102 
INFOXSIZE
 = (28 * 
CHARSIZE
Ë+ (2 * 
LEFTMARGIN
);

103 
INFOYSIZE
 = 
MESSY
 + 
LINESIZE
 + 
SEPERATOR
 + 
MYFRAMESIZE
;

104 
ãmp
 = 
MAXBDSIZE
 * 
SQUARE_SIZE
 + (2 * 
MYFRAMESIZE
);

105 
INFOYSIZE
 = (
ãmp
 > INFOYSIZE) ?Åemp : INFOYSIZE;

106 
InfoRe˘
.
right
 = 
Aâr
.
W
 = 
INFOXSIZE
;

107 
InfoRe˘
.
bŸtom
 = 
Aâr
.
H
 = 
INFOYSIZE
;

108 
InfoRe˘
.
À·
 = InfoRe˘.
t›
 = 0;

110 
√w
 
	`TSètic
–
this
, -1, " Tu∫:", 
LEFTMARGIN
, 
COLORY
, 
CHARSIZE
 * 6, 
LINESIZE
, 5 );

111 
√w
 
	`TSètic
–
this
, -1, " Whôe:", 
LEFTMARGIN
, 
WHITEINFOY
, 
CHARSIZE
 * 7, 
LINESIZE
, 4 );

112 
√w
 
	`TSètic
–
this
, -1, " Bœck:", 
LEFTMARGIN
, 
BLACKINFOY
, 
CHARSIZE
 * 7, 
LINESIZE
, 6 );

113 
√w
 
	`TSètic
–
this
, -1, " Time:", 
LEFTMARGIN
, 
TIMERY
, 
CHARSIZE
 * 6, 
LINESIZE
, 5 );

114 
√w
 
	`TSètic
–
this
, -1, " Levñ:", 
LEFTMARGIN
, 
LEVELY
, 
CHARSIZE
 * 13, 
LINESIZE
, 12 );

115 
√w
 
	`TSètic
–
this
, -1, " VÆue:", 
LEFTMARGIN
, 
VALUEY
, 
CHARSIZE
 * 7, 
LINESIZE
, 6);

116 
√w
 
	`TSètic
–
this
, -1, " Nodes:", 
LEFTMARGIN
, 
NODEY
, 
CHARSIZE
 * 8, 
LINESIZE
, 7);

117 
√w
 
	`TSètic
–
this
, -1, " N/Sec:", 
LEFTMARGIN
, 
SECY
, 
CHARSIZE
 * 9, 
LINESIZE
, 9);

118 
√w
 
	`TSètic
–
this
, -1, " Dïth:", 
LEFTMARGIN
, 
DEPTHY
, 
CHARSIZE
 * 7, 
LINESIZE
, 6);

119 
√w
 
	`TSètic
–
this
, -1, " Be°löe:", 
LEFTMARGIN
-2, 
STATBESTY
, 
MAXLINE
 - 2, 
LINESIZE
, 9);

121 
Cﬁ‹
 = 
√w
 
	`TSètic
–
this
, -1, 
Em±ySå
, 
COLORX
, 
COLORY
, 
COLORW
, 
LINESIZE
, 6);

122 
WhôeInfo
 = 
√w
 
	`TSètic
–
this
, -1, 
Em±ySå
, 
WHITEINFOX
, 
WHITEINFOY
, 
WHITEINFOW
, 
LINESIZE
, WHITEINFOW/
CHARSIZE
);

123 
BœckInfo
 = 
√w
 
	`TSètic
–
this
, -1, 
Em±ySå
, 
BLACKINFOX
, 
BLACKINFOY
, 
BLACKINFOW
, 
LINESIZE
, BLACKINFOW / 
CHARSIZE
);

124 
Timî
 = 
√w
 
	`TNoEø£BkGndSètic
–
this
, -1, 
Em±ySå
, 
TIMERX
, 
TIMERY
, 
TIMERW
, 
LINESIZE
, TIMERW /
CHARSIZE
);

125 
Levñ
 = 
√w
 
	`TSètic
–
this
, -1, 
Em±ySå
, 
LEVELX
, 
LEVELY
, 
LEVELW
, 
LINESIZE
, LEVELW / 
CHARSIZE
);

126 
VÆue
 = 
√w
 
	`TSètic
–
this
, -1, 
Em±ySå
, 
VALUEX
, 
VALUEY
, 
VALUEW
, 
LINESIZE
, VALUEW / 
CHARSIZE
);

127 
Nodes
 = 
√w
 
	`TSètic
–
this
, -1, 
Em±ySå
, 
NODEX
, 
NODEY
, 
NODEW
, 
LINESIZE
, NODEW / 
CHARSIZE
);

128 
Sec⁄ds
 = 
√w
 
	`TSètic
–
this
, -1, 
Em±ySå
, 
SECX
, 
SECY
, 
SECW
, 
LINESIZE
, SECW / 
CHARSIZE
);

129 
Dïth
 = 
√w
 
	`TNoEø£BkGndSètic
–
this
, -1, 
Em±ySå
, 
DEPTHX
, 
DEPTHY
, 
DEPTHW
, 
LINESIZE
, DEPTHW /
CHARSIZE
);

130 
Be°Löe
 = 
√w
 
	`TSètic
–
this
, -1, 
Em±ySå
, 
BESTX
, 
BESTY
, 
BESTW
, 
BESTH
, ((BESTW / 
CHARSIZE
) * 3));

131 
Mesßge
 = 
√w
 
	`TSètic
–
this
, -1, 
Em±ySå
, 
MESSX
, 
MESSY
, 
MESSW
, 
LINESIZE
, MESSW / 
CHARSIZE
);

132 
	}
}

134 
	gTInfoWödow
::
Paöt
–
HDC
 
PaötDC
, 
PAINTSTRUCT
 
_FAR
 & );

136 
DøwInfoFøme
–
PaötDC
 );

137 
DøwSèticFømes
–
PaötDC
 );

140 
	gTInfoWödow
::
	$DøwInfoFøme
–
HDC
 
hDC
 )

142 
	`DøwFøme
–
hDC
, 
InfoRe˘
 );

143 
	}
}

145 
	gTInfoWödow
::
	$WMC⁄åﬁCﬁ‹
–
TMesßge
& 
msg
 )

147 
	`SëBkCﬁ‹
–
	`HDC
(
msg
.
WP¨am
), 
	`RGB
(192, 192, 192) );

148 
msg
.
Resu…
 = ()
	`GëStockObje˘
–
LTGRAY_BRUSH
 );

149 
	}
}

151 
	gTInfoWödow
::
	$Re£t
()

153 
Cﬁ‹
->
	`SëText
("White");

154 
WhôeInfo
->
	`CÀ¨
();

155 
BœckInfo
->
	`CÀ¨
();

156 
Levñ
->
	`CÀ¨
();

157 
VÆue
->
	`CÀ¨
();

158 
Nodes
->
	`CÀ¨
();

159 
Sec⁄ds
->
	`CÀ¨
();

160 
Be°Löe
->
	`CÀ¨
();

161 
Mesßge
->
	`CÀ¨
();

162 
	}
}

164 
	gTInfoWödow
::
	$IãrRe£t
()

166 
Cﬁ‹
->
	`SëText
("White");

167 
VÆue
->
	`CÀ¨
();

168 
Nodes
->
	`CÀ¨
();

169 
Sec⁄ds
->
	`CÀ¨
();

170 
Be°Löe
->
	`CÀ¨
();

171 
	}
}

173 
	gTInfoWödow
::
	$DøwSFøme
–
HDC
 
hDC
, 
RECT
 *
ª˘
 )

175 
x1
, 
x2
, 
y1
, 
y2
;

176 
HPEN
 
hPí
, 
hOldPí
;

177 
HBRUSH
 
hOldBrush
;

179 
POINT
 
pAºay
[3];

181 
x1
 = 
ª˘
->
À·
;

182 
x2
 = 
ª˘
->
right
;

183 
y1
 = 
ª˘
->
t›
;

184 
y2
 = 
ª˘
->
bŸtom
;

186 
hOldBrush
 = (
HBRUSH
)
	`Sñe˘Obje˘
–
hDC
, 
	`GëStockObje˘
(
LTGRAY_BRUSH
) );

187 
	`P©B…
–
hDC
, 
x1
, 
y1
, 
x2
 - x1, 
y2
 - y1, 
PATCOPY
 );

188 
	`Sñe˘Obje˘
–
hDC
, 
hOldBrush
 );

190 
hPí
 = 
	`Cª©ePí
–
PS_SOLID
, 1, 
	`RGB
(128, 128, 128) );

192 
hOldPí
 = (
HPEN
)
	`Sñe˘Obje˘
–
hDC
, 
hPí
 );

194 
pAºay
[0].
x
 = 
x1
;ÖAºay[0].
y
 = 
y2
;

195 
pAºay
[1].
x
 = 
x1
;ÖAºay[1].
y
 = 
y1
;

196 
pAºay
[2].
x
 = 
x2
;ÖAºay[2].
y
 = 
y1
;

198 
	`Pﬁylöe
–
hDC
, 
pAºay
, 3 );

200 
	`DñëeObje˘
–
	`Sñe˘Obje˘
–
hDC
, 
	`GëStockObje˘
(
WHITE_PEN
)) );

202 
pAºay
[1].
x
 = 
x2
;ÖAºay[1].
y
 = 
y2
;

203 
pAºay
[2].
y
 = 
y1
 - 1;

205 
	`Pﬁylöe
–
hDC
, 
pAºay
, 3 );

206 
	`Sñe˘Obje˘
(
hDC
, 
hOldPí
);

207 
	}
}

209 
	gTInfoWödow
::
	$DøwSèticFømes
–
HDC
 
hDC
 )

211 
RECT
 
ª˘
;

213 
ª˘
.
À·
 = 
LEFTMARGIN
 - 1;Ñe˘.
right
 = 
MAXLINE
 + 1;

215 
ª˘
.
t›
 = 
COLORY
 - 1;Ñe˘.
bŸtom
 = COLORY + 
LINESIZE
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

216 
ª˘
.
t›
 = 
WHITEINFOY
 - 1;Ñe˘.
bŸtom
 = WHITEINFOY + 
LINESIZE
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

217 
ª˘
.
t›
 = 
BLACKINFOY
 - 1;Ñe˘.
bŸtom
 = BLACKINFOY + 
LINESIZE
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

218 
ª˘
.
t›
 = 
TIMERY
 - 1;Ñe˘.
bŸtom
 = TIMERY + 
LINESIZE
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

219 
ª˘
.
t›
 = 
LEVELY
 - 1;Ñe˘.
bŸtom
 = LEVELY + 
LINESIZE
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

220 
ª˘
.
t›
 = 
VALUEY
 - 1;Ñe˘.
bŸtom
 = VALUEY + 
LINESIZE
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

221 
ª˘
.
t›
 = 
NODEY
 - 1;Ñe˘.
bŸtom
 = NODEY + 
LINESIZE
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

222 
ª˘
.
t›
 = 
SECY
 - 1;Ñe˘.
bŸtom
 = SECY + 
LINESIZE
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

223 
ª˘
.
t›
 = 
DEPTHY
 - 1;Ñe˘.
bŸtom
 = DEPTHY + 
LINESIZE
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

224 
ª˘
.
t›
 = 
BESTY
 - 1;Ñe˘.
bŸtom
 = BESTY + 
BESTH
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

225 
ª˘
.
t›
 = 
MESSY
 - 1;Ñe˘.
bŸtom
 = MESSY + 
LINESIZE
 + 1; 
	`DøwSFøme
–
hDC
, &rect );

226 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/info.h

3 #i‚de‡
_INFO_H


4 
	#_INFO_H


	)

6 
	~<°rög.h
>

8 
	$_CLASSDEF
(
TNoEø£BkGndSètic
)

9 ˛as†
	cTNoEø£BkGndSètic
 : 
public
 
TSètic


11 
public
:

12 
	`TNoEø£BkGndSètic
–
PTWödows
 
AP¨ít
, 
AnId
, 
LPSTR
 
ATôÀ
, 
X
, 
Y
, 
W
, 
H
, 
WORD
 
ATextLí
, 
PTModuÀ
 
AModuÀ
 = 
NULL
 );

14 
vútuÆ
 
	`WMEø£BkGnd
–
RTMesßge
 
msg
 ) = [ 
WM_FIRST
 + 
WM_ERASEBKGND
 ];

16 
	$SëText
–
LPSTR
 
ãxt
 )

18 
¥iv©e
:

19 
boﬁ
 
DoEø£
;

20 
La°Lí
;

23 
	$_CLASSDEF
(
TInfoWödow
)

24 ˛as†
	cTInfoWödow
: 
public
 
TWödow


26 
¥iv©e
:

27 
PTSètic
 
Cﬁ‹
;

28 
PTSètic
 
WhôeInfo
;

29 
PTSètic
 
BœckInfo
;

30 
PTNoEø£BkGndSètic
 
Timî
;

31 
PTSètic
 
Levñ
;

32 
PTSètic
 
Iãøti⁄
;

33 
PTSètic
 
VÆue
;

34 
PTSètic
 
Nodes
;

35 
PTSètic
 
Sec⁄ds
;

36 
PTNoEø£BkGndSètic
 
Dïth
;

37 
PTSètic
 
Be°Löe
;

38 
PTSètic
 
Mesßge
;

39 
RECT
 
InfoRe˘
;

41 
	`DøwSFøme
–
HDC
, 
RECT
 * );

42 
	`DøwSèticFømes
–
HDC
 );

44 
public
:

45 
	`TInfoWödow
(
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
ATôÀ
);

47 
	$SëTu∫Text
–
LPSTR
 
ãxt
 ) { 
Cﬁ‹
->
	`SëText
(Åext ); }

48 
	$SëWhôeInfoText
–
LPSTR
 
ãxt
 ) { 
WhôeInfo
->
	`SëText
–ãxà); 
	}
}

49 
	$SëBœckInfoText
–
LPSTR
 
ãxt
 ) { 
BœckInfo
->
	`SëText
–ãxà); 
	}
}

50 
	$SëTimîText
–
LPSTR
 
ãxt
 ) { 
Timî
->
	`SëText
–ãxà); 
	}
}

51 
	$SëLevñText
–
LPSTR
 
ãxt
 ) { 
Levñ
->
	`SëText
–ãxà); 
	}
}

52 
	$SëIãøti⁄Text
–
LPSTR
 
ãxt
 ) { 
Iãøti⁄
->
	`SëText
–ãxà); 
	}
}

53 
	$SëVÆueText
–
LPSTR
 
ãxt
 ) { 
VÆue
->
	`SëText
–ãxà); 
	}
}

54 
	$SëNodeText
–
LPSTR
 
ãxt
 ) { 
Nodes
->
	`SëText
–ãxà); 
	}
}

55 
	$SëSec⁄dsText
–
LPSTR
 
ãxt
 ) { 
Sec⁄ds
->
	`SëText
–ãxà); 
	}
}

56 
	$SëDïthText
–
LPSTR
 
ãxt
 ) { 
Dïth
->
	`SëText
–ãxà); 
	}
}

57 
	$SëBe°LöeText
–
LPSTR
 
ãxt
 ) { 
Be°Löe
->
	`SëText
–ãxà); 
	}
}

58 
	$SëMesßgeText
–
LPSTR
 
ãxt
 ) { 
Mesßge
->
	`SëText
–ãxà); 
	}
}

60 
vútuÆ
 
Paöt
–
HDC
 
PaötDC
, 
PAINTSTRUCT
 
_FAR
 & 
PaötInfo
 );

61 
vútuÆ
 
WMC⁄åﬁCﬁ‹
–
RTMesßge
 
Msg
 ) = [ 
WM_FIRST
 + 
WM_CTLCOLOR
 ];

63 
DøwInfoFøme
(
HDC
);

64 
Re£t
();

65 
IãrRe£t
();

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/movgen.cpp

3 
	~<m©h.h
>

4 
	~"wcdefs.h
"

5 
	~"exã∫s.h
"

11 
ATTACKTABTYPE
 
	g©èck
[240];

12 
ATTACKTABTYPE
 *
	gAâackTab
 = &
©èck
[120];

13 
SETOFPIECE
 
	gBôTab
[7] = {0, 1, 2, 4, 8, 0x10, 0x20};

14 
	gDúTab
[8] = { 1, -1, 0x10, -0x10, 0x11, -0x11, 0x0f, -0x0f};

15 
	gKnightDú
[8] = {0x0E, -0x0E, 0x12, -0x12, 0x1f, -0x1f, 0x21, -0x21};

16 
	gPawnDú
[2] = {0x10, -0x10};

17 
MOVETYPE
 
	gNext
;

18 
	gBufCou¡
, 
	gBufP¡
;

19 
MOVETYPE
 
	gBuf„r
[81];

20 
CASTMOVETYPE
 
	gCa°Move
[2][2] = { {{2, 4}, {6, 4}}, {{0x72, 0x74}, {0x76, 0x74}} };

23 
	$CÆcAâackTab
()

25 
DIRTYPE
 
dú
;

26 
sq
;

27 
i
;

29 
sq
 = -0x77; sq <= 0x77; sq++)

31 
AâackTab
[
sq
].
põ˚£t
 = 0;

32 
AâackTab
[
sq
].
dúe˘i⁄
 = 0;

34 
dú
 = 7; dir >=0; dir--)

36 
i
 = 1; i < 8; i++)

38 i‡(
dú
 < 4)

39 
AâackTab
[
DúTab
[
dú
]*
i
].
põ˚£t
 = 
BôTab
[
quìn
]+BôTab[
rook
];

41 
AâackTab
[
DúTab
[
dú
]*
i
].
põ˚£t
 = 
BôTab
[
quìn
]+BôTab[
bish›
];

42 
AâackTab
[
DúTab
[
dú
]*
i
].
dúe˘i⁄
 = DirTab[dir];

44 
AâackTab
[
DúTab
[
dú
]].
põ˚£t
 +
BôTab
[
kög
];

45 
AâackTab
[
KnightDú
[
dú
]].
põ˚£t
 = 
BôTab
[
knight
];

46 
AâackTab
[
KnightDú
[
dú
]].
dúe˘i⁄
 = KnightDir[dir];

48 
	}
}

55 
	$Põ˚Aâacks
(
PIECETYPE
 
≠õ˚
, 
COLORTYPE
 
acﬁ‹
,

56 
SQUARETYPE
 
asqu¨e
, SQUARETYPE 
squ¨e
)

58 
EDGESQUARETYPE
 
sq
;

59 
x
;

61 
x
 = 
squ¨e
 - 
asqu¨e
;

62 i‡(
≠õ˚
 =
∑wn
)

63  (
	`abs
(
x
 - 
PawnDú
[
acﬁ‹
]) == 1);

65 i‡(
AâackTab
[
x
].
põ˚£t
 & 
BôTab
[
≠õ˚
])

67 i‡(
≠õ˚
 =
kög
 ||ápõ˚ =
knight
)

72 
sq
 = 
asqu¨e
;

75 
sq
 +
AâackTab
[
x
].
dúe˘i⁄
;

76 } 
sq
 !
squ¨e
 && 
Bﬂrd
[sq].
põ˚
 =
no_põ˚
 );

77  (
sq
 =
squ¨e
);

82 
	}
}

89 
	$PawnAâacks
(
COLORTYPE
 
acﬁ‹
, 
SQUARETYPE
 
squ¨e
)

91 
EDGESQUARETYPE
 
sq
;

93 
sq
 = 
squ¨e
 - 
PawnDú
[
acﬁ‹
] - 1;

94 i‡(!(
sq
 & 0x88))

95 i‡(
Bﬂrd
[
sq
].
põ˚
 =
∑wn
 && Bﬂrd[sq].
cﬁ‹
 =
acﬁ‹
)

97 
sq
 += 2;

98 i‡(!(
sq
 & 0x88))

99 i‡(
Bﬂrd
[
sq
].
põ˚
 =
∑wn
 && Bﬂrd[sq].
cﬁ‹
 =
acﬁ‹
)

102 
	}
}

109 
	$Aâacks
(
COLORTYPE
 
acﬁ‹
, 
SQUARETYPE
 
squ¨e
)

111 
INDEXTYPE
 
i
;

113 i‡(
	`PawnAâacks
(
acﬁ‹
, 
squ¨e
))

116 
i
 = 
Offi˚rNo
[
acﬁ‹
]; i >= 0; i--)

117 i‡(
Põ˚Tab
[
acﬁ‹
][
i
].
ùõ˚
 !
no_põ˚
)

118 i‡(
	`Põ˚Aâacks
(
Põ˚Tab
[
acﬁ‹
][
i
].
ùõ˚
,ácolor,

119 
Põ˚Tab
[
acﬁ‹
][
i
].
isqu¨e
, 
squ¨e
))

122 
	}
}

129 
	$Check
(
SQUARETYPE
 
squ¨e
, 
PIECETYPE
 
öpõ˚
, 
COLORTYPE
 
öcﬁ‹
)

131 
DEPTHTYPE
 
dï
;

133 if(
Bﬂrd
[
squ¨e
].
põ˚
 =
öpõ˚
 && Bﬂrd[squ¨e].
cﬁ‹
 =
öcﬁ‹
)

135 
dï
 = 
Dïth
 - 1;

136 
MovTab
[
dï
].
movpõ˚
 !
no_põ˚
)

138 i‡(
MovTab
[
dï
].
√w1
 =
squ¨e
)

140 
dï
--;

145 
	}
}

152 
	$CÆcCa°lög
(
COLORTYPE
 
öcﬁ‹
, 
CASTDIRTYPE
 *
ˇ°
)

154 
SQUARETYPE
 
squ¨e
 = 0;

156 i‡(
öcﬁ‹
 =
bœck
Ë
squ¨e
 = 0x70;

157 *
ˇ°
 = 
zîo
;

158 i‡(
	`Check
(
squ¨e
 + 4, 
kög
, 
öcﬁ‹
))

160 i‡(
	`Check
(
squ¨e
, 
rook
, 
öcﬁ‹
))

161 (()*
ˇ°
Ë+
 g
;

162 i‡(
	`Check
(
squ¨e
 + 7, 
rook
, 
öcﬁ‹
))

163 (()*
ˇ°
Ë+
shπ
;

165 
	}
}

172 
ölöe
 
	$RïótMove
(
MOVETYPE
 *
move
)

174  (
move
->
movpõ˚
 !
no_põ˚
 && move->movpõ˚ !
∑wn
 &&

175 
move
->
c⁄ã¡
 =
no_põ˚
 && !move->
•e
);

176 
	}
}

185 
FIFTYTYPE
 
	$Fi·yMoveC¡
()

187 
FIFTYTYPE
 
˙t
 = 0;

189 
	`RïótMove
(&
MovTab
[
Dïth
 - 
˙t
]))

190 
˙t
++;

191  
˙t
;

192 
	}
}

202 
REPEATTYPE
 
	$Rïëôi⁄
(
immedüã
)

204 
DEPTHTYPE
 
œ°dï
, 
compdï
, 
åa˚dï
, 
checkdï
, 
ßmedïth
;

205 
SQUARETYPE
 
åa˚sq
, 
checksq
;

206 
REPEATTYPE
 
ª≥©cou¡
;

208 
ª≥©cou¡
 = 1;

209 
œ°dï
 = 
ßmedïth
 = 
Dïth
 + 1;

210 
compdï
 = 
ßmedïth
 - 4;

213 
	`RïótMove
(&
MovTab
[
œ°dï
 - 1]Ë&& (
compdï
 <Üastdep ||

214 !
immedüã
))

215 
œ°dï
--;

216 i‡(
compdï
 < 
œ°dï
)

217  
ª≥©cou¡
;

218 
checkdï
 = 
ßmedïth
;

221 
checkdï
--;

222 
checksq
 = 
MovTab
[
checkdï
].
√w1
;

223 
åa˚dï
 = 
checkdï
 + 2;Åø˚dï < 
ßmedïth
;Åracedep += 2)

224 i‡(
MovTab
[
åa˚dï
].
ﬁd
 =
checksq
Ë
TEN
;

227 
åa˚dï
 = 
checkdï
;

228 
åa˚sq
 = 
MovTab
[
åa˚dï
].
ﬁd
;

231 i‡(
åa˚dï
-2 < 
œ°dï
Ë 
ª≥©cou¡
;

232 
åa˚dï
 -= 2;

234 i‡(
åa˚sq
 =
MovTab
[
åa˚dï
].
√w1
)Åracesq =

235 
MovTab
[
åa˚dï
].
ﬁd
;

236 } 
åa˚sq
 !
checksq
 || 
åa˚dï
 > 
compdï
 + 1);

237 i‡(
åa˚dï
 < 
compdï
)

239 
compdï
 = 
åa˚dï
;

240 i‡((
ßmedïth
 - 
compdï
) % 2 == 1)

242 i‡(
compdï
 =
œ°dï
Ë 
ª≥©cou¡
;

243 
compdï
 --;

245 
checkdï
 = 
ßmedïth
;

249 
TEN
 : i‡(
checkdï
 <
compdï
)

251 
ª≥©cou¡
++;

252 i‡(
compdï
 - 2 < 
œ°dï
Ë 
ª≥©cou¡
;

253 
checkdï
 = 
ßmedïth
 = 
compdï
;

254 
compdï
 -= 2;

257 
	}
}

272 
	$KûlMovGí
(
MOVETYPE
 *
move
)

274 
SQUARETYPE
 
ˇ°sq
;

275 
PIECETYPE
 
¥omŸe
;

276 
CASTDIRTYPE
 
ˇ°dú
;

277 
CASTTYPE
 
ˇ°
;

278 
kûlmov
;

280 
kûlmov
 = 0;

281 i‡(
move
->
•e
 && (move->
movpõ˚
 =
kög
))

283 
	`CÆcCa°lög
(
Pœyî
, &
ˇ°
);

284 i‡(
move
->
√w1
 > move->
ﬁd
)

285 
ˇ°dú
 = 
shπ
;

287 
ˇ°dú
 = 
 g
;

289 i‡(
ˇ°
 & 
ˇ°dú
)

291 
ˇ°sq
 = ()((
move
->
√w1
 + move->
ﬁd
) / 2);

293 i‡(
Bﬂrd
[
move
->
√w1
].
põ˚
 =
no_põ˚
)

294 i‡(
Bﬂrd
[
ˇ°sq
].
põ˚
 =
no_põ˚
)

295 i‡((
move
->
√w1
 > move->
ﬁd
Ë|| (
Bﬂrd
[move->√w1-1].
põ˚


296 =
no_põ˚
))

298 i‡(!
	`Aâacks
(
Oµ⁄ít
, 
move
->
ﬁd
))

299 i‡(!
	`Aâacks
(
Oµ⁄ít
, 
move
->
√w1
))

300 i‡(!
	`Aâacks
(
Oµ⁄ít
, 
ˇ°sq
))

301 
kûlmov
 = 1;

306 i‡(
move
->
•e
 && (move->
movpõ˚
 =
∑wn
))

310 i‡(
MovTab
[
Dïth
-1].
movpõ˚
 =
∑wn
)

311 i‡(
	`abs
(
MovTab
[
Dïth
-1].
√w1
 - MovTab[Dïth-1].
ﬁd
) >= 0x20)

312 i‡((
Bﬂrd
[
move
->
ﬁd
].
põ˚
 =
∑wn
Ë&& (Bﬂrd[move->ﬁd].
cﬁ‹


313 =
Pœyî
))

314 
kûlmov
 = (
move
->
√w1
 =((
MovTab
[
Dïth
-1].new1

315 + 
MovTab
[
Dïth
-1].
ﬁd
) / 2));

319 i‡(
move
->
•e
)

321 
¥omŸe
 = 
move
->
movpõ˚
;

322 
move
->
movpõ˚
 = 
∑wn
;

326 i‡(
Bﬂrd
[
move
->
ﬁd
].
põ˚
 =move->
movpõ˚
)

327 i‡(
Bﬂrd
[
move
->
ﬁd
].
cﬁ‹
 =
Pœyî
)

328 i‡(
Bﬂrd
[
move
->
√w1
].
põ˚
 =move->
c⁄ã¡
)

329 i‡(
move
->
c⁄ã¡
 =
no_põ˚
 || 
Bﬂrd
[move->
√w1
].
cﬁ‹
 =
Oµ⁄ít
)

331 i‡(
move
->
movpõ˚
 =
∑wn
)

333 i‡(
	`abs
(
move
->
√w1
 - move->
ﬁd
) < 0x20)

334 
kûlmov
 = 1;

336 
kûlmov
 = 
Bﬂrd
[(
move
->
√w1
+move->
ﬁd
Ë/ 2].
põ˚
 =
no_põ˚
;

339 
kûlmov
 = 
	`Põ˚Aâacks
(
move
->
movpõ˚
, 
Pœyî
,

340 
move
->
ﬁd
, move->
√w1
);

342 i‡(
move
->
•e
)

343 
move
->
movpõ˚
 = 
¥omŸe
;

346  
kûlmov
;

347 
	}
}

354 
	$Gíî©e
()

356 
BufCou¡
++;

357 
Buf„r
[
BufCou¡
] = 
Next
;

358 
	}
}

365 
	$PawnPromŸi⁄Gí
()

367 
PIECETYPE
 
¥omŸe
;

369 
Next
.
•e
 = 1;

370 
¥omŸe
 = 
quìn
;ÖromŸê<
knight
; (()promote)++)

372 
Next
.
movpõ˚
 = 
¥omŸe
;

373 
	`Gíî©e
();

375 
Next
.
•e
 = 0;

376 
	}
}

383 
	$C≠MovGí
()

385 
EDGESQUARETYPE
 
√xtsq
, 
sq
;

386 
INDEXTYPE
 
i
;

388 
Next
.
•e
 = 0;

389 
Next
.
c⁄ã¡
 = 
Bﬂrd
[Next.
√w1
].
põ˚
;

390 
Next
.
movpõ˚
 = 
∑wn
;

391 
√xtsq
 = 
Next
.
√w1
 - 
PawnDú
[
Pœyî
];

392 
sq
 = 
√xtsq
-1; sq <=Çextsq+1; sq++)

393 i‡(
sq
 !
√xtsq
)

394 i‡((
sq
 & 0x88) == 0)

395 i‡(
Bﬂrd
[
sq
].
põ˚
 =
∑wn
 && Bﬂrd[sq].
cﬁ‹
 =
Pœyî
)

397 
Next
.
ﬁd
 = 
sq
;

398 i‡(
Next
.
√w1
 < 8 || Next.new1 >= 0x70)

399 
	`PawnPromŸi⁄Gí
();

401 
	`Gíî©e
();

404 
i
 = 
Offi˚rNo
[
Pœyî
]; i >= 0; i--)

405 i‡(
Põ˚Tab
[
Pœyî
][
i
].
ùõ˚
 !
no_põ˚
 && PieceTab[Player][i].ipiece

406 !
∑wn
)

407 i‡(
	`Põ˚Aâacks
(
Põ˚Tab
[
Pœyî
][
i
].
ùõ˚
, Player,

408 
Põ˚Tab
[
Pœyî
][
i
].
isqu¨e
, 
Next
.
√w1
))

410 
Next
.
ﬁd
 = 
Põ˚Tab
[
Pœyî
][
i
].
isqu¨e
;

411 
Next
.
movpõ˚
 = 
Põ˚Tab
[
Pœyî
][
i
].
ùõ˚
;

412 
	`Gíî©e
();

414 
	}
}

421 
	$N⁄C≠MovGí
()

423 
DIRTYPE
 
fú°
, 
œ°
, 
dú
;

424 
dúe˘i⁄
;

425 
EDGESQUARETYPE
 
√wsq
;

427 
Next
.
•e
 = 0;

428 
Next
.
movpõ˚
 = 
Bﬂrd
[Next.
ﬁd
].
põ˚
;

429 
Next
.
c⁄ã¡
 = 
no_põ˚
;

430 
Next
.
movpõ˚
)

432 
kög
 :

433 
dú
 = 7; dir >= 0; dir--)

435 
√wsq
 = 
Next
.
ﬁd
 + 
DúTab
[
dú
];

436 i‡(!(
√wsq
 & 0x88))

437 i‡(
Bﬂrd
[
√wsq
].
põ˚
 =
no_põ˚
)

439 
Next
.
√w1
 = 
√wsq
;

440 
	`Gíî©e
();

444 
knight
 :

445 
dú
 = 7; dir >= 0; dir--)

447 
√wsq
 = 
Next
.
ﬁd
 + 
KnightDú
[
dú
];

448 i‡(!(
√wsq
 & 0x88))

449 i‡(
Bﬂrd
[
√wsq
].
põ˚
 =
no_põ˚
)

451 
Next
.
√w1
 = 
√wsq
;

452 
	`Gíî©e
();

456 
quìn
 :

457 
rook
 :

458 
bish›
:

459 
fú°
 = 7;

460 
œ°
 = 0;

461 i‡(
Next
.
movpõ˚
 =
rook
Ë
fú°
 = 3;

462 i‡(
Next
.
movpõ˚
 =
bish›
Ë
œ°
 = 4;

463 
dú
 = 
fú°
; dú >
œ°
; dir--)

465 
dúe˘i⁄
 = 
DúTab
[
dú
];

466 
√wsq
 = 
Next
.
ﬁd
 + 
dúe˘i⁄
;

468 !(
√wsq
 & 0x88))

470 i‡(
Bﬂrd
[
√wsq
].
põ˚
 !
no_põ˚
Ë
TEN
;

471 
Next
.
√w1
 = 
√wsq
;

472 
	`Gíî©e
();

473 
√wsq
 = 
Next
.
√w1
 + 
dúe˘i⁄
;

475 
TEN
: ;

478 
∑wn
 :

479 
Next
.
√w1
 = Next.
ﬁd
 + 
PawnDú
[
Pœyî
];

480 i‡(
Bﬂrd
[
Next
.
√w1
].
põ˚
 =
no_põ˚
)

482 i‡(
Next
.
√w1
 < 8 || Next.new1 >= 0x70)

483 
	`PawnPromŸi⁄Gí
();

486 
	`Gíî©e
();

487 i‡(
Next
.
ﬁd
 < 0x18 || Next.old >= 0x60)

489 
Next
.
√w1
 +(Next.√w1 - Next.
ﬁd
);

490 i‡(
Bﬂrd
[
Next
.
√w1
].
põ˚
 =
no_põ˚
Ë
	`Gíî©e
();

495 
	}
}

517 
	$InôMovGí
()

519 
CASTDIRTYPE
 
ˇ°dú
;

520 
EDGESQUARETYPE
 
sq
;

521 
INDEXTYPE
 
ödex
;

523 
BufCou¡
 = 
BufP¡
 = 0;

526  
ödex
 = 1; index <
PawnNo
[
Oµ⁄ít
]; index++ )

527 if–
Põ˚Tab
[
Oµ⁄ít
][
ödex
].
ùõ˚
 !
no_põ˚
 ) {

528 
Next
.
√w1
 = 
Põ˚Tab
[
Oµ⁄ít
][
ödex
].
isqu¨e
;

529 
	`C≠MovGí
();

532 
Next
.
•e
 = 1;

533 
Next
.
movpõ˚
 = 
kög
;

534 
Next
.
c⁄ã¡
 = 
no_põ˚
;

535 
ˇ°dú
 = 
	`CASTDIRTYPE
(
 g
-1); ca°dú <
shπ
-1; (()castdir)++) {

536 
Next
.
√w1
 = 
Ca°Move
[
Pœyî
][
ˇ°dú
].
ˇ°√w
;

537 
Next
.
ﬁd
 = 
Ca°Move
[
Pœyî
][
ˇ°dú
].
ˇ°ﬁd
;

538 if–
	`KûlMovGí
–&
Next
 ) )

539 
	`Gíî©e
();

543 
ödex
 = 
PawnNo
[
Pœyî
]; index >= 0; index--)

544 i‡(
Põ˚Tab
[
Pœyî
][
ödex
].
ùõ˚
 !
no_põ˚
)

546 
Next
.
ﬁd
 = 
Põ˚Tab
[
Pœyî
][
ödex
].
isqu¨e
;

547 
	`N⁄C≠MovGí
();

549 i‡(
MovTab
[
Dïth
-1].
movpõ˚
 =
∑wn
)

550 i‡(
	`abs
(
MovTab
[
Dïth
-1].
√w1
 - MovTab[Dïth-1].
ﬁd
) >= 0x20)

552 
Next
.
•e
 = 1;

553 
Next
.
movpõ˚
 = 
∑wn
;

554 
Next
.
c⁄ã¡
 = 
no_põ˚
;

555 
Next
.
√w1
 = (
MovTab
[
Dïth
-1].√w1 + MovTab[Dïth-1].
ﬁd
) / 2;

556 
sq
 = 
MovTab
[
Dïth
-1].
√w1
-1; sq <= MovTab[Depth-1].new1+1;

557 
sq
++)

558 i‡(
sq
 !
MovTab
[
Dïth
-1].
√w1
)

559 i‡(!(
sq
 & 0x88))

561 
Next
.
ﬁd
 = 
sq
;

562 i‡(
	`KûlMovGí
(&
Next
)Ë
	`Gíî©e
();

565 
	}
}

573 
	$MovGí
()

575 i‡(
BufP¡
 >
BufCou¡
)

576 
Next
 = 
ZîoMove
;

579 
BufP¡
++;

580 
Next
 = 
Buf„r
[
BufP¡
];

582 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/pvalue.cpp

3 
	~<°©ic.h
>

4 
	~<fûedül.h
>

5 
	~<öputdü.h
>

6 
	~<bwcc.h
>

7 
	~<°rög.h
>

8 
	~<°dio.h
>

9 
	~"wcdefs.h
"

10 
	~"öfo.h
"

11 
	~"wchess.h
"

12 
	~"pvÆue.h
"

13 
	~"exã∫s.h
"

15 c⁄° 
	gDeÁu…VÆues
[5] = {0x90, 0x4c, 0x30, 0x30, 0x10};

17 
	ePIECES
 { 
	mpvquìn
, 
	mpvrook
, 
	mpvbish›
, 
	mpvknight
, 
	mpv∑wn
};

19 
	#mö
(
x
, 
y
Ë(((xË< (y)Ë? (xË: (y))

	)

20 
	#max
(
x
, 
y
Ë(((xË> (y)Ë? (xË: (y))

	)

23 
	gTPõ˚VÆueDülog
::
	$TPõ˚VÆueDülog
–
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
AName
 ) : 
	$TDülog
–
AP¨ít
, 
AName
 )

26 
	}
}

28 
ölöe
 
	gTPõ˚VÆueDülog
::
	$PVSëFocus
–
HWND
 
hWnd
 )

30 
	`SídMesßge
–
HWödow
, 
WM_NEXTDLGCTL
, 
	`WPARAM
(
hWnd
), 1L );

31 
	`SídMesßge
–
hWnd
, 
EM_SETSEL
, 0, 
	`MAKELONG
(0, 32767) );

32 
	}
}

34 
BOOL
 
	gTPõ˚VÆueDülog
::
	$GëCﬁ‹VÆue
–
WORD
 
Id
 )

36 
NewVÆ
;

37 
BOOL
 
Ok
;

38 *
CurVÆ
;

39 
HWND
 
hS¸ﬁÀr
;

41 
NewVÆ
 = 
	`GëDlgIãmI¡
–
HWödow
, 
Id
, &
Ok
, 
TRUE
 );

43 
Id
) {

44 
IDD_EQUEEN
:

45 
CurVÆ
 = &
VÆues
[
pvquìn
];

46 
hS¸ﬁÀr
 = 
	`GëDlgIãm
–
HWödow
, 
IDD_QUEEN
 );

48 
IDD_EROOK
:

49 
CurVÆ
 = &
VÆues
[
pvrook
];

50 
hS¸ﬁÀr
 = 
	`GëDlgIãm
–
HWödow
, 
IDD_ROOK
 );

52 
IDD_EBISHOP
:

53 
CurVÆ
 = &
VÆues
[
pvbish›
];

54 
hS¸ﬁÀr
 = 
	`GëDlgIãm
–
HWödow
, 
IDD_BISHOP
 );

56 
IDD_EKNIGHT
:

57 
CurVÆ
 = &
VÆues
[
pvknight
];

58 
hS¸ﬁÀr
 = 
	`GëDlgIãm
–
HWödow
, 
IDD_KNIGHT
 );

60 
IDD_EPAWN
:

61 
CurVÆ
 = &
VÆues
[
pv∑wn
];

62 
hS¸ﬁÀr
 = 
	`GëDlgIãm
–
HWödow
, 
IDD_PAWN
 );

66 if–
Ok
 ) {

67 
Ok
 = (
NewVÆ
 > 255Ë? 
FALSE
 : ( (NewVÆ < 0 ) ? FALSE : 
TRUE
 );

69 
NewVÆ
 = *
CurVÆ
;

71 if–!
Ok
 ) {

72 
	`Eº‹
("PleaseÉnterá validÇumber between 0ánd 255.");

73 
	`PVSëFocus
(
	`GëDlgIãm
(
HWödow
, 
Id
));

74 } if–
NewVÆ
 !*
CurVÆ
 ) {

75 *
CurVÆ
 = 
NewVÆ
;

76 
	`SëS¸ﬁlPos
(
hS¸ﬁÀr
, 
SB_CTL
, *
CurVÆ
, 
TRUE
);

79  
Ok
;

80 
	}
}

82 
	gTPõ˚VÆueDülog
::
	$Ok
–
RTMesßge
 )

84 
MSG
 
msg
;

86  
	`PìkMesßge
–&
msg
, 
HWödow
, 
PV_KILLFOCUS
, PV_KILLFOCUS, 
PM_NOREMOVE
 ) )

89 if–
	`GëCﬁ‹VÆue
(
IDD_EQUEEN
Ë&& GëCﬁ‹VÆue(
IDD_EROOK
) &&

90 
	`GëCﬁ‹VÆue
(
IDD_EBISHOP
Ë&& GëCﬁ‹VÆue(
IDD_EKNIGHT
Ë&& GëCﬁ‹VÆue(
IDD_EPAWN
) ) {

92 
Põ˚VÆue
[
quìn
] = 
VÆues
[
pvquìn
] * 16;

93 
Põ˚VÆue
[
rook
] = 
VÆues
[
pvrook
] * 16;

94 
Põ˚VÆue
[
bish›
] = 
VÆues
[
pvbish›
] * 16;

95 
Põ˚VÆue
[
knight
] = 
VÆues
[
pvknight
] * 16;

96 
Põ˚VÆue
[
∑wn
] = 
VÆues
[
pv∑wn
] * 16;

98 
	`Clo£Wödow
–
IDOK
 );

100 
	}
}

102 
	gTPõ˚VÆueDülog
::
	$SëupWödow
()

104 
TDülog
::
	`SëupWödow
();

106 
VÆues
[
pvquìn
] = 
Põ˚VÆue
[
quìn
] / 16;

107 
VÆues
[
pvrook
] = 
Põ˚VÆue
[
rook
] / 16;

108 
VÆues
[
pvbish›
] = 
Põ˚VÆue
[
bish›
] / 16;

109 
VÆues
[
pvknight
] = 
Põ˚VÆue
[
knight
] / 16;

110 
VÆues
[
pv∑wn
] = 
Põ˚VÆue
[
∑wn
] / 16;

112 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_EQUEEN
, 
VÆues
[
pvquìn
], 
FALSE
 );

113 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_EROOK
, 
VÆues
[
pvrook
], 
FALSE
 );

114 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_EBISHOP
, 
VÆues
[
pvbish›
], 
FALSE
 );

115 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_EKNIGHT
, 
VÆues
[
pvknight
], 
FALSE
 );

116 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_EPAWN
, 
VÆues
[
pv∑wn
], 
FALSE
 );

118 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_QUEEN
), 
SB_CTL
, 0, 255, 
FALSE
 );

119 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_QUEEN
), 
SB_CTL
, 
VÆues
[
pvquìn
], 
FALSE
 );

121 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_ROOK
), 
SB_CTL
, 0, 255, 
FALSE
 );

122 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_ROOK
), 
SB_CTL
, 
VÆues
[
pvrook
], 
FALSE
 );

124 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_BISHOP
), 
SB_CTL
, 0, 255, 
FALSE
 );

125 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_BISHOP
), 
SB_CTL
, 
VÆues
[
pvbish›
], 
FALSE
 );

127 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_KNIGHT
), 
SB_CTL
, 0, 255, 
FALSE
 );

128 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_KNIGHT
), 
SB_CTL
, 
VÆues
[
pvknight
], 
FALSE
 );

130 
	`SëS¸ﬁlR™ge
–
	`GëDlgIãm
(
HWödow
, 
IDD_PAWN
), 
SB_CTL
, 0, 255, 
FALSE
 );

131 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_PAWN
), 
SB_CTL
, 
VÆues
[
pv∑wn
], 
FALSE
 );

132 
	}
}

135 
	gTPõ˚VÆueDülog
::
	$IDDDeÁu…
–
RTMesßge
 )

137 
	`mem˝y
–
VÆues
, 
DeÁu…VÆues
, 5 * () );

139 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_EQUEEN
, 
VÆues
[
pvquìn
], 
FALSE
 );

140 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_EROOK
, 
VÆues
[
pvrook
], 
FALSE
 );

141 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_EBISHOP
, 
VÆues
[
pvbish›
], 
FALSE
 );

142 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_EKNIGHT
, 
VÆues
[
pvknight
], 
FALSE
 );

143 
	`SëDlgIãmI¡
–
HWödow
, 
IDD_EPAWN
, 
VÆues
[
pv∑wn
], 
FALSE
 );

145 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_QUEEN
), 
SB_CTL
, 
VÆues
[
pvquìn
], 
TRUE
 );

146 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_ROOK
), 
SB_CTL
, 
VÆues
[
pvrook
], 
TRUE
 );

147 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_BISHOP
), 
SB_CTL
, 
VÆues
[
pvbish›
], 
TRUE
 );

148 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_KNIGHT
), 
SB_CTL
, 
VÆues
[
pvknight
], 
TRUE
 );

149 
	`SëS¸ﬁlPos
–
	`GëDlgIãm
(
HWödow
, 
IDD_PAWN
), 
SB_CTL
, 
VÆues
[
pv∑wn
], 
TRUE
 );

150 
	}
}

152 
	gTPõ˚VÆueDülog
::
	$WMHS¸ﬁl
–
RTMesßge
 
msg
 )

154 
ID
 = 
	`GëDlgCålID
–
	`HWND
(
msg
.
LP
.
Hi
) );

155 
HWND
 
hS¸ﬁÀr
;

156 *
curvÆue
;

157 
dlgôem
;

159 if–
ID
 =
	`GëDlgCålID
–
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_QUEEN
)) ) {

160 
curvÆue
 = &
VÆues
[
pvquìn
];

161 
dlgôem
 = 
IDD_EQUEEN
;

162 } if–
ID
 =
	`GëDlgCålID
(
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_ROOK
)) ) {

163 
curvÆue
 = &
VÆues
[
pvrook
];

164 
dlgôem
 = 
IDD_EROOK
;

165 } if–
ID
 =
	`GëDlgCålID
(
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_BISHOP
)) ) {

166 
curvÆue
 = &
VÆues
[
pvbish›
];

167 
dlgôem
 = 
IDD_EBISHOP
;

168 } if–
ID
 =
	`GëDlgCålID
(
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_KNIGHT
)) ) {

169 
curvÆue
 = &
VÆues
[
pvknight
];

170 
dlgôem
 = 
IDD_EKNIGHT
;

171 } if–
ID
 =
	`GëDlgCålID
(
hS¸ﬁÀr
 = 
	`GëDlgIãm
(
HWödow
, 
IDD_PAWN
)) ) {

172 
curvÆue
 = &
VÆues
[
pv∑wn
];

173 
dlgôem
 = 
IDD_EPAWN
;

177  
msg
.
WP¨am
 ) {

178 
SB_PAGEDOWN
 :

179 *
curvÆue
 += 15;

180 
SB_LINEDOWN
 :

181 *
curvÆue
 = 
	`mö
(255, *curvalue + 1);

183 
SB_PAGEUP
 :

184 *
curvÆue
 -= 15;

185 
SB_LINEUP
 :

186 *
curvÆue
 = 
	`max
(0, *curvalue - 1);

188 
SB_TOP
:

189 *
curvÆue
 = 0;

191 
SB_BOTTOM
 :

192 *
curvÆue
 = 255;

194 
SB_THUMBPOSITION
 :

195 
SB_THUMBTRACK
 :

196 *
curvÆue
 = 
msg
.
LP
.
Lo
;

202 
	`SëS¸ﬁlPos
–
hS¸ﬁÀr
, 
SB_CTL
, *
curvÆue
, 
TRUE
 );

203 
	`SëDlgIãmI¡
–
HWödow
, 
dlgôem
, *
curvÆue
, 
FALSE
 );

204 
	}
}

206 
	gTPõ˚VÆueDülog
::
	$PVKûlFocus
–
RTMesßge
 
msg
 )

208 
WORD
 
Id
 = 
msg
.
WP¨am
;

209 
HWND
 
Focus
 = 
	`GëFocus
();

211 if–(
	`GëDlgIãm
–
HWödow
, 
Id
 ) =
Focus
 || GëDlgIãm–HWödow, 
IDCANCEL
 ) =Focu†|| GëDlgIãm–HWödow, 
IDD_DEFAULT
 ) == Focus)

212 || 
	`GëA˘iveWödow
(Ë!
HWödow
 )

215 
	`GëCﬁ‹VÆue
(
Id
);

216 
	}
}

218 
	gTPõ˚VÆueDülog
::
	$WMComm™d
–
RTMesßge
 
msg
 )

220 if–
msg
.
LP
.
Lo
 && msg.LP.
Hi
 =
EN_KILLFOCUS
 ) {

221 if–
	`SídMesßge
–
	`HWND
(
msg
.
LP
.
Lo
), 
EM_GETMODIFY
, 0, 0L) )

222 
	`Po°Mesßge
–
HWödow
, 
PV_KILLFOCUS
, 
msg
.
WP¨am
, 0L );

226 
TWödowsObje˘
::
	`WMComm™d
–
msg
 );

227 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/pvalue.h

3 #i‚de‡
__PVALUE_H


4 
	#__PVALUE_H


	)

6 
	#PV_KILLFOCUS
 (
WM_USER
 + 100)

	)

8 
	$_CLASSDEF
(
TPõ˚VÆueDülog
)

10 ˛as†
	cTPõ˚VÆueDülog
 : 
public
 
TDülog


12 
public
:

13 
	`TPõ˚VÆueDülog
–
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
AName
 );

15 
vútuÆ
 
	`SëupWödow
();

16 
vútuÆ
 
	`PVKûlFocus
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
PV_KILLFOCUS
 ];

17 
vútuÆ
 
	`Ok
–
RTMesßge
 );

18 
vútuÆ
 
	`WMHS¸ﬁl
–
RTMesßge
 );

19 
vútuÆ
 
	`WMComm™d
–
RTMesßge
 );

20 
vútuÆ
 
	`IDDDeÁu…
–
RTMesßge
 ) = [ 
ID_FIRST
 + 
IDD_DEFAULT
 ];

22 
¥Ÿe˘ed
:

23 
VÆues
[5];

24 
	`PVSëFocus
(
HWND
);

25 
BOOL
 
	`GëCﬁ‹VÆue
(
WORD
);

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/saverest.cpp

4 
	~<owl\owÕch.h
>

5 #¥agm®
hdr°›


7 
	~<°dio.h
>

8 
	~<°rög.h
>

9 
	~<˘y≥.h
>

11 
	~"wcdefs.h
"

12 
	~"exã∫s.h
"

15 
	sSAVERESTORE
 {

16 
ENUMCOLOR
 
	mPœyî
;

17 
ENUMCOLOR
 
	mOµ⁄ít
;

18 
ENUMCOLOR
 
	mProgømCﬁ‹
;

19 
BOOL
 
	mTu∫ed
;

20 
BOOL
 
	mMu…iMove
;

21 
BOOL
 
	mAutoPœy
;

22 
BOOL
 
	mSögÀSãp
;

23 
LEVELTYPE
 
	mLevñ
;

24 
	mAvîageTime
;

25 
BOOL
 
	mMaxLevñ
;

26 
	mMoveNo
;

27 
	mChessClockTŸÆTime
;

28 
	mBœckTŸÆTime
;

29 
	mWhôeTŸÆTime
;

30 
	mPõ˚VÆue
[7];

34 
	$SaveGame
–*
fûe_«me
 )

36 if–! 
	`°æí
(
fûe_«me
) )

39 
FILE
 *
gamebﬂrd
;

41 if–(
gamebﬂrd
 = 
	`f›í
–
fûe_«me
, "wb" )Ë=
NULL
 ) {

42 
	`•rötf
–
buf
, "C™nŸ o≥¿%†f‹ wrôög", 
fûe_«me
 );

43 ::
	`MesßgeBox
–
hWndMaö
, 
buf
, "Chess", 
MB_OK
 | 
MB_ICONHAND
 );

47 
SAVERESTORE
 
Save
;

49 
Save
.
Pœyî
 = Player;

50 
Save
.
Oµ⁄ít
 = Opponent;

51 
Save
.
ProgømCﬁ‹
 = ProgramColor;

52 
Save
.
Tu∫ed
 = Turned;

53 
Save
.
Mu…iMove
 = MultiMove;

54 
Save
.
AutoPœy
 = AutoPlay;

55 
Save
.
SögÀSãp
 = SingleStep;

56 
Save
.
Levñ
 = Level;

57 
Save
.
AvîageTime
 = AverageTime;

58 
Save
.
MaxLevñ
 = MaxLevel;

59 
Save
.
MoveNo
 = MoveNo;

60 
Save
.
ChessClockTŸÆTime
 = 
ChessClock
.
tŸÆtime
;

61 
Save
.
BœckTŸÆTime
 = 
ChessTime
[
bœck
].
tŸÆtime
;

62 
Save
.
WhôeTŸÆTime
 = 
ChessTime
[
whôe
].
tŸÆtime
;

63 
	`mem˝y
–
Save
.
Põ˚VÆue
, PieceValue, 7 * () );

65 
	`fwrôe
–&
Save
, (
SAVERESTORE
), 1, 
gamebﬂrd
 );

66 
	`fwrôe
–
Bﬂrd
, (Bﬂrd), 1, 
gamebﬂrd
 );

68 
	`f˛o£
(
gamebﬂrd
);

69 
	}
}

74 
	$Re°‹eGame
–*
fûe_«me
 )

76 if–!
	`°æí
(
fûe_«me
) )

79 
FILE
 *
gamebﬂrd
;

80 
SAVERESTORE
 
Re°‹e
;

82 if–(
gamebﬂrd
 = 
	`f›í
–
fûe_«me
, "rb" )Ë=
NULL
 ) {

83 
dñëe
 
Re°‹e
;

84 
	`•rötf
(
buf
, "C™nŸ o≥¿%†f‹Ñódög", 
fûe_«me
);

85 ::
	`MesßgeBox
–
hWndMaö
, 
buf
, "Chess", 
MB_OK
 | 
MB_ICONHAND
 );

89 
	`‰ód
–&
Re°‹e
, (
SAVERESTORE
), 1, 
gamebﬂrd
 );

90 
	`‰ód
–
Bﬂrd
, (Bﬂrd), 1, 
gamebﬂrd
 );

92 
	`f˛o£
–
gamebﬂrd
 );

94 
Pœyî
 = 
Re°‹e
.Player;

95 
Oµ⁄ít
 = 
Re°‹e
.Opponent;

96 
ProgømCﬁ‹
 = 
Re°‹e
.ProgramColor;

97 
Tu∫ed
 = 
Re°‹e
.Turned;

98 
Mu…iMove
 = 
Re°‹e
.MultiMove;

99 
AutoPœy
 = 
Re°‹e
.AutoPlay;

100 
SögÀSãp
 = 
Re°‹e
.SingleStep;

101 
Levñ
 = 
Re°‹e
.Level;

102 
AvîageTime
 = 
Re°‹e
.AverageTime;

103 
MaxLevñ
 = 
Re°‹e
.MaxLevel;

104 
MoveNo
 = 
Re°‹e
.MoveNo;

105 
ChessClock
.
tŸÆtime
 = 
Re°‹e
.
ChessClockTŸÆTime
;

106 
ChessTime
[
bœck
].
tŸÆtime
 = 
Re°‹e
.
BœckTŸÆTime
 ;

107 
ChessTime
[
whôe
].
tŸÆtime
 = 
Re°‹e
.
WhôeTŸÆTime
;

108 
	`mem˝y
(
Põ˚VÆue
, 
Re°‹e
.PieceValue, 7 * ());

111 
	`CÀ¨Di•œy
();

112 
	`InôDi•œy
();

113 ::
	`InvÆid©eRe˘
(
hWndMaö
, 
NULL
, 
TRUE
);

114 
	`PrötCurLevñ
();

115 
	`Re£tNewPos
();

116 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/search.cpp

4 
	~<owl\owÕch.h
>

5 #¥agm®
hdr°›


7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~<dos.h
>

10 
	~<°dio.h
>

12 
	~"wcdefs.h
"

13 
	~"exã∫s.h
"

15 #unde‡
max


16 #unde‡
mö


17 
	#max
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

18 
	#mö
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

20 
BOOL
 
	gCompuãrThökög
 = 
FALSE
;

21 
BOOL
 
	gGŸVÆidMove
 = 
FALSE
;

22 
COLORTYPE
 
	gPœyî
, 
	gOµ⁄ít
;

23 
DEPTHTYPE
 
	gDïth
;

24 
LINETYPE
 
	gMaöLöe
;

25 
MAXTYPE
 
	gMaöEvÆu
;

26 
	gMaxDïth
;

27 
	gLegÆMoves
;

28 
PIECETAB
 
	gPõ˚Tab
[2][16];

29 
W™ãdTime
;

30 
WORD
 
	gMesßgeToPo°
;

31 
BOOL
 
	gNoCompuãrMove
 = 
FALSE
;

33 
MOVETYPE
 
	gmovëemp
[
MAXPLY
 - 
BACK
 + 2];

35 
MOVETYPE
 *
	gMovTab
 = &
movëemp
[-
BACK
];

37 
	#TOLERANCE
 8

	)

38 
	#IF_EQMOVE
(
a
, 
b
Ëi‡(◊.
movpõ˚
 =b.movpõ˚Ë&& (a.
√w1
 \

39 =
b
.
√w1
Ë&& (
a
.
ﬁd
 =b.ﬁdË&& (a.
c⁄ã¡
 == b.content) \

40 && (
a
.
•e
 =
b
.•e))

	)

44 
	m¥öcùv¨
;

45 
MAXTYPE
 
	mvÆue
,

46 
	mevÆu©i⁄
;

47 } 
	tINFTYPE
;

49 íum {
	mm™e
, 
	m•ecülˇp
, 
	mkûl
, 
	mn‹ml
} 
	tMOVGENTYPE
;

53 
LINETYPE
 
	mlöe
;

54 
	mˇ±uª£¨ch
;

55 
MAXTYPE
 
	mmaxvÆ
;

56 
	m√xçly
;

57 
INFTYPE
 
	m√xt
;

58 
	mzîowödow
;

59 
MOVGENTYPE
 
	mmovgíty≥
;

60 } 
	tSEARCHTYPE
;

64 
MAXTYPE
 
	mÆpha
, 
	mbëa
;

65 
	m∂y
;

66 
INFTYPE
 *
	möf
;

67 
MOVETYPE
 *
	mbe°löe
;

68 
SEARCHTYPE
 *
	mS
;

69 } 
	tPARAMTYPE
;

75 
MOVETYPE
 
	gkûlögmove
[
MAXPLY
+1][2];

76 
	gchcktb
[
MAXPLY
+3];

77 *
	gcheckèb
 = &
chcktb
[1];

79 
EDGESQUARETYPE
 
	g∑ssd∑wn
[
MAXPLY
+4];

80 
EDGESQUARETYPE
 *
	g∑s£d∑wn
 = &
∑ssd∑wn
[2];

81 
BOOL
 
	gSkùSórch
;

85 
ölöe
 
	$Di•œyMove
()

87 if–!
Dïth
 ) {

88 
	`•rötf
–
buf
, "%-7d%7s", 
MaxDïth
, 
	`MoveSå
–&
MovTab
[0] ) );

89 
TInfo
->
	`SëDïthText
–
buf
 );

91 
	}
}

97 
	$˛órkûlmove
( )

99 c⁄° 
SQUARETYPE
 
ønk7
[2] = {0x60, 0x10};

100 
DEPTHTYPE
 
dï
;

101 
COLORTYPE
 
cﬁ
;

102 
SQUARETYPE
 
sq
;

103 
i
;

105  
dï
 = 0; dï <
MAXPLY
; dep++ )

106  
i
 = 0; i < 2; i++ )

107 
kûlögmove
[
dï
][
i
] = 
ZîoMove
;

109 
checkèb
[-1] = 0;

110 
∑s£d∑wn
[-2] = -1;

111 
∑s£d∑wn
[-1] = -1;

114  
cﬁ
 = 
whôe
; cﬁ <
bœck
; ( ( )col )++ )

115  
sq
 = 
ønk7
[
cﬁ
]; sq <=Ñank7[col] + 7; sq++ )

116 if––
Bﬂrd
[
sq
].
põ˚
 =
∑wn
 ) && ( Bﬂrd[sq].
cﬁ‹
 =
cﬁ
 ) )

117 if–
cﬁ
 =
Pœyî
 )

118 
∑s£d∑wn
[-2] = 
sq
;

120 
∑s£d∑wn
[-1] = 
sq
;

121 
	}
}

124 
DEPTHTYPE
 
	g£¨ch°©edïth
;

130 
	$gë¥ogøm°©e
( )

132 
COLORTYPE
 
ﬁd∂ayî
;

134 
£¨ch°©edïth
 = 
Dïth
;

135  
Dïth
 > 0 ) {

136 
Dïth
--;

137 
ﬁd∂ayî
 = 
Oµ⁄ít
;

138 
Oµ⁄ít
 = 
Pœyî
;

139 
Pœyî
 = 
ﬁd∂ayî
;

140 
	`Pîf‹m
–&
MovTab
[
Dïth
], 1 );

143 
Dïth
--;

144 if–
O∑n
 )

145 
	`TakeBackMove
–&
MovTab
[
Dïth
] );

146 
	}
}

153 
	$gë£¨ch°©e
( )

155 
COLORTYPE
 
ﬁd∂ayî
;

157 if–
O∑n
 )

158 
	`MakeMove
–&
MovTab
[
Dïth
+1] );

160 
Dïth
++;

162  
Dïth
 < 
£¨ch°©edïth
 ) {

163 
	`Pîf‹m
–&
MovTab
[
Dïth
], 0 );

164 
ﬁd∂ayî
 = 
Pœyî
;

165 
Pœyî
 = 
Oµ⁄ít
;

166 
Oµ⁄ít
 = 
ﬁd∂ayî
;

167 
Dïth
++;

169 
	}
}

171 
ölöe
 
BOOL
 
	$UßbÀMesßge
–
MSG
 
msg
 )

173 if–
msg
.
hwnd
 !
hWndMaö
 || msg.
mesßge
 !
WM_COMMAND
 )

174  
FALSE
;

176  
TRUE
;

177 
	}
}

179 
	$MesßgeSˇn
()

181 
MSG
 
msg
;

182 
HCURSOR
 
hWaôCurs‹
;

183 
HMENU
 
ThökMíu
;

184 
HANDLE
 
hAc˚l
;

186 if–!
	`PìkMesßge
–&
msg
, 
hWndMaö
, 0, 0, 
PM_REMOVE
 ) )

189 if–
	`Tøn¶©eAc˚Àøt‹
–
hWndMaö
, 
	`HACCEL
–
hAc˚l
 ), &
msg
 ) ) {

190 ::
	`Po°Mesßge
–
hWndMaö
, 
WM_COMMAND
, 
MesßgeToPo°
, 0L );

191 
MesßgeToPo°
 = 0;

192 
SkùSórch
 = 
FALSE
;

196 if–
A«lysis
 ) {

197  
msg
.
mesßge
 ) {

198 
WM_SETCURSOR
 :

199 
	`Di•©chMesßge
–&
msg
 );

201 
WM_COMMAND
 :

202  
msg
.
wP¨am
 ) {

203 
CM_STOP
 :

204 
SkùSórch
 = 
TRUE
;

205 
AutoPœy
 = 
FALSE
;

210 
	`Tøn¶©eMesßge
–&
msg
 );

211 
	`Di•©chMesßge
–&
msg
 );

215  
msg
.
mesßge
 ) {

216 
WM_LBUTTONDOWN
 :

217 
	`gë¥ogøm°©e
();

218 
NoCompuãrMove
 = 
TRUE
;

219 
GŸVÆidMove
 = 
FALSE
;

220 
	`Di•©chMesßge
–&
msg
 );

221 
NoCompuãrMove
 = 
FALSE
;

222 if–
O∑n
 && !
Mu…iMove
 && 
GŸVÆidMove
 ) {

223 
	`IF_EQMOVE
–
KeyMove
, 
MovTab
[
Dïth
 + 1] ) {

224 
SkùSórch
 = 
FALSE
;

225 
GŸVÆidMove
 = 
FALSE
;

226 
	`E¡îKeyMove
();

227 
	`SèπA«lysis
();

228 
	`PrötBe°Move
–&
MaöLöe
[0], 
MaöEvÆu
 );

229 ::
	`SëMíu
–
hWndMaö
, 
ThökMíu
 );

230 ::
	`SëCœssW‹d
–
hWndMaö
, 
GCW_HCURSOR
, 
	`WORD
–
hWaôCurs‹
 ) );

231 ::
	`SëCurs‹
–
hWaôCurs‹
 );

233 
SkùSórch
 = 
TRUE
;

235 
	`gë£¨ch°©e
();

238 if–
	`UßbÀMesßge
–
msg
 ) ) {

239 
SkùSórch
 = 
TRUE
;

240 if–
msg
.
mesßge
 !
WM_PAINT
 )

241 ::
	`Po°Mesßge
–
msg
.
hwnd
, msg.
mesßge
, msg.
wP¨am
, msg.
lP¨am
 );

243 
	`Tøn¶©eMesßge
–&
msg
 );

244 
	`Di•©chMesßge
–&
msg
 );

249 
	}
}

252 
INFTYPE
 
	g°¨töf
;

253 
MAXTYPE
 
	gÆphawödow
;

254 
MAXTYPE
 
	gª≥©evÆu
;

256 
MAXTYPE
 
£¨ch
–MAXTYPE 
Æpha
, MAXTYPE 
bëa
, 
∂y
, 
INFTYPE
 *
öf
, 
MOVETYPE
 *
be°löe
 );

262 
ölöe
 
	$upd©ekûl
–
MOVETYPE
 *
be°move
 )

264 if–
be°move
->
movpõ˚
 !
no_põ˚
 ) {

267 if––
MovTab
[
Dïth
 - 1].
movpõ˚
 =
no_põ˚
 ) || ( 
be°move
->
√w1
 != MovTab[Depth-1].new1 ) )

268 if––
kûlögmove
[
Dïth
][0].
movpõ˚
 =
no_põ˚
 ) || ( 
	`EqMove
–
be°move
, &killingmove[Depth][1] ) ) ) {

269 
kûlögmove
[
Dïth
][1] = killingmove[Depth][0];

270 
kûlögmove
[
Dïth
][0] = *
be°move
;

271 } if–!
	`EqMove
–
be°move
, &
kûlögmove
[
Dïth
][0] ) )

272 
kûlögmove
[
Dïth
][1] = *
be°move
;

274 
	}
}

282 
	$gíî©edbef‹e
–
PARAMTYPE
 *
P
 )

284 
i
;

286 if–
P
->
S
->
movgíty≥
 !
m™e
 ) {

287 
	`IF_EQMOVE
–
MovTab
[
Dïth
], 
P
->
be°löe
[Depth] )

290 if–!
P
->
S
->
ˇ±uª£¨ch
 )

291 if–
P
->
S
->
movgíty≥
 !
kûl
 )

292  
i
 = 0; i < 2; i++ )

293 
	`IF_EQMOVE
–
MovTab
[
Dïth
], 
kûlögmove
[Dïth][
i
] )

298 
	}
}

305 
ölöe
 
	$cut
–
MAXTYPE
 
cutvÆ
, 
PARAMTYPE
 *
P
 )

307 
˘
 = 0;

309 if–
cutvÆ
 <
P
->
Æpha
 ) {

310 
˘
 = 1;

311 if–
P
->
S
->
maxvÆ
 < 
cutvÆ
 )

312 
P
->
S
->
maxvÆ
 = 
cutvÆ
;

315  
˘
;

316 
	}
}

323 
	$upd©e
–
PARAMTYPE
 *
P
 )

325 
£À˘i⁄
;

327 
	`IncNode
–&
Nodes
 );

328 
P
->
S
->
√xçly
 = P->
∂y
 - 1;

329 if–
Levñ
 =
m©e£¨ch
 )

331 
	`Pîf‹m
–&
MovTab
[
Dïth
], 0 );

333 if–
	`Aâacks
–
Oµ⁄ít
, 
Põ˚Tab
[
Pœyî
][0].
isqu¨e
 ) )

334 
TAKEBACKMOVE
;

335 if–!
Dïth
 ) 
LegÆMoves
++;

336 
checkèb
[
Dïth
] = 0;

337 
∑s£d∑wn
[
Dïth
] = -1;

338 
P
->
S
->
√xt
.
vÆue
 = P->S->√xt.
evÆu©i⁄
 = 0;

339 if–
P
->
S
->
√xçly
 <= 0 )

341 if–!
P
->
S
->
√xçly
 )

342 
checkèb
[
Dïth
] = 
	`Aâacks
–
Pœyî
,

343 
Põ˚Tab
[
Oµ⁄ít
][0].
isqu¨e
 );

344 if–!
checkèb
[
Dïth
] )

345 if–
	`cut
–
P
->
S
->
√xt
.
vÆue
, P ) ) 
TAKEBACKMOVE
;

347 
ACCEPTMOVE
;

350 if–
MaxDïth
 <= 1 )

351 if–
P
->
S
->
ˇ±uª£¨ch
 && 
Dïth
 >= 2 )

352 if–!––
MovTab
[
Dïth
].
c⁄ã¡
 < MovTab[Dïth].
movpõ˚
 )

353 || ( 
P
->
S
->
movgíty≥
 =
•ecülˇp
 ) || ( 
MovTab
[
Dïth
].
ﬁd


354 =
MovTab
[
Dïth
-2].
√w1
 ) ) )

355 
CUTMOVE
;

357 
P
->
S
->
√xt
.
vÆue
 = -P->
öf
->vÆuê+ 
	`SètEvÆu
–&
MovTab
[
Dïth
] );

360 
checkèb
[
Dïth
] = 
	`Põ˚Aâacks
–
MovTab
[Dïth].
movpõ˚
, 
Pœyî
,

361 
MovTab
[
Dïth
].
√w1
, 
Põ˚Tab
[
Oµ⁄ít
][0].
isqu¨e
 );

362 if–
checkèb
[
Dïth
] ) 
P
->
S
->
√xçly
 = P->
∂y
;

365 
∑s£d∑wn
[
Dïth
] =Öassedpawn[Depth - 2];

366 if–
MovTab
[
Dïth
].
movpõ˚
 =
∑wn
 )

367 if––
MovTab
[
Dïth
].
√w1
 < 0x18 ) || ( MovTab[Depth].new1 >= 0x60 ) )

369 
∑s£d∑wn
[
Dïth
] = 
MovTab
[Dïth].
√w1
;

370 
P
->
S
->
√xçly
 = P->
∂y
;

373 
£À˘i⁄
 = ( ( 
P
->
S
->
√xçly
 <0 ) && !
checkèb
[
Dïth
] && ( Depth > 0 ) );

374 if–
£À˘i⁄
 )

375 if–
	`cut
–
P
->
S
->
√xt
.
vÆue
 + 0, P ) ) 
CUTMOVE
;

376 
	`Pîf‹m
–&
MovTab
[
Dïth
], 0 );

378 if–
	`Aâacks
–
Oµ⁄ít
, 
Põ˚Tab
[
Pœyî
][0].
isqu¨e
 ) )

379 
TAKEBACKMOVE
;

380 if–
∑s£d∑wn
[
Dïth
] >= 0 )

381 if–
Bﬂrd
[
∑s£d∑wn
[
Dïth
]].
põ˚
 !
∑wn
 ||

382 
Bﬂrd
[
∑s£d∑wn
[
Dïth
]].
cﬁ‹
 !
Pœyî
 )

383 
∑s£d∑wn
[
Dïth
] = -1;

384 if–!
Dïth
 )

386 
LegÆMoves
++;

387 
P
->
S
->
√xt
.
vÆue
 +
	`øndom
( 4 );

389 
P
->
S
->
√xt
.
evÆu©i⁄
 = P->S->√xt.
vÆue
;

390 
ACCEPTMOVE
:

391 if–
A«lysis
 )

392 
	`Di•œyMove
();

394 
TAKEBACKMOVE
:

395 
	`Pîf‹m
–&
MovTab
[
Dïth
], 1 );

396 
CUTMOVE
:

397 if–
A«lysis
 )

398 
	`Di•œyMove
();

400 
	}
}

407 
	$døwgame
–
SEARCHTYPE
 *
S
 )

409 
døwcou¡
;

410 
REPEATTYPE
 
£¨chª≥©
;

411 
FIFTYTYPE
 
£¨chfi·y
;

413 if–
Dïth
 == 1 )

415 
£¨chfi·y
 = 
	`Fi·yMoveC¡
();

416 
£¨chª≥©
 = 
	`Rïëôi⁄
( 0 );

417 if–
£¨chª≥©
 >= 3 )

419 
S
->
√xt
.
evÆu©i⁄
 = 0;

422 
døwcou¡
 = 0;

423 if–
£¨chfi·y
 >= 96 )

424 
døwcou¡
 = 3;

427 if–
£¨chª≥©
 >= 2 )

428 
døwcou¡
 = 2;

429 if–
£¨chfi·y
 >= 20 )

430 
døwcou¡
 = 1;

432 
S
->
√xt
.
vÆue
 +–
ª≥©evÆu
 / 4 ) * 
døwcou¡
;

433 
S
->
√xt
.
evÆu©i⁄
 +–
ª≥©evÆu
 / 4 ) * 
døwcou¡
;

435 if–
Dïth
 >= 3 )

437 
£¨chª≥©
 = 
	`Rïëôi⁄
( 1 );

438 if–
£¨chª≥©
 >= 2 )

440 
S
->
√xt
.
evÆu©i⁄
 = 0;

445 
	}
}

452 
ölöe
 
	$upd©ebe°löe
–
PARAMTYPE
 *
P
 )

454 
	`mem˝y
–
P
->
be°löe
, &P->
S
->
löe
[0], –
LINETYPE
 ) );

456 
P
->
be°löe
[
Dïth
] = 
MovTab
[Depth];

457 if–!
Dïth
 )

459 
MaöEvÆu
 = 
P
->
S
->
maxvÆ
;

460 if–
Levñ
 =
m©e£¨ch
 )

461 
P
->
S
->
maxvÆ
 = 
Æphawödow
;

462 if–
A«lysis
 ) 
	`PrötBe°Move
–&
MaöLöe
[0], 
MaöEvÆu
 );

464 
	}
}

471 
	$lo›body
–
PARAMTYPE
 *
P
 )

473 
COLORTYPE
 
ﬁd∂ayî
;

474 
œ°™Æysis
;

476 if–
	`gíî©edbef‹e
–
P
 ) )  0;

477 if–
Dïth
 < 
MAXPLY
 )

479 
P
->
S
->
löe
[
Dïth
 + 1] = 
ZîoMove
;

480 if–
P
->
S
->
movgíty≥
 =
m™e
 )

481 
	`memmove
–&
P
->
S
->
löe
[0], P->
be°löe
, –
LINETYPE
 ) );

486 
P
->
S
->
√xt
.
¥öcùv¨
 = 0;

487 
P
->
S
->
zîowödow
 = 0;

488 if–
P
->
öf
->
¥öcùv¨
 )

489 if–
P
->
S
->
movgíty≥
 =
m™e
 )

490 
P
->
S
->
√xt
.
¥öcùv¨
 = ( P->
be°löe
[
Dïth
+1].
movpõ˚
 !
no_põ˚
 );

492 
P
->
S
->
zîowödow
 = ( P->S->
maxvÆ
 >P->
Æpha
 );

493 
REPEATSEARCH
:

494 if–
	`upd©e
–
P
 ) )  0;

495 if–
Levñ
 =
m©e£¨ch
 )

496 if––
P
->
S
->
√xçly
 <0 ) && !
checkèb
[
Dïth
] ) 
NOTSEARCH
;

497 if–
	`døwgame
–
P
->
S
 ) ) 
NOTSEARCH
;

498 if–
Dïth
 >
MAXPLY
 )

499 
NOTSEARCH
;

501 
ﬁd∂ayî
 = 
Pœyî
;

502 
Pœyî
 = 
Oµ⁄ít
;

503 
Oµ⁄ít
 = 
ﬁd∂ayî
;

504 
Dïth
++;

505 if–
P
->
S
->
zîowödow
 )

506 
P
->
S
->
√xt
.
evÆu©i⁄
 = -
	`£¨ch
–-P->
Æpha
 - 1, -P->Æpha, P->S->
√xçly
,

507 &
P
->
S
->
√xt
, &P->S->
löe
[0] );

509 
P
->
S
->
√xt
.
evÆu©i⁄
 = -
	`£¨ch
–-P->
bëa
, -P->
Æpha
, P->S->
√xçly
,

510 &
P
->
S
->
√xt
, &P->S->
löe
[0] );

511 
Dïth
--;

512 
ﬁd∂ayî
 = 
Oµ⁄ít
;

513 
Oµ⁄ít
 = 
Pœyî
;

514 
Pœyî
 = 
ﬁd∂ayî
;

515 
NOTSEARCH
:

516 
	`Pîf‹m
–&
MovTab
[
Dïth
], 1 );

517 if–
SkùSórch
 )

519 
œ°™Æysis
 = 
A«lysis
;

520 
	`MesßgeSˇn
();

521 if–!
SkùSórch
 )

522 if–
A«lysis
 && !
SögÀSãp
 && ( ( !
Dïth
 ) || !
œ°™Æysis
 ) )

524 
	`St›Time
–&
ChessClock
 );

525 if–
MaöEvÆu
 > 
Æphawödow
 )

526 
SkùSórch
 = 
ChessClock
.
tŸÆtime
 >–
W™ãdTime
 * 1.5 );

528 if–
A«lysis
 && ( 
MaxDïth
 <= 1 ) )

529 
SkùSórch
 = 0;

530 
P
->
S
->
maxvÆ
 = 
	`max
–P->S->maxvÆ, P->S->
√xt
.
evÆu©i⁄
 );

531 
	`IF_EQMOVE
–
P
->
be°löe
[
Dïth
], 
MovTab
[Depth] )

532 
	`upd©ebe°löe
–
P
 );

533 if–
P
->
Æpha
 < P->
S
->
maxvÆ
 )

535 
	`upd©ebe°löe
–
P
 );

536 if–
P
->
S
->
maxvÆ
 >P->
bëa
 )

539 if–
P
->
∂y
 >2 && P->
öf
->
¥öcùv¨
 && !P->
S
->
zîowödow
 )

540 
P
->
S
->
maxvÆ
 = 
	`mö
–P->S->maxvÆ + 
TOLERANCE
, P->
bëa
 - 1 );

541 
P
->
Æpha
 = P->
S
->
maxvÆ
;

542 if–
P
->
S
->
zîowödow
 && ! 
SkùSórch
 )

545 
P
->
S
->
zîowödow
 = 0;

546 
REPEATSEARCH
;

549  
SkùSórch
;

550 
	}
}

557 
	$∑w≈romŸi⁄gí
–
PARAMTYPE
 *
P
 )

559 
PIECETYPE
 
¥omŸe
;

561 
MovTab
[
Dïth
].
•e
 = 1;

562  
¥omŸe
 = 
quìn
;ÖromŸê<
knight
; ( ( )promote )++ )

564 
MovTab
[
Dïth
].
movpõ˚
 = 
¥omŸe
;

565 if–
	`lo›body
–
P
 ) )  1;

567 
MovTab
[
Dïth
].
•e
 = 0;

569 
	}
}

576 
	$ˇpmovgí
–
SQUARETYPE
 
√wsq
, 
PARAMTYPE
 *
P
 )

578 
EDGESQUARETYPE
 
nxtsq
, 
sq
;

579 
INDEXTYPE
 
i
;

581 
MovTab
[
Dïth
].
c⁄ã¡
 = 
Bﬂrd
[
√wsq
].
põ˚
;

582 
MovTab
[
Dïth
].
•e
 = 0;

583 
MovTab
[
Dïth
].
√w1
 = 
√wsq
;

584 
MovTab
[
Dïth
].
movpõ˚
 = 
∑wn
;

585 
nxtsq
 = 
MovTab
[
Dïth
].
√w1
 - 
PawnDú
[
Pœyî
];

586  
sq
 = 
nxtsq
 - 1; sq <=Çxtsq + 1; sq++ )

587 if–
sq
 !
nxtsq
 )

588 if–!–
sq
 & 0x88 ) )

589 if–
Bﬂrd
[
sq
].
põ˚
 =
∑wn
 && Bﬂrd[sq].
cﬁ‹
 =
Pœyî
 )

591 
MovTab
[
Dïth
].
ﬁd
 = 
sq
;

592 if–
MovTab
[
Dïth
].
√w1
 < 8 || MovTab[Depth].new1

595 if–
	`∑w≈romŸi⁄gí
–
P
 ) )

598 if–
	`lo›body
–
P
 ) )

601  
i
 = 
Offi˚rNo
[
Pœyî
]; i >= 0; i-- )

602 if–
Põ˚Tab
[
Pœyî
][
i
].
ùõ˚
 !
no_põ˚
 &&

603 
Põ˚Tab
[
Pœyî
][
i
].
ùõ˚
 !
∑wn
 )

604 if–
	`Põ˚Aâacks
–
Põ˚Tab
[
Pœyî
][
i
].
ùõ˚
, Player,

605 
Põ˚Tab
[
Pœyî
][
i
].
isqu¨e
, 
√wsq
 ) )

607 
MovTab
[
Dïth
].
ﬁd
 = 
Põ˚Tab
[
Pœyî
][
i
].
isqu¨e
;

608 
MovTab
[
Dïth
].
movpõ˚
 = 
Põ˚Tab
[
Pœyî
][
i
].
ùõ˚
;

609 if–
	`lo›body
–
P
 ) )  1;

612 
	}
}

619 
	$n⁄ˇpmovgí
–
SQUARETYPE
 
ﬁdsq
, 
PARAMTYPE
 *
P
 )

621 
DIRTYPE
 
fú°
, 
œ°
, 
dú
;

622 
dúe˘i⁄
;

623 
EDGESQUARETYPE
 
√wsq
;

625 
MovTab
[
Dïth
].
•e
 = 0;

626 
MovTab
[
Dïth
].
ﬁd
 = 
ﬁdsq
;

627 
MovTab
[
Dïth
].
movpõ˚
 = 
Bﬂrd
[
ﬁdsq
].
põ˚
;

628 
MovTab
[
Dïth
].
c⁄ã¡
 = 
no_põ˚
;

629  
MovTab
[
Dïth
].
movpõ˚
 )

631 
kög
 :

632  
dú
 = 7; dir >= 0; dir-- )

634 
√wsq
 = 
MovTab
[
Dïth
].
ﬁd
 + 
DúTab
[
dú
];

635 if–!–
√wsq
 & 0x88 ) )

636 if–
Bﬂrd
[
√wsq
].
põ˚
 =
no_põ˚
 )

638 
MovTab
[
Dïth
].
√w1
 = 
√wsq
;

639 if–
	`lo›body
–
P
 ) )

644 
knight
 :

645  
dú
 = 7; dir >= 0; dir-- )

647 
√wsq
 = 
MovTab
[
Dïth
].
ﬁd
 + 
KnightDú
[
dú
];

648 if–!–
√wsq
 & 0x88 ) )

649 if–
Bﬂrd
[
√wsq
].
põ˚
 =
no_põ˚
 )

651 
MovTab
[
Dïth
].
√w1
 = 
√wsq
;

652 if–
	`lo›body
–
P
 ) )

657 
quìn
 :

658 
rook
 :

659 
bish›
 :

660 
fú°
 = 7;

661 
œ°
 = 0;

662 if–
MovTab
[
Dïth
].
movpõ˚
 =
rook
 ) 
fú°
 = 3;

663 if–
MovTab
[
Dïth
].
movpõ˚
 =
bish›
 ) 
œ°
 = 4;

664  
dú
 = 
fú°
; dú >
œ°
; dir-- )

666 
dúe˘i⁄
 = 
DúTab
[
dú
];

667 
√wsq
 = 
MovTab
[
Dïth
].
ﬁd
 + 
dúe˘i⁄
;

668  !–
√wsq
 & 0x88 ) )

670 if–
Bﬂrd
[
√wsq
].
põ˚
 !
no_põ˚
 ) 
TEN
;

671 
MovTab
[
Dïth
].
√w1
 = 
√wsq
;

672 if–
	`lo›body
–
P
 ) )

674 
√wsq
 = 
MovTab
[
Dïth
].
√w1
 + 
dúe˘i⁄
;

676 
TEN
:

680 
∑wn
 :

682 
MovTab
[
Dïth
].
√w1
 = MovTab[Dïth].
ﬁd
 + 
PawnDú
[
Pœyî
];

683 if–
Bﬂrd
[
MovTab
[
Dïth
].
√w1
].
põ˚
 =
no_põ˚
 )

684 if–
MovTab
[
Dïth
].
√w1
 < 8 || MovTab[Depth].new1 >= 0x70 )

686 if–
	`∑w≈romŸi⁄gí
–
P
 ) )  1;

690 if–
	`lo›body
–
P
 ) )

692 if–
MovTab
[
Dïth
].
ﬁd
 < 0x18 || MovTab[Depth].old

696 
MovTab
[
Dïth
].
√w1
 += ( MovTab[Depth].new1

697 - 
MovTab
[
Dïth
].
ﬁd
 );

698 if–
Bﬂrd
[
MovTab
[
Dïth
].
√w1
].
põ˚
 =
no_põ˚
 )

699 if–
	`lo›body
–
P
 ) )

705 
	}
}

712 
	$ˇ°lögmovgí
–
PARAMTYPE
 *
P
 )

714 
CASTDIRTYPE
 
ˇ°dú
;

716 
MovTab
[
Dïth
].
•e
 = 1;

717 
MovTab
[
Dïth
].
movpõ˚
 = 
kög
;

718 
MovTab
[
Dïth
].
c⁄ã¡
 = 
no_põ˚
;

720  
ˇ°dú
 = ( 
CASTDIRTYPE
 )–
 g
-1 ); ca°dú <
shπ
-1; ( ()castdir )++ ) {

722 
MovTab
[
Dïth
].
√w1
 = 
Ca°Move
[
Pœyî
][
ˇ°dú
].
ˇ°√w
;

723 
MovTab
[
Dïth
].
ﬁd
 = 
Ca°Move
[
Pœyî
][
ˇ°dú
].
ˇ°ﬁd
;

725 if–
	`KûlMovGí
–&
MovTab
[
Dïth
] ) )

726 if–
	`lo›body
–
P
 ) )

730 
	}
}

737 
	$ïˇpmovgí
–
PARAMTYPE
 *
P
 )

739 
EDGESQUARETYPE
 
sq
;

741 if–
MovTab
[
Dïth
 - 1].
movpõ˚
 =
∑wn
 )

742 if–
	`abs
–
MovTab
[
Dïth
 - 1].
√w1
 - MovTab[Dïth - 1].
ﬁd
 ) >= 0x20 )

744 
MovTab
[
Dïth
].
•e
 = 1;

745 
MovTab
[
Dïth
].
movpõ˚
 = 
∑wn
;

746 
MovTab
[
Dïth
].
c⁄ã¡
 = 
no_põ˚
;

747 
MovTab
[
Dïth
].
√w1
 = ( MovTab[Depth - 1].new1 +

748 
MovTab
[
Dïth
 - 1].
ﬁd
 ) / 2;

749  
sq
 = 
MovTab
[
Dïth
 - 1].
√w1
 - 1; sq <=

750 
MovTab
[
Dïth
 - 1].
√w1
 + 1; 
sq
++ )

751 if–
sq
 !
MovTab
[
Dïth
 - 1].
√w1
 )

752 if–!–
sq
 & 0x88 ) )

754 
MovTab
[
Dïth
].
ﬁd
 = 
sq
;

755 if–
	`KûlMovGí
–&
MovTab
[
Dïth
] ) )

756 if–
	`lo›body
–
P
 ) )

761 
	}
}

778 
	$£¨chmovgí
–
PARAMTYPE
 *
P
 )

780 
INDEXTYPE
 
ödex
;

781 
kû o
;

784 if–
P
->
be°löe
[
Dïth
].
movpõ˚
 !
no_põ˚
 )

786 
MovTab
[
Dïth
] = 
P
->
be°löe
[Depth];

787 
P
->
S
->
movgíty≥
 = 
m™e
;

788 if–
	`lo›body
–
P
 ) ) ;

790 if–
MovTab
[
Dïth
 - 1].
movpõ˚
 !
no_põ˚
 )

791 if–
MovTab
[
Dïth
 - 1].
movpõ˚
 !
kög
 )

793 
P
->
S
->
movgíty≥
 = 
•ecülˇp
;

794 if–
	`ˇpmovgí
–
MovTab
[
Dïth
 - 1].
√w1
, 
P
 ) ) ;

796 
P
->
S
->
movgíty≥
 = 
kûl
;

797 if–!
P
->
S
->
ˇ±uª£¨ch
 )

798  
kû o
 = 0; killno <= 1; killno++ )

800 
MovTab
[
Dïth
] = 
kûlögmove
[Dïth][
kû o
];

801 if–
MovTab
[
Dïth
 - 1].
movpõ˚
 !
no_põ˚
 )

802 if–
	`KûlMovGí
–&
MovTab
[
Dïth
] ) )

803 if–
	`lo›body
–
P
 ) ) ;

805 
P
->
S
->
movgíty≥
 = 
n‹ml
;

806  
ödex
 = 1; index <
PawnNo
[
Oµ⁄ít
]; index++ )

807 if–
Põ˚Tab
[
Oµ⁄ít
][
ödex
].
ùõ˚
 !
no_põ˚
 )

808 if–
MovTab
[
Dïth
-1].
movpõ˚
 =
no_põ˚
 ||

809 
Põ˚Tab
[
Oµ⁄ít
][
ödex
].
isqu¨e
 !=

810 
MovTab
[
Dïth
-1].
√w1
 )

811 if–
	`ˇpmovgí
–
Põ˚Tab
[
Oµ⁄ít
][
ödex
].
isqu¨e
, 
P
 ) )

813 if–
P
->
S
->
ˇ±uª£¨ch
 )

815 if–
∑s£d∑wn
[
Dïth
-2] >= 0 )

816 if–
Bﬂrd
[
∑s£d∑wn
[
Dïth
-2]].
põ˚
 =
∑wn
 &&

817 
Bﬂrd
[
∑s£d∑wn
[
Dïth
-2]].
cﬁ‹
 =
Pœyî
 )

818 if–
	`n⁄ˇpmovgí
–
∑s£d∑wn
[
Dïth
-2], 
P
 ) ) ;

820 if–!
P
->
S
->
ˇ±uª£¨ch
 )

822 if–
	`ˇ°lögmovgí
–
P
 ) )

824  
ödex
 = 
PawnNo
[
Pœyî
]; index >= 0; index-- )

825 if–
Põ˚Tab
[
Pœyî
][
ödex
].
ùõ˚
 !
no_põ˚
 )

826 if–
	`n⁄ˇpmovgí
–
Põ˚Tab
[
Pœyî
][
ödex
].
isqu¨e
, 
P
 ) ) ;

828 if–
	`ïˇpmovgí
–
P
 ) )

830 
	}
}

847 
MAXTYPE
 
	$£¨ch
–
MAXTYPE
 
Æpha
, MAXTYPE 
bëa
, 
∂y
, 
INFTYPE
 *
öf
,

848 
MOVETYPE
 *
be°löe
 )

850 
SEARCHTYPE
 
S
;

851 
PARAMTYPE
 
P
;

853 
S
.
ˇ±uª£¨ch
 = ( ( 
∂y
 <0 ) && !
checkèb
[
Dïth
-1] );

854 if–
S
.
ˇ±uª£¨ch
 )

856 
S
.
maxvÆ
 = -
öf
->
evÆu©i⁄
;

857 if–
Æpha
 < 
S
.
maxvÆ
 )

859 
Æpha
 = 
S
.
maxvÆ
;

860 if–
S
.
maxvÆ
 >
bëa
 ) 
STOP
;

864 
S
.
maxvÆ
 = -–
LOSEVALUE
 - 
Dïth
*
DEPTHFACTOR
 );

865 
P
.
Æpha
 =álpha;

866 
P
.
bëa
 = beta;

867 
P
.
∂y
 =Öly;

868 
P
.
öf
 = inf;

869 
P
.
be°löe
 = bestline;

870 
P
.
S
 = &S;

871 
	`£¨chmovgí
–&
P
 );

872 if–
SkùSórch
 ) 
STOP
;

873 if–
S
.
maxvÆ
 =-–
LOSEVALUE
 - 
Dïth
 * 
DEPTHFACTOR
 ) )

874 if–!
	`Aâacks
–
Oµ⁄ít
, 
Põ˚Tab
[
Pœyî
][0].
isqu¨e
 ) )

876 
S
.
maxvÆ
 = 0;

877 
STOP
;

879 
	`upd©ekûl
–&
be°löe
[
Dïth
] );

880 
STOP
:

881  
S
.
maxvÆ
;

882 
	}
}

889 
MAXTYPE
 
	$ˇŒ£¨ch
–
MAXTYPE
 
Æpha
, MAXTYPE 
bëa
 )

891 
MAXTYPE
 
maxvÆ
;

893 
°¨töf
.
¥öcùv¨
 = ( 
MaöLöe
[0].
movpõ˚
 !
no_põ˚
 );

894 
LegÆMoves
 = 0;

895 
maxvÆ
 = 
	`£¨ch
–
Æpha
, 
bëa
, 
MaxDïth
, &
°¨töf
, &
MaöLöe
[0] );

896 if–!
LegÆMoves
 )

897 
MaöEvÆu
 = 
maxvÆ
;

898  
maxvÆ
;

899 
	}
}

906 
ölöe
 
	$timeu£d
( )

908 
tu
 = 0;

910 if–
A«lysis
 && !
SögÀSãp
 )

912 
	`St›Time
–&
ChessClock
 );

913 
tu
 = ( 
ChessClock
.
tŸÆtime
 >
W™ãdTime
 );

915  
tu
;

916 
	}
}

923 
	$FödMove
–
maxÀvñ
 )

925 
MAXTYPE
 
maxvÆ
;

926 
ˇl˝vtime
;

927 
	`InôTime
–&
ChessClock
 );

928 
	`SèπTime
–&
ChessClock
 );

929 
	`InôNode
–&
Nodes
 );

930 
SkùSórch
 = 0;

931 
	`˛órkûlmove
();

932 
	`CÆcPVTabÀ
();

933 
	`St›Time
–&
ChessClock
 );

934 
ˇl˝vtime
 = 
ChessClock
.
tŸÆtime
;

935 
°¨töf
.
vÆue
 = sèπöf.
evÆu©i⁄
 = -
RoŸVÆue
;

936 
MaxDïth
 = 0;

937 
MaöLöe
[0] = 
ZîoMove
;

938 
MaöEvÆu
 = 
RoŸVÆue
;

939 
Æphawödow
 = 
MAXINT
;

940 
CompuãrThökög
 = 
TRUE
;

944 if–
MaxDïth
 <1 ) 
ª≥©evÆu
 = 
MaöEvÆu
;

945 
Æphawödow
 = 
	`mö
–Æphawödow, 
MaöEvÆu
 - 0x80 );

946 if–
Levñ
 =
m©e£¨ch
 )

948 
Æphawödow
 = 0x6000;

949 if–
MaxDïth
 > 0 ) MaxDepth++;

951 
MaxDïth
++;

952 
maxvÆ
 = 
	`ˇŒ£¨ch
–
Æphawödow
, 0x7f00 );

953 if–
maxvÆ
 <
Æphawödow
 && !
SkùSórch
 && 
Levñ
 !
m©e£¨ch
 &&

954 
LegÆMoves
 > 0 )

958 
MaöEvÆu
 = 
Æphawödow
;

959 
maxvÆ
 = 
	`ˇŒ£¨ch
–-0x7F00, 
Æphawödow
 - 
TOLERANCE
 * 2 );

960 
LegÆMoves
 = 2;

962 }  !
SkùSórch
 && !
	`timeu£d
(Ë&& ( 
MaxDïth
 < 
maxÀvñ
 ) &&

963 –
LegÆMoves
 > 1 ) &&

964 –
	`abs
–
MaöEvÆu
 ) < 
MATEVALUE
 - 24 * 
DEPTHFACTOR
 ) );

965 
CompuãrThökög
 = 
FALSE
;

966 
	`St›Time
–&
ChessClock
 );

968 if–
A«lysis
 )

969 
	`PrötNodes
–&
Nodes
, ( 
ChessClock
.
tŸÆtime
 - 
ˇl˝vtime
 ) );

970 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/small.cpp

3 
	~<wödows.h
>

4 
	~<time.h
>

5 
	~<°dio.h
>

6 
	~<°rög.h
>

7 
	~"wcdefs.h
"

8 
	~"wchess.h
"

9 
	~"exã∫s.h
"

16 
MOVETYPE
 
	gZîoMove
 = { 8, 8, 0, 
no_põ˚
,Ço_piece };

17 
CLOCKTYPE
 
	gChessTime
[2];

18 
MOVETYPE
 
	gKeyMove
;

19 
BOOL
 
	gRu¬ög
;

20 
COLORTYPE
 
	gRunCﬁ‹
;

21 
BOOL
 
	gA«lysis
, 
	gO∑n
;

22 
	gW™ãdTime
;

23 
AvîageTime
;

24 
BOOL
 
	gGameOvî
 = 
FALSE
;

25 
	gEndGameMesßge
[80];

28 
EndMesßge
(*);

34 
	$InôChessTime
()

36 
	`InôTime
(&
ChessTime
[
whôe
]);

37 
	`InôTime
(&
ChessTime
[
bœck
]);

38 
	}
}

40 
	$St›ChessTime
()

42 i‡(
Ru¬ög
)

44 
	`St›Time
(&
ChessTime
[
RunCﬁ‹
]);

45 
	`KûlTimî
(
hWndMaö
, 
TIMEID
);

46 
Ru¬ög
 = 
FALSE
;

48 
	}
}

54 
	$SèπChessTime
(
COLORTYPE
 
cﬁ‹
)

56 
RunCﬁ‹
 = 
cﬁ‹
;

57 
Ru¬ög
 = 
TRUE
;

58 
	`SèπTime
(&
ChessTime
[
RunCﬁ‹
]);

59 
	`SëTimî
(
hWndMaö
, 
TIMEID
, 1000, 
NULL
);

60 
	}
}

66 
	$Re£tMoves
()

68 
Dïth
 = -1;

69 
MovTab
[-1] = 
ZîoMove
;

70 
	}
}

77 
	$CÀ¨Höt
()

79 
HötLöe
[0] = 
ZîoMove
;

80 
HötEvÆu
 = 0;

81 
	}
}

83 
	$InôNode
(
NODEVAL
 *
nodes
)

85 
nodes
->
nodeba£
 = 0;

86 
nodes
->
nodeoff£t
 = 0;

87 
	}
}

94 
BOOL
 
	$IŒegÆMove
(
MOVETYPE
 *
move
)

96 
BOOL
 
ûÀgÆ
;

98 
	`Pîf‹m
(
move
, 0);

99 
ûÀgÆ
 = 
	`Aâacks
(
Oµ⁄ít
, 
Põ˚Tab
[
Pœyî
][0].
isqu¨e
);

100 
	`Pîf‹m
(
move
, 1);

101  
ûÀgÆ
;

102 
	}
}

110 
	$MakeMove
(
MOVETYPE
 *
move
)

112 
Dïth
++;

113 
MoveNo
++;

114 
	`Pîf‹m
(
move
, 0);

115 
ProgømCﬁ‹
 = 
Oµ⁄ít
;

116 
Oµ⁄ít
 = 
Pœyî
;

117 
Pœyî
 = 
ProgømCﬁ‹
;

118 
	}
}

125 
	$PrötCommít
()

127 
buf
[];

128 
check
, 
possibÀmove
, 
checkm©e
;

129 
nummoves
;

131 
	`Mesßge
("");

132 
checkm©e
 = 0;

133 
Dïth
++;

134 
possibÀmove
 = 0;

135 
	`InôMovGí
();

138 
	`MovGí
();

139 i‡(
Next
.
movpõ˚
 !
no_põ˚
)

140 i‡(!
	`IŒegÆMove
(&
Next
))

141 
possibÀmove
 = 1;

142 } 
Next
.
movpõ˚
 !
no_põ˚
 && !
possibÀmove
);

144 
Dïth
--;

145 
check
 = 
	`Aâacks
(
Oµ⁄ít
, 
Põ˚Tab
[
Pœyî
][0].
isqu¨e
);

147 i‡(!
possibÀmove
)

149 i‡(
check
)

151 
checkm©e
 = 1;

152 
	`EndMesßge
("CheckMate");

155 
	`EndMesßge
("Stalemate!");

158 i‡(
HötEvÆu
 >
MATEVALUE
 - 
DEPTHFACTOR
 * 16)

160 
nummoves
 = (
MATEVALUE
 - 
HötEvÆu
 + 0x40Ë/ (
DEPTHFACTOR
 * 2);

161 
	`•rötf
(
buf
, "M©êö %d Move%c", 
nummoves
, (nummoves > 1) ? 's!':'!');

162 
	`Mesßge
(
buf
);

164 i‡(
check
 && !
checkm©e
)

165 
	`Mesßge
("Check!");

168 i‡(
	`Fi·yMoveC¡
() >= 100)

170 
	`EndMesßge
("50 MoveÑule");

173 i‡(
	`Rïëôi⁄
(0) >= 3)

175 
	`EndMesßge
("3 fold Repetition");

178 i‡(-25500 < 
HötEvÆu
 && HintEvalu < -0x880)

180 
Oµ⁄ít
)

182 
whôe
 :

183 
	`EndMesßge
(" WhiteÑesigns");

185 
bœck
 :

186 
	`EndMesßge
(" BlackÑesigns");

190 
	}
}

192 
	$E¡îMove
(
MOVETYPE
 *
move
)

194 
	`St›ChessTime
();

195 
	`PrötMove
(
MoveNo
, 
ProgømCﬁ‹
, 
move
, 
ChessTime
[
RunCﬁ‹
].
tŸÆtime
);

196 
	`MakeMove
(
move
);

197 
	`Upd©eBﬂrd
();

198 
	`PrötCommít
();

199 
	`SèπChessTime
(
ProgømCﬁ‹
);

200 
	}
}

202 
	$RemoveMove
(
MOVETYPE
 *
move
)

204 
	`St›ChessTime
();

205 
	`PrötMove
(
MoveNo
, 
ProgømCﬁ‹
, 
move
, 
ChessTime
[
RunCﬁ‹
].
tŸÆtime
);

206 
	`TakeBackMove
(
move
);

207 
	`Upd©eBﬂrd
();

208 
	`PrötCommít
();

209 
	`SèπChessTime
(
ProgømCﬁ‹
);

210 
	}
}

216 
	$E¡îKeyMove
()

218 
MovTab
[
Dïth
+1] = 
KeyMove
;

219 
PœyîMove
 = 
KeyMove
;

220 
	`CÀ¨Höt
();

221 
	`DøgEnd
(
TRUE
);

222 
	`E¡îMove
(&
MovTab
[
Dïth
+1]);

223 
	}
}

230 
	$Adju°Moves
()

232 
i
;

234 
i
 = 
Dïth
; i>
BACK
; i--)

235 
MovTab
[
i
 - (
Dïth
+1)] = MovTab[i];

236 
Dïth
 = -1;

237 
	}
}

245 
	$St‹eMoves
()

247 
i
;

248 
Dïth
--;

249 
i
 = 
BACK
; i <
Dïth
; i++)

250 
MovTab
[
i
] = MovTab[i+1];

251 
MovTab
[
BACK
] = 
ZîoMove
;

252 
	}
}

259 
BOOL
 
	$MoveCheck
(
SQUARETYPE
 
°¨tsq
, SQUARETYPE 
ídsq
)

261 
Dïth
++;

262 
KeyMove
 = 
ZîoMove
;

263 
	`InôMovGí
();

266 
	`MovGí
();

267 i‡(
Next
.
√w1
 =
ídsq
 && Next.
ﬁd
 =
°¨tsq
)

269 
KeyMove
 = 
Next
;

272 } 
Next
.
movpõ˚
 !
no_põ˚
);

273 i‡(
KeyMove
.
movpõ˚
 =
no_põ˚
)

275 
	`W¨nög
("Impossible move");

276 
Dïth
--;

277  
FALSE
;

279 i‡(
	`IŒegÆMove
(&
KeyMove
))

281 
	`W¨nög
("Illegal move. Check!");

282 
Dïth
--;

283  
FALSE
;

285 
Dïth
--;

286 i‡(!
CompuãrThökög
)

288 
	`Adju°Moves
();

289 
	`E¡îKeyMove
();

290 
	`St‹eMoves
();

292  
TRUE
;

293 
	}
}

300 
	$SèπA«lysis
()

302 
timec⁄åﬁ
;

303 
HWND
 
hWndMaö
;

304 
HCURSOR
 
hWaôCurs‹
;

306 
A«lysis
 = 1;

307 
O∑n
 = 0;

308 
	`SëCœssW‹d
(
hWndMaö
, 
GCW_HCURSOR
, 
	`WORD
(
hWaôCurs‹
));

309 
	`SëCurs‹
(
hWaôCurs‹
);

310 
Levñ
)

312 
ósygame
 :

313 
n‹mÆ
 :

318 
timec⁄åﬁ
 = (((
MoveNo
 >> 1) + 20) / 20) * 20;

319 i‡(
timec⁄åﬁ
 <= 40)Åimecontrol = 40;

320 
W™ãdTime
 = (
AvîageTime
 * 
timec⁄åﬁ
 -

321 
ChessTime
[
ProgømCﬁ‹
].
tŸÆtime
) /

322 (
timec⁄åﬁ
 + 4 - (
MoveNo
 >> 1));

329 i‡((
MoveNo
 >> 1) <= 40)

330 
W™ãdTime
 = 5.0 + (WantedTime - 5.0) *

331 ((80 - (
MoveNo
 >> 1)) /40);

333 
fuŒgamëime
 :

336 
W™ãdTime
 = (
AvîageTime
 * 60.0 -

337 
ChessTime
[
ProgømCﬁ‹
].
tŸÆtime
) / 44;

343 i‡((
MoveNo
 >> 1) <= 40)

344 
W™ãdTime
 = 5.0 + (WantedTime - 5.0) *

345 ((80 - (
MoveNo
 >> 1)) /40);

347 
m©chög
 :

349 i‡(
MoveNo
 >= 2)

350 
W™ãdTime
 = 
ChessTime
[
Oµ⁄ít
].
tŸÆtime
 / (
MoveNo
 >> 1);

352 
W™ãdTime
 = 5.0;

353 
W™ãdTime
 +(
ChessTime
[
Oµ⁄ít
].
tŸÆtime
 -

354 
ChessTime
[
ProgømCﬁ‹
].
tŸÆtime
) * 0.25;

356 
W™ãdTime
 = 1000000.0;

358 
	}
}

365 
	$TakeBackMove
(
MOVETYPE
 *
move
)

367 
ProgømCﬁ‹
 = 
Oµ⁄ít
;

368 
Oµ⁄ít
 = 
Pœyî
;

369 
Pœyî
 = 
ProgømCﬁ‹
;

370 
	`Pîf‹m
(
move
, 1);

371 
MoveNo
--;

372 
Dïth
--;

373 
	}
}

376 
	$IncNode
(
NODEVAL
 *
nodes
)

378 i‡(
nodes
->
nodeoff£t
 >
MAXINT
)

380 
nodes
->
nodeba£
++;

381 
nodes
->
nodeoff£t
 = 0;

384 
nodes
->
nodeoff£t
++;

385 
	}
}

388 
	$Waô
(
ã¡hs
)

390 
˛ock_t
 
NumTicksToWaô
;

394 
NumTicksToWaô
 = (
ã¡hs
 * 2Ë+ 
	`˛ock
();

395 
NumTicksToWaô
 > 
	`˛ock
()) ;

396 
	}
}

403 
	$FœshMove
(
MOVETYPE
 *
move
)

405 
	`MakeMove
(
move
);

406 
	`Upd©eBﬂrd
();

407 
	`Waô
(4);

408 
	`TakeBackMove
(
move
);

409 
	`Upd©eBﬂrd
();

410 
	`Waô
(4);

411 
	}
}

413 
	$DoSlideMove
(
MOVETYPE
 &
move
)

415 
SQUARETYPE
 
ˇ°squ¨e
, 
c‹√rsqu¨e
;

416 
	`SlidePõ˚
(
move
.
√w1
, move.
ﬁd
);

417 i‡(
move
.
•e
)

419 i‡(
move
.
movpõ˚
 =
kög
)

421 
	`GíCa°Squ¨e
(
move
.
√w1
, &
ˇ°squ¨e
, &
c‹√rsqu¨e
);

422 
	`SlidePõ˚
(
ˇ°squ¨e
, 
c‹√rsqu¨e
);

425 
	}
}

427 
	$EndMesßge
(*
mesßge
)

429 
	`°r˝y
(
EndGameMesßge
, 
mesßge
);

430 
GameOvî
 = 
TRUE
;

431 
	}
}

434 
	$ShowHöt
()

436 
DEPTHTYPE
 
dï
 = 0;

437 
buf
[0] = '\0';

438 
	`Mesßge
(
buf
);

439 
HötLöe
[
dï
].
movpõ˚
 !
no_põ˚
)

441 
	`°rˇt
(
buf
, 
	`MoveSå
(&
HötLöe
[
dï
]));

442 
	`°rˇt
(
buf
, " ");

443 
	`Mesßge
(
buf
);

444 
	`MakeMove
(&
HötLöe
[
dï
]);

445 
	`Upd©eBﬂrd
();

446 
	`Waô
(6);

447 
dï
++;

449 
dï
 > 0)

451 
dï
--;

452 
	`TakeBackMove
(&
HötLöe
[
dï
]);

454 
	`Upd©eBﬂrd
();

455 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/talk.cpp

4 
	~<owl\owÕch.h
>

5 #¥agm®
hdr°›


7 
	~<f°ªam.h
>

8 
	~<°rög.h
>

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<m©h.h
>

12 
	~<dos.h
>

13 
	~<time.h
>

14 
	~<˘y≥.h
>

17 
	~"wcdefs.h
"

18 
	~"exã∫s.h
"

24 *
	gINIFûe
 = "wchess.ini";

25 
BOOL
 
	gInLibøry
;

26 
BOOL
 
	gMu…iMove
,

27 
	gAutoPœy
,

28 
	gSögÀSãp
;

29 
LEVELTYPE
 
	gLevñ
;

30 
	gAvîageTime
 = 5.0;

31 
PIECETYPE
 
	gPõ˚s
[8] = { 
rook
, 
knight
, 
bish›
, 
quìn
,

32 
kög
, 
bish›
, 
knight
, 
rook
};

33 
BYTE
 
	gMaxLevñ
;

34 
BOOL
 
	gTu∫ed
;

35 
BOOL
 
	gU£Lib
;

36 
LIBTYPE
 
	gO≥nögs
;

37 
COLORTYPE
 
	gProgømCﬁ‹
;

38 
	gMoveNo
;

39 
	gPVTabÀ
[2][7][0x78];

40 
MOVETYPE
 
	gPœyîMove
;

41 
BOOL
 
	gLoggög
;

42 
NODEVAL
 
	gNodes
;

43 
CLOCKTYPE
 
	gChessClock
;

44 
LegÆMoves
;

45 
LINETYPE
 
	gHötLöe
;

46 
MAXTYPE
 
	gHötEvÆu
;

47 
	eANALYSISCONTROL
 {
	mSèπ
, 
	mRëu∫
, 
	mC⁄töue
};

49 
	gOpCou¡
, 
	gLibNo
;

51 
DEPTHTYPE
 
	gLibDïth
;

52 
BOOL
 
	gFound
;

53 
DEPTHTYPE
 
	gdï
;

55 
of°ªam
 *
	gOuçutFûe
;

57 íum {
	mªadmove
, 
	mcheckmove
, 
	mgamemove
} 
	tCONTROLVAR
;

58 
CONTROLVAR
 
	gC⁄åﬁ
;

62 
	$In£πPõ˚
(
PIECETYPE
 
p
, 
COLORTYPE
 
c
, 
SQUARETYPE
 
sq
)

64 
Bﬂrd
[
sq
].
põ˚
 = 
p
;

65 
Bﬂrd
[
sq
].
cﬁ‹
 = 
c
;

66 
	}
}

69 
	$CÀ¨PVTabÀ
()

71 
COLORTYPE
 
cﬁ‹
;

72 
PIECETYPE
 
põ˚
;

73 
SQUARETYPE
 
squ¨e
;

75 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++)

76 
põ˚
 = 
kög
;Öõ˚ <
∑wn
; (()piece)++)

77 
squ¨e
 = 0; square <= 0x77; square++)

78 
PVTabÀ
[
cﬁ‹
][
põ˚
][
squ¨e
] = 0;

79 
	}
}

82 
	$Re£tGame
()

84 
	`CÀ¨Bﬂrd
();

85 
Ru¬ög
 = 
FALSE
;

86 
i
 = 0; i < 8; i++)

88 
	`In£πPõ˚
(
Põ˚s
[
i
], 
whôe
, i);

89 
	`In£πPõ˚
(
∑wn
, 
whôe
, 
i
 + 0x10);

90 
	`In£πPõ˚
(
∑wn
, 
bœck
, 
i
 + 0x60);

91 
	`In£πPõ˚
(
Põ˚s
[
i
], 
bœck
, i + 0x70);

93 
	`CÆcPõ˚Tab
();

94 
Pœyî
 = 
whôe
;

95 
	`CÀ¨Di•œy
();

96 
	`InôDi•œy
();

97 
	`Cﬁ‹ToPœy
(
Pœyî
);

98 
Oµ⁄ít
 = 
bœck
;

99 
	}
}

102 
	$NewGame
()

104 
SögÀSãp
 = 
InLibøry
 = 
FALSE
;

105 
GameOvî
 = 
FALSE
;

106 
	`Re£tGame
();

107 
	`PrötCurLevñ
();

108 
	`Re£tMoves
();

109 i‡(!*
O≥nögs
)

110 
U£Lib
 = 0;

112 
U£Lib
 = 200;

113 
MovTab
[-1].
c⁄ã¡
 = 
kög
;

114 
	`InôChessTime
();

115 
ProgømCﬁ‹
 = 
whôe
;

116 
MoveNo
 = 0;

117 
	`CÀ¨Höt
();

118 
	`CÀ¨PVTabÀ
();

119 
PœyîMove
 = 
ZîoMove
;

120 i‡(
Loggög
 && !
AutoPœy
)

121 *
OuçutFûe
 << "\n No Player Program Hint Value Level Nodes Time\n";

122 
	`InôNode
(&
Nodes
);

123 
ChessClock
.
tŸÆtime
 = 0.0;

124 
C⁄åﬁ
 = (
AutoPœy
Ë? 
gamemove
 : 
ªadmove
;

125 
	}
}

128 
	$Re£tNewPos
()

130 
	`Re£tMoves
();

131 
	`CÆcPõ˚Tab
();

132 
U£Lib
 = 
FALSE
;

133 
Ru¬ög
 = 
FALSE
;

134 
	`CÀ¨Höt
();

135 
	}
}

138 
	$Re£tO≥nög
()

140 c⁄° *
libfûíame
 = "opening.lib";

141 
if°ªam
 
	`fö
(
libfûíame
, 
ios
::
ö
 | ios::
bö¨y
);

143 i‡(!
fö
)

145 ::
	`MesßgeBox
(
NULL
,"Cannot find Openings Library", "Error",

146 
MB_ICONHAND
 | 
MB_OK
);

147 
O≥nögs
 = 
√w
 ;

148 *
O≥nögs
 = 0;

151 
O≥nögs
 = 
√w
 [32000];

152 
fö
.
	`ªad
(
O≥nögs
, 32000);

153 
fö
.
	`˛o£
();

154 *
O≥nögs
 = 0xFF;

155 
	}
}

158 
	$SèπUp
()

160 
cﬁ‹
;

161 
	`øndomize
();

163 
Levñ
 = (
LEVELTYPE
)
	`GëPriv©eProfûeI¡
("WCHESS", "Level",

164 ()
ósygame
, 
INIFûe
);

166 i‡(
	`GëPriv©eProfûeSåög
("WCHESS", "AvîageTime", "5.0", 
buf
,

167 80, 
INIFûe
))

168 
	`ssˇnf
(
buf
, "%lf", &
AvîageTime
);

170 i‡(
	`GëPriv©eProfûeSåög
("WCHESS", "WhôeSqu¨e", "", 
buf
, 80, 
INIFûe
))

172 
	`ssˇnf
(
buf
, "%ld", &
cﬁ‹
);

173 
WhôeSqu¨eCﬁ‹s
[0] = 
cﬁ‹
 & 0xffL;

174 
WhôeSqu¨eCﬁ‹s
[1] = (
BYTE
)((
cﬁ‹
 & 0xff00L) >> 8);

175 
WhôeSqu¨eCﬁ‹s
[2] = (
BYTE
)((
cﬁ‹
 & 0xff0000L) >> 16);

178 i‡(
	`GëPriv©eProfûeSåög
("WCHESS", "BœckSqu¨e", "", 
buf
, 80, 
INIFûe
))

180 
	`ssˇnf
(
buf
, "%ld", &
cﬁ‹
);

181 
BœckSqu¨eCﬁ‹s
[0] = 
cﬁ‹
 & 0xff;

182 
BœckSqu¨eCﬁ‹s
[1] = ((
cﬁ‹
 & 0xff00L) >> 8);

183 
BœckSqu¨eCﬁ‹s
[2] = ((
cﬁ‹
 & 0xff0000L) >> 16);

186 
MaxLevñ
 = 
	`GëPriv©eProfûeI¡
("WCHESS", "MaxLevñ", 
MAXPLY
, 
INIFûe
);

187 
SoundOn
 = (
BOOL
)
	`GëPriv©eProfûeI¡
("WCHESS", "SoundOn", 1, 
INIFûe
);

189 i‡(!
SoundOn
)

190 
	`CheckMíuIãm
(
MaöMíu
, 
IDM_SOUND
, 
MF_UNCHECKED
);

191 
	`CÆcAâackTab
();

192 
Mu…iMove
 = 
FALSE
;

193 
AutoPœy
 = 
FALSE
;

194 
Tu∫ed
 = 
FALSE
;

195 
	`Re£tO≥nög
();

196 
OuçutFûe
 = 
√w
 
	`of°ªam
("Chess.log");

197 i‡(!
OuçutFûe
)

199 ::
	`MesßgeBox
(
NULL
, "U«bÀÅÿ›íÜog fûe.\nLoggög dißbÀd", "OWL Chess", 
MB_OK
 | 
MB_ICONEXCLAMATION
);

200 
Loggög
 = 
FALSE
;

204 *
OuçutFûe
 << 
ídl
;

205 *
OuçutFûe
 << " OWL CHESS by Borland International\n";

206 *
OuçutFûe
 << " ==================================\n" << 
ídl
;

208 
	}
}

210 c⁄° 
	gUNPLAYMARK
 = 0x3f;

217 
	$PªviousLibNo
()

219 
n
;

221 
n
 = 0;

224 
LibNo
--;

225 i‡(
O≥nögs
[
LibNo
] >128Ë
n
++;

226 i‡(
O≥nögs
[
LibNo
] & 64Ë
n
--;

227 } 
n
);

228 
	}
}

235 
	$Fú°LibNo
()

237 !(
O≥nögs
[
LibNo
 - 1] & 64))

238 
	`PªviousLibNo
();

239 
	}
}

247 
	$NextLibNo
(
skù
)

249 
n
;

251 i‡(
O≥nögs
[
LibNo
] >128Ë
	`Fú°LibNo
();

254 
n
 = 0;

257 i‡(
O≥nögs
[
LibNo
] & 64Ë
n
++;

258 i‡(
O≥nögs
[
LibNo
] >128Ë
n
--;

259 
LibNo
++;

260 } 
n
);

261 i‡(
skù
 && (
O≥nögs
[
LibNo
] =
UNPLAYMARK
))

262 
	`Fú°LibNo
();

264 
	}
}

271 
	$FödNode
()

273 
LibNo
++;

274 i‡(
Dïth
 > 
LibDïth
)

276 
Found
 = 
TRUE
;

279 
OpCou¡
 = -1;

280 
	`InôMovGí
();

283 
OpCou¡
++;

284 
	`MovGí
();

285 } 
Next
.
movpõ˚
 !
no_põ˚
 && !
	`EqMove
(&Next, &
MovTab
[
Dïth
]));

286 i‡(
Next
.
movpõ˚
 !
no_põ˚
)

288 ((
O≥nögs
[
LibNo
] & 63Ë!
OpCou¡
) &&

289 (
O≥nögs
[
LibNo
] < 128))

290 
	`NextLibNo
(0);

291 i‡((
O≥nögs
[
LibNo
] & 127Ë=64 + 
OpCou¡
)

293 
	`MakeMove
(&
MovTab
[
Dïth
]);

294 
	`FödNode
();

295 
	`TakeBackMove
(&
MovTab
[
Dïth
-1]);

298 
	}
}

305 
	$CÆcLibNo
()

307 
LibNo
 = 0;

308 i‡(
MoveNo
 < 
U£Lib
)

310 
LibDïth
 = 
Dïth
;

311 
MovTab
[
Dïth
].
movpõ˚
 !
no_põ˚
)

312 
	`TakeBackMove
(&
MovTab
[
Dïth
]);

313 
Found
 = 
FALSE
;

314 i‡(
MovTab
[
Dïth
].
c⁄ã¡
 =
kög
)

316 
Dïth
++;

317 
	`FödNode
();

318 
Dïth
--;

320 
Dïth
 < 
LibDïth
)

321 
	`MakeMove
(&
MovTab
[
Dïth
 + 1]);

322 i‡(
Found
)

323 
U£Lib
 = 200;

326 
U£Lib
 = 
MoveNo
;

327 
LibNo
 = 0;

330 
	}
}

337 
	$FödO≥nögMove
()

339 c⁄° 
weight
[7] = {7, 10, 12, 13, 14, 15, 16};

340 
˙t
, 
r
, 
p
, 
cou¡p
;

342 
r
 = 
	`øndom
(16);

343 
p
 = 0;

344 
r
 >
weight
[
p
])Ö++;

345 
cou¡p
 = 1; cou¡∞<
p
; countp++)

346 
	`NextLibNo
(1);

347 
OpCou¡
 = 
O≥nögs
[
LibNo
] & 63;

348 
	`InôMovGí
();

349 
˙t
 = 0; c¡ <
OpCou¡
; cnt++)

350 
	`MovGí
();

352 
MaöLöe
[0] = 
Next
;

353 
MaöLöe
[1] = 
ZîoMove
;

354 
MaöEvÆu
 = 0;

355 
MaxDïth
 = 0;

356 
LegÆMoves
 = 0;

357 
	`InôNode
(&
Nodes
);

358 
	}
}

362 
	$OuçutNode
(
NODEVAL
 *
nodes
)

364 
nodîól
;

365 i‡(!
Loggög
)

367 
buf
[20];

368 
nodîól
 = (
nodes
->
nodeba£
 * 
MAXINT
Ë+Çodes->
nodeoff£t
;

369 
	`•rötf
(
buf
, "%12.1f", 
nodîól
);

370 *
OuçutFûe
 << 
buf
;

371 
	}
}

373 
ThökAwhûe
();

374 
SèπMove
();

376 
	$Rëu∫A«lysis
()

378 
myx
;

379 
°r
[8];

380 
buf
[40];

382 
MovTab
[0] = 
MaöLöe
[0];

383 
myx
 = 1; myx <
MAXPLY
; myx++)

384 
HötLöe
[
myx
 - 1] = 
MaöLöe
[myx];

385 
dï
 = 
MAXPLY
;

386 
HötEvÆu
 = 
MaöEvÆu
;

387 i‡(
MovTab
[0].
movpõ˚
 =
no_põ˚
)

389 
HötLöe
[0] = 
ZîoMove
;

390 i‡(
AutoPœy
)

392 
	`NewGame
();

393 
	`PrötBﬂrd
();

394 
	`SèπMove
();

400 
	`DoSlideMove
(
MovTab
[
Dïth
+1]);

401 
	`E¡îMove
(&
MovTab
[
Dïth
+1]);

402 i‡(
SoundOn
)

403 
	`MesßgeBìp
(0);

404 
	`St‹eMoves
();

405 i‡(
Loggög
 && !
AutoPœy
)

407 
	`•rötf
(
buf
, "%3d. ",(
MoveNo
+1) / 2);

408 *
OuçutFûe
 << 
buf
;

409 
	`°r˝y
(
°r
, 
	`MoveSå
(&
MovTab
[0]));

410 i‡((
PœyîMove
.
movpõ˚
 =
no_põ˚
Ë&& (
Oµ⁄ít
 =
whôe
))

411 
	`•rötf
(
buf
, "%8.8†", 
°r
);

413 
	`•rötf
(
buf
, "%s%8.8s",
	`MoveSå
(&
PœyîMove
), 
°r
);

414 *
OuçutFûe
 << 
buf
;

415 
	`•rötf
(
buf
, " (%s)%9.2f%3d:%2d", 
	`MoveSå
(&
MaöLöe
[1]),

416 
MaöEvÆu
 / 256.0, 
MaxDïth
, 
LegÆMoves
);

417 *
OuçutFûe
 << 
buf
;

418 
	`OuçutNode
(&
Nodes
);

419 
	`•rötf
(
buf
, "%8.1lf\n", 
ChessClock
.
tŸÆtime
);

420 *
OuçutFûe
 << 
buf
;

422 
PœyîMove
 = 
ZîoMove
;

423 
	`Cﬁ‹ToPœy
(
Pœyî
);

424 i‡(
AutoPœy
)

426 i‡((
MoveNo
 >120Ë|| (
	`Fi·yMoveC¡
() >= 100) ||

427 (
	`Rïëôi⁄
(0Ë>3Ë|| (
MaöEvÆu
 <= -0x880))

429 
	`NewGame
();

430 
	`PrötBﬂrd
();

432 
	`SèπMove
();

435 i‡(
Levñ
 !
ósygame
 && !
GameOvî
)

436 
	`ThökAwhûe
();

437 
	}
}

447 
	$ThökAwhûe
()

449 
HCURSOR
 
hAºowCurs‹
;

451 ::
	`SëCœssW‹d
(
hWndMaö
, 
GCW_HCURSOR
, 
	`WORD
–
hAºowCurs‹
 ));

452 ::
	`SëCurs‹
(
hAºowCurs‹
);

453 ::
	`SëMíu
(
hWndMaö
, 
MaöMíu
);

454 i‡((
HötLöe
[0].
movpõ˚
 =
no_põ˚
Ë|| 
Mu…iMove
)

456 
A«lysis
 = 
FALSE
;

457 
O∑n
 = 
TRUE
;

458 
	`Adju°Moves
();

459 
MovTab
[
Dïth
+1] = 
HötLöe
[0];

460 
	`MakeMove
(&
MovTab
[
Dïth
+1]);

461 
	`St‹eMoves
();

462 
	`Adju°Moves
();

463 
Dïth
 = 0;

464 
	`FödMove
(
MaxLevñ
);

465 
Dïth
 = -1;

466 
O∑n
 = 
FALSE
;

467 i‡(
A«lysis
)

469 
	`Rëu∫A«lysis
();

472 
	`TakeBackMove
(&
MovTab
[
Dïth
]);

473 i‡(
GŸVÆidMove
)

475 
	`Adju°Moves
();

476 
	`E¡îKeyMove
();

477 
	`St‹eMoves
();

478 ::
	`SëMíu
(
hWndMaö
, 
ThökMíu
);

479 ::
	`SëCœssW‹d
(
hWndMaö
, 
GCW_HCURSOR
, 
	`WORD
–
hWaôCurs‹
 ));

480 ::
	`SëCurs‹
(
hWaôCurs‹
);

483 
	}
}

486 
	$SèπMove
()

488 
MSG
 
msg
;

489 
	`SèπA«lysis
();

490 
	`Adju°Moves
();

491 
	`CÆcLibNo
();

492 
Dïth
 = 0;

493 i‡(
LibNo
 > 0)

495 
	`O≥nögLibMsg
();

496 
InLibøry
 = 
TRUE
;

497 
	`FödO≥nögMove
();

498 i‡(
	`PìkMesßge
(&
msg
, 0, 0, 0, 
PM_REMOVE
))

500 i‡(
msg
.
mesßge
 =
WM_COMMAND
 && msg.
wP¨am
 =
CM_STOP
)

502 
	`Tøn¶©eMesßge
(&
msg
);

503 
	`Di•©chMesßge
(&
msg
);

508 i‡(
InLibøry
)

510 
InLibøry
 = 
FALSE
;

511 
	`CÀ¨Mesßge
();

513 
	`FödMove
(
MaxLevñ
);

515 
Dïth
 = -1;

516 
	`Rëu∫A«lysis
();

517 
	}
}

520 
	$ProgømMove
()

524 
GŸVÆidMove
 = 
FALSE
;

525 
	`Cﬁ‹ToPœy
(
Pœyî
);

526 
	`SèπMove
();

528 
GŸVÆidMove
);

529 
	}
}

532 
	$TÆk
()

534 
	`SèπUp
();

535 
	`NewGame
();

536 
	}
}

539 
BOOL
 
	$Redo
()

542 
	`E¡îMove
(&
MovTab
[
Dïth
+1]);

543 
	`CÀ¨Höt
();

545 
	`CÀ¨Be°Löe
();

546 
	`Cﬁ‹ToPœy
(
Pœyî
);

547 i‡(
Dïth
 >= -1)

548  
FALSE
;

549  
TRUE
;

550 
	}
}

552 
BOOL
 
	$Undo
()

555 
	`RemoveMove
(
MOVETYPE
 *);

556 
	`RemoveMove
(&
MovTab
[
Dïth
]);

557 
	`CÀ¨Höt
();

559 
	`CÀ¨Be°Löe
();

560 
	`Cﬁ‹ToPœy
(
Pœyî
);

561 i‡(
MovTab
[
Dïth
].
movpõ˚
 =
no_põ˚
)

562  
FALSE
;

563  
TRUE
;

564 
	}
}

566 
	$QuôProgøm
()

568 
cﬁ‹
;

570 i‡(
Loggög
)

571 
OuçutFûe
->
	`˛o£
();

572 
cﬁ‹
 = 
	`RGB
(
WhôeSqu¨eCﬁ‹s
[0], WhiteSquareColors[1],

573 
WhôeSqu¨eCﬁ‹s
[2]);

574 
	`•rötf
(
buf
, "%ld", 
cﬁ‹
);

575 
	`WrôePriv©eProfûeSåög
("WCHESS", "WhôeSqu¨e", 
buf
, 
INIFûe
);

576 
cﬁ‹
 = 
	`RGB
(
BœckSqu¨eCﬁ‹s
[0], BlackSquareColors[1],

577 
BœckSqu¨eCﬁ‹s
[2]);

578 
	`•rötf
(
buf
, "%ld", 
cﬁ‹
);

579 
	`WrôePriv©eProfûeSåög
("WCHESS", "BœckSqu¨e", 
buf
, 
INIFûe
);

580 
	`•rötf
(
buf
, "%d", 
Levñ
);

581 
	`WrôePriv©eProfûeSåög
("WCHESS", "Levñ", 
buf
, 
INIFûe
);

582 
	`•rötf
(
buf
, "%lf", 
AvîageTime
);

583 
	`WrôePriv©eProfûeSåög
("WCHESS", "AvîageTime", 
buf
, 
INIFûe
);

584 
	`•rötf
(
buf
, "%d", ()
MaxLevñ
);

585 
	`WrôePriv©eProfûeSåög
("WCHESS", "MaxLevñ", 
buf
, 
INIFûe
);

586 
	`•rötf
(
buf
, "%d", ()
SoundOn
);

587 
	`WrôePriv©eProfûeSåög
("WCHESS", "SoundOn", 
buf
, 
INIFûe
);

588 
	}
}

591 
	$FödHötMove
()

595 i‡(
HötLöe
[0].
movpõ˚
 =
no_põ˚
)

597 
	`Adju°Moves
();

598 
	`CÆcLibNo
();

599 
Dïth
 = 0;

600 i‡(
LibNo
 > 0)

601 
	`FödO≥nögMove
();

604 
A«lysis
 = 1;

605 
O∑n
 = 0;

606 
	`FödMove
(1);

608 
Dïth
 = -1;

609 
HötLöe
[0] = 
MaöLöe
[0];

610 
HötLöe
[1] = 
ZîoMove
;

611 
HötEvÆu
 = -
MaöEvÆu
;

613 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/timelib.cpp

3 
	~<°dio.h
>

4 
	~<°rög.h
>

5 
	~<dos.h
>

6 
	~"exã∫s.h
"

7 
	~"wcdefs.h
"

10 
	$CGëTime
(*
hour
, *
möuã
, *
£c⁄d
, * 
£c100
)

12 
_AH
 = 0x2C;

13 
	`gíöãºu±
(0x21);

14 *
hour
 = 
_CH
;

15 *
möuã
 = 
_CL
;

16 *
£c⁄d
 = 
_DH
;

17 *
£c100
 = 
_DL
;

18 
	}
}

20 
	$Di•œyTime
()

22 
hour1
, 
mö1
, 
£c1
, 
s100
;

23 
BOOL
 
Cﬁ⁄
 = 
TRUE
;

24 
CurTime
 = 
ChessTime
[
RunCﬁ‹
].
tŸÆtime
;

25 
	`CGëTime
(&
hour1
, &
mö1
, &
£c1
, &
s100
);

26 
CurTime
 +((
s100
 - 
ChessTime
[
RunCﬁ‹
].
£c100
) * 0.01 +

27 (
£c1
 - 
ChessTime
[
RunCﬁ‹
].
£c⁄d
) +

28 (
mö1
 - 
ChessTime
[
RunCﬁ‹
].
möuã
) * 60.0 +

29 (
hour1
 - 
ChessTime
[
RunCﬁ‹
].
hour
) * 3600.0);

30 
mö1
 = (
CurTime
 / 60.);

31 
	`•rötf
(
buf
, "%2.2d%s%02d", 
mö1
, (
Cﬁ⁄
Ë? ":" : " ", (
CurTime
 - min1 * 60.0));

32 
TInfo
->
	`SëTimîText
(
buf
);

33 
Cﬁ⁄
 = !Colon;

34 
	}
}

36 
	$InôTime
(
CLOCKTYPE
 *
˛ock
)

38 
	`mem£t
(
˛ock
, 0, (
CLOCKTYPE
));

39 
	}
}

42 
	$SèπTime
(
CLOCKTYPE
 *
˛ock
)

44 
	`CGëTime
(&
˛ock
->
hour
, &˛ock->
möuã
, &˛ock->
£c⁄d
, &˛ock->
£c100
);

45 
	}
}

48 
	$St›Time
(
CLOCKTYPE
 *
˛ock
)

50 
hour1
, 
mö1
, 
£c1
, 
s100
;

51 
	`CGëTime
(&
hour1
, &
mö1
, &
£c1
, &
s100
);

52 i‡(
hour1
 < 
˛ock
->
hour
) hour1+=24;

53 
˛ock
->
tŸÆhours
 +(
hour1
 - clock->
hour
);

54 
˛ock
->
tŸmö
 +(
mö1
 - clock->
möuã
);

55 
˛ock
->
tŸÆ£cs
 +(
£c1
 - clock->
£c⁄d
);

56 
˛ock
->
tŸs100
 +(
s100
 - clock->
£c100
);

57 
˛ock
->
numbî
++;

58 
˛ock
->
tŸÆtime
 = clock->tŸÆtimê+ ((
s100
 - clock->
£c100
) * 0.01 +

59 (
£c1
 - 
˛ock
->
£c⁄d
Ë+ (
mö1
 - clock->
möuã
) * 60.0 +

60 (
hour1
 - 
˛ock
->
hour
) * 3600.0);

61 
˛ock
->
hour
 = 
hour1
;

62 
˛ock
->
möuã
 = 
mö1
;

63 
˛ock
->
£c⁄d
 = 
£c1
;

64 
˛ock
->
£c100
 = 
s100
;

65 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/wcdefs.h

3 #i‚de‡
__WCDEFS_H


4 
	#__WCDEFS_H


	)

9 c⁄° 
	gBACK
 = -104;

10 c⁄° 
	gMAXPLY
 = 23;

11 c⁄° 
	gLOSEVALUE
 = 0x7D00;

12 c⁄° 
	gMATEVALUE
 = 0x7C80;

13 c⁄° 
	gDEPTHFACTOR
 = 0x80;

14 c⁄° 
	gCOMMANDLENGTH
 = 10;

15 c⁄° 
	gMAXLEN
 = 64;

16 c⁄° 
	gSQUARE_SIZE
 = 36;

17 c⁄° 
	gMAXBDSIZE
 = 8;

18 c⁄° 
	gMYFRAMESIZE
 = 3;

19 c⁄° 
	gMAXINT
 = 32767;

24 
	tMAXTYPE
;

25 
	tINDEXTYPE
;

26 
	tSQUARETYPE
;

27 
	tEDGESQUARETYPE
;

28 
	tDEPTHTYPE
;

29 *
	tLIBTYPE
;

30 
	tDIRTYPE
;

31 
	tSETOFPIECE
;

32 
	tFIFTYTYPE
;

33 
	tREPEATTYPE
;

34 
	tSTR80
[81];

35 
	tCOMMANDSTRING
[
COMMANDLENGTH
];

36 
	tSTR6
[6];

37 
	tMAXSTRING
[
MAXLEN
];

39 
MOVETYPE
 
	tLINETYPE
[
MAXPLY
];

41 
	ePIECETYPE
 { 
	mno_põ˚
, 
	mkög
, 
	mquìn
, 
	mrook
, 
	mbish›
, 
	mknight
, 
	m∑wn
 };

42 
	eCOLORTYPE
 { 
	mwhôe
, 
	mbœck
 };

43 
	eCASTTYPE
 { 
	mzîo
, 
	m g
, 
	mshπ
 };

44 
	eLEVELTYPE
 { 
	mn‹mÆ
, 
	mfuŒgamëime
, 
	mósygame
, 
	möföôe
, 
	m∂y£¨ch
, 
	mm©e£¨ch
, 
	mm©chög
 };

48 
	sMOVETYPE


50 
	m√w1
, 
	mﬁd
;

51 
	m•e
;

52 
PIECETYPE
 
	mmovpõ˚
, 
	mc⁄ã¡
;

55 
	sBOARDTYPE


57 
PIECETYPE
 
	mpõ˚
;

58 
COLORTYPE
 
	mcﬁ‹
;

59 
	mödex
;

60 
	m©ècked
;

63 
	sCLOCKTYPE


65 
	mhour
, 
	mmöuã
, 
	m£c⁄d
, 
	m£c100
;

66 
	mtŸÆhours
, 
	mtŸmö
, 
	mtŸÆ£cs
, 
	mtŸs100
;

67 
	mnumbî
;

68 
	mtŸÆtime
;

71 
	sNODEVAL


73 
	mnodeba£
;

74 
	mnodeoff£t
;

77 
	sTEXTCOLORTYPE


79 
	mbackground
;

80 
	mcﬁ‹
;

83 
	sSCREENPOSTYPE


85 
	mx
, 
	my
;

86 
	mbackground
, 
	mcﬁ‹
;

89 
	sBOARDIDTYPE


91 
PIECETYPE
 
	mpõ˚
;

92 
COLORTYPE
 
	mcﬁ‹
;

95 
	sPIECETAB


97 
SQUARETYPE
 
	misqu¨e
;

98 
PIECETYPE
 
	mùõ˚
;

102 
	sATTACKTABTYPE


104 
SETOFPIECE
 
	mpõ˚£t
;

105 
	mdúe˘i⁄
;

108 
	sCASTMOVETYPE


110 
SQUARETYPE
 
	mˇ°√w
;

111 
SQUARETYPE
 
	mˇ°ﬁd
;

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/wchess.cpp

10 
	~<°©ic.h
>

11 
	~<fûedül.h
>

12 
	~<öputdü.h
>

13 
	~<bwcc.h
>

14 
	~<°rög.h
>

15 
	~<°dio.h
>

17 
	~"wcdefs.h
"

18 
	~"öfo.h
"

19 
	~"wchess.h
"

20 
	~"edô.h
"

21 
	~"cﬁ‹s.h
"

22 
	~"pvÆue.h
"

23 
	~"exã∫s.h
"

25 #unde‡
MAXPATH


26 
	#MAXPATH
 160

	)

32 
BYTE
 
	gWhôeSqu¨eCﬁ‹s
[3] = { ~0, ~0, ~0 };

33 
BYTE
 
	gBœckSqu¨eCﬁ‹s
[3] = { 0, 128, 0 };

35 
BOOL
 
	gShowBe°Löe
 = 
TRUE
;

36 
PTInfoWödow
 
	gTInfo
;

37 
HBRUSH
 
	ghBœckBrush
;

38 
HBRUSH
 
	ghWhôeBrush
;

39 
HWND
 
	ghWndMaö
;

40 
HBITMAP
 
	gPõ˚BmpAºay
[6][2];

41 
HBITMAP
 
	gMaskAºay
[6];

42 
HCURSOR
 
	ghAºowCurs‹
;

43 
HCURSOR
 
	ghWaôCurs‹
;

44 
HMENU
 
	gThökMíu
, 
	gMaöMíu
;

45 
HANDLE
 
	ghAc˚l
;

46 
COLORTYPE
 
	gCompuãrCﬁ‹
;

47 
	gLINESIZE
;

48 
	gCHARSIZE
;

49 
	gCAPTIONY
;

50 
BOOL
 
	gEdôög
;

51 
	gBORDERSIZE
;

52 c⁄° 
	gBORDERYEXTRA
 = 4;

53 
	gINFOXSIZE
, 
	gINFOYSIZE
;

54 
BOOL
 
	gSoundOn
;

64 
	$_CLASSDEF
(
TMesßgeDülog
)

65 ˛as†
	cTMesßgeDülog
 : 
public
 
TDülog


67 
public
:

68 
	$TMesßgeDülog
(
PTWödowsObje˘
 
AP¨ít
, 
Resour˚Id
, 
LPSTR
 
Mesßge
, LPSTR 
TôÀ
)

69 : 
	`TDülog
(
AP¨ít
, 
Resour˚Id
), 
	`NewMesßge
–
Mesßge
), 
	$NewTôÀ
–
TôÀ
 ) {}

71 
vútuÆ
 
	$SëupWödow
() {

74 
TDülog
::
	`SëupWödow
();

75 
	`SëDlgIãmText
(
HWödow
, 
ID_INPUT
, 
NewMesßge
);

76 
	`SëWödowText
(
HWödow
, 
NewTôÀ
);

77 
	}
}

79 
	g¥iv©e
:

80 
LPSTR
 
NewMesßge
;

81 
LPSTR
 
	gNewTôÀ
;

86 
	$_CLASSDEF
(
TEndDülog
)

87 ˛as†
	cTEndDülog
 : 
public
 
TDülog


89 
public
:

90 
	$TEndDülog
(
PTWödowsObje˘
 
AP¨ít
, 
Resour˚Id
, 
LPSTR
 
Mesßge
): 
	`TDülog
(AP¨ít, Resour˚Id), 
	$EndMesßge
(
Mesßge
) {}

92 
vútuÆ
 
	$SëupWödow
() {

93 
TDülog
::
	`SëupWödow
();

94 
	`SëDlgIãmText
–
HWödow
, 
ID_INPUT
, 
EndMesßge
 );

95 
	}
}

97 
vútuÆ
 
Yes
–
RTMesßge
 ) = [
ID_FIRST
+
IDYES
] { 
Clo£Wödow
( IDYES ); }

98 
vútuÆ
 
No
–
RTMesßge
 ) = [
ID_FIRST
+
IDNO
] { 
ShutDownWödow
(); }

100 
	g¥iv©e
:

101 
LPSTR
 
EndMesßge
;

106 
	$_CLASSDEF
(
TChessWödow
)

107 ˛as†
	cTChessWödow
 : 
public
 
TWödow


109 
public
:

110 
	`TChessWödow
(
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
ATôÀ
);

111 ~
	`TChessWödow
();

113 
vútuÆ
 
	`SëupWödow
();

114 
vútuÆ
 
	`GëWödowCœss
(
WNDCLASS
& 
WndCœss
);

115 
vútuÆ
 
	`Paöt
–
HDC
 
PaötDC
, 
PAINTSTRUCT
& );

117 
vútuÆ
 
	`WMLBuâ⁄Down
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
WM_LBUTTONDOWN
 ];

118 
vútuÆ
 
	`WMMou£Move
–
RTMesßge
 
msg
 ) = [ 
WM_FIRST
 + 
WM_MOUSEMOVE
 ];

119 
vútuÆ
 
	`WMTimî
–
RTMesßge
 ) = [
WM_FIRST
 + 
WM_TIMER
];

121 
vútuÆ
 
	`CMNewGame
–
RTMesßge
 ) = [
CM_FIRST
 + 
CM_FILENEW
];

122 
vútuÆ
 
	`CMRe°‹eGame
–
RTMesßge
 ) = [
CM_FIRST
 + 
CM_FILEOPEN
];

123 
vútuÆ
 
	`CMSaveGame
–
RTMesßge
 ) = [
CM_FIRST
 + 
CM_FILESAVE
];

124 
vútuÆ
 
	`CMSaveGameAs
–
RTMesßge
 ) = [
CM_FIRST
 + 
CM_FILESAVEAS
];

125 
vútuÆ
 
	`Exô
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_EXIT
] { 
	`Clo£Wödow
(); }

126 
vútuÆ
 
	`UndoMove
–
RTMesßge
 ) = [
CM_FIRST
 + 
CM_UNDO
];

127 
vútuÆ
 
	`RedoUndo
–
RTMesßge
 ) = [
CM_FIRST
 + 
CM_REDO
];

128 
vútuÆ
 
	`IDMMovePõ˚s
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_MOVEPIECE
];

129 
vútuÆ
 
	`IDMMoveTime
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_MOVETIME
];

130 
vútuÆ
 
	`IDMTŸÆTime
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_TOTALTIME
];

131 
vútuÆ
 
	`IDMDemo
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_DEMO
];

132 
vútuÆ
 
	`IDMInföôeSórch
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_INFINITE
];

133 
vútuÆ
 
	`IDMPlySórch
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_PLY
];

134 
vútuÆ
 
	`IDMM©eSórch
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_MATE
];

135 
vútuÆ
 
	`IDMSögÀPœyî
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_SINGLE
];

136 
vútuÆ
 
	`IDMTwoPœyî
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_TWOPLAYER
];

137 
vútuÆ
 
	`IDMAutoPœy
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_AUTO
];

138 
vútuÆ
 
	`IDMRevî£Bﬂrd
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_REVERSE
];

139 
vútuÆ
 
	`IDMEasy
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_EASY
];

140 
vútuÆ
 
	`IDMHöt
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_HINT
];

141 
vútuÆ
 
	`IDMPass
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_PASS
];

142 
vútuÆ
 
	`EMD⁄e
–
RTMesßge
 ) = [
CM_FIRST
 + 
EM_DONE
];

143 
vútuÆ
 
	`EMCÀ¨
–
RTMesßge
 ) = [
CM_FIRST
 + 
EM_CLEAR
];

144 
vútuÆ
 
	`EMC™˚l
–
RTMesßge
 ) = [
CM_FIRST
 + 
EM_CANCEL
];

145 
vútuÆ
 
	`EMEº‹
–
RTMesßge
 ) = [
CM_FIRST
 + 
EM_ERROR
];

146 
vútuÆ
 
	`IDMM©chög
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_MATCHING
];

147 
vútuÆ
 
	`IDMWhôeTu∫
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_WHITETURN
];

148 
vútuÆ
 
	`IDMBœckTu∫
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_BLACKTURN
];

149 
vútuÆ
 
	`IDMCﬁ‹s
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_COLORS
];

150 
vútuÆ
 
	`IDMPõ˚VÆues
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_PIECEVALUES
];

151 
vútuÆ
 
	`IDMBe°Löe
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_BESTLINE
];

152 
vútuÆ
 
	`IDMMou£Døg
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_MOUSEDRAG
];

153 
vútuÆ
 
	`IDMMou£Sñe˘
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_MOUSESELECT
];

154 
vútuÆ
 
	`IDMSound
–
RTMesßge
 ) = [
CM_FIRST
 + 
IDM_SOUND
];

156 
	`EndGame
();

157 
	`DoEdô
();

158 
	`SaveGameAs
();

159 
	`CompuãrsTu∫
();

160 
	`UnCheckLevñMíu
–
LEVELTYPE
 
Àvñ
 );

161 
	`N‹mÆSëup
();

162 
	`CheckLevñMíu
–
LEVELTYPE
 
Àvñ
 );

164 
vútuÆ
 
BOOL
 
	`C™Clo£
();

166 
¥iv©e
:

167 
	eTURNTYPE
 { 
∂ayî
, 
compuãr
 
	}
};

169 
PTInfoWödow
 
	gTInfo
;

170 
PTEdôB¨Wödow
 
	gTEdôB¨
;

172 
BOOL
 
	gNewGame
;

173 *
	gFûeName
;

174 
RECT
 
	gMaöWndRe˘
;

175 
RECT
 
	gInfoAªaRe˘
;

177 
HMENU
 
	ghMíu
;

178 
HMENU
 
	ghThökMíu
;

179 
HMENU
 
	ghEdôMíu
;

180 
TURNTYPE
 
	gWho£Tu∫
;

181 
SQUARETYPE
 
	gMoveSèπSqu¨e
;

182 
SQUARETYPE
 
	gMoveEndSqu¨e
;

183 
COLORTYPE
 
	gCurPœyî
;

184 
BOOL
 
	gGŸSèπSqu¨e
;

185 
HBRUSH
 
	ghBKBrush
;

186 
HBITMAP
 
	ghBKBrushBmp
;

188 
BOOL
 
	gModifõd
;

189 
BOOL
 
	gEdôögBﬂrd
;

190 
BOOL
 
	gDøggög
;

192 
BOARDTYPE
 *
	gSaveBﬂrd
;

202 ˛as†
	cTChess
: 
public
 
TAµliˇti⁄


204 
public
:

205 
	$TChess
–
LPSTR
 
AName
, 
HINSTANCE
 
hIn°™˚
, HINSTANCE 
hPªvIn°™˚
, LPSTR 
ÕCmdLöe
, 
nCmdShow
)

206 : 
	$TAµliˇti⁄
(
AName
, 
hIn°™˚
, 
hPªvIn°™˚
, 
ÕCmdLöe
, 
nCmdShow
) { }

208 
vútuÆ
 
	$InôMaöWödow
(Ë{ 
MaöWödow
 = 
√w
 
	`TChessWödow
–
NULL
, "OWL Chess" ); 
	}
}

210 
	$InôIn°™˚
() {

211 
TAµliˇti⁄
::
	`InôIn°™˚
();

212 
hAc˚l
 = 
HAccTabÀ
 = 
	`LﬂdAc˚Àøt‹s
(
hIn°™˚
, "ChessCommands");

213 
	`BWCCGëVîsi⁄
();

214 
	}
}

220 
	gTChessWödow
::
	$TChessWödow
–
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
ATôÀ
 ) : 
	$TWödow
(
AP¨ít
, 
ATôÀ
)

222 
HDC
 
hDC
 = 
	`GëDC
–
HWödow
 );

224 
TEXTMETRIC
 
tm
;

225 
	`GëTextMërics
–
hDC
, &
tm
 );

226 
CHARSIZE
 = 
tm
.
tmAveCh¨Width
;

227 
LINESIZE
 = 
tm
.
tmHeight
 +Åm.
tmExã∫ÆLódög
;

228 
	`Rñó£DC
–
HWödow
, 
hDC
 );

230 
CAPTIONY
 = 
	`GëSy°emMërics
–
SM_CYCAPTION
 ) + GëSy°emMërics–
SM_CYMENU
 );

231 
BORDERSIZE
 = 
LINESIZE
 + 
MYFRAMESIZE
;

233 
TInfo
 = 
√w
 
	`TInfoWödow
–
this
, "InfoWindow" );

234 
TEdôB¨
 = 
√w
 
	`TEdôB¨Wödow
–
this
, "EditBar" );

236 
SoundOn
 = 
TRUE
;

237 ::
TInfo
 = TInfo;

239 
Aâr
.
StyÀ
 = 
WS_OVERLAPPED
 | 
WS_SYSMENU
 | 
WS_MINIMIZEBOX
;

240 
Aâr
.
X
 = 5;

241 
Aâr
.
Y
 = 5;

242 
Aâr
.
H
 = 
CAPTIONY
 + (
BORDERSIZE
 * 2Ë+ 
INFOYSIZE
 + 
BORDERYEXTRA
 + (2 * 
	`GëSy°emMërics
(
SM_CYBORDER
));

243 
Aâr
.
W
 = (
BORDERSIZE
 * 4Ë+ (
MAXBDSIZE
 * 
SQUARE_SIZE
Ë+ 
INFOXSIZE
 + (2 * 
	`GëSy°emMërics
(
SM_CXBORDER
)Ë+ (2*
MYFRAMESIZE
);

245 
FûeName
 = 
√w
 [
MAXPATH
];

246 
Who£Tu∫
 = 
∂ayî
;

247 
CurPœyî
 = 
whôe
;

248 ::
CompuãrCﬁ‹
 = 
bœck
;

249 ::
Edôög
 = 
EdôögBﬂrd
 = 
GŸSèπSqu¨e
 = 
FALSE
;

250 
NewGame
 = 
TRUE
;

251 
	}
}

253 
	gTChessWödow
::~
	$TChessWödow
()

255 
dñëe
 
FûeName
;

256 
dñëe
 
TInfo
;

258 
	`DñëeObje˘
(
hWhôeBrush
);

259 
	`DñëeObje˘
(
hBœckBrush
);

260 
	`DñëeObje˘
(
hBKBrushBmp
);

261 
	`De°royMíu
(
hThökMíu
);

262 
	`De°royMíu
(
hEdôMíu
);

264  
i
 = 0; i < 6; i++ ) {

265 
	`DñëeObje˘
–
MaskAºay
[
i
] );

267  
j
 = 0; j < 2; j++ )

268 
	`DñëeObje˘
–
Põ˚BmpAºay
[
i
][
j
] );

271 
	`KûlTimî
(
HWödow
, 
TIMEID
);

272 
	}
}

274 
	gTChessWödow
::
	$GëWödowCœss
–
WNDCLASS
& 
WndCœss
 )

278 
TWödow
::
	`GëWödowCœss
–
WndCœss
 );

282 
hAºowCurs‹
 = 
	`LﬂdCurs‹
–0, 
IDC_ARROW
 );

283 
hBKBrushBmp
 = 
	`LﬂdBôm≠
–
	`GëAµliˇti⁄
()->
hIn°™˚
, "BKBrushBmp" );

284 
hBKBrush
 = 
	`Cª©eP©ã∫Brush
–
hBKBrushBmp
 );

286 
WndCœss
.
hCurs‹
 = 
hAºowCurs‹
;

287 
WndCœss
.
hbrBackground
 = 
hBKBrush
;

288 
WndCœss
.
ÕszMíuName
 = "TChessMenu";

289 
WndCœss
.
hIc⁄
 = 
	`LﬂdIc⁄
–
	`GëAµliˇti⁄
()->
hIn°™˚
, "ChessIcon" );

290 
	}
}

293 
	gTChessWödow
::
	$SëupWödow
()

295 
TWödow
::
	`SëupWödow
();

297 ::
hWndMaö
 = 
HWödow
;

298 ::
hWaôCurs‹
 = 
	`LﬂdCurs‹
(0, 
IDC_WAIT
);

300 ::
Põ˚BmpAºay
[
∑wn
-1][
whôe
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "WPawnBmp");

301 ::
Põ˚BmpAºay
[
∑wn
-1][
bœck
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "BPawnBmp");

302 ::
Põ˚BmpAºay
[
rook
-1][
whôe
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "WRookBmp");

303 ::
Põ˚BmpAºay
[
rook
-1][
bœck
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "BRookBmp");

304 ::
Põ˚BmpAºay
[
knight
-1][
whôe
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "WKnightBmp");

305 ::
Põ˚BmpAºay
[
knight
-1][
bœck
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "BKnightBmp");

306 ::
Põ˚BmpAºay
[
bish›
-1][
whôe
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "WBishopBmp");

307 ::
Põ˚BmpAºay
[
bish›
-1][
bœck
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "BBishopBmp");

308 ::
Põ˚BmpAºay
[
quìn
-1][
whôe
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "WQueenBmp");

309 ::
Põ˚BmpAºay
[
quìn
-1][
bœck
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "BQueenBmp");

310 ::
Põ˚BmpAºay
[
kög
-1][
whôe
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "WKingBmp");

311 ::
Põ˚BmpAºay
[
kög
-1][
bœck
] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "BKingBmp");

313 ::
MaskAºay
[
∑wn
-1] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "PMaskBmp");

314 ::
MaskAºay
[
rook
-1] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "RMaskBmp");

315 ::
MaskAºay
[
knight
-1] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "KTMaskBmp");

316 ::
MaskAºay
[
bish›
-1] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "BMaskBmp");

317 ::
MaskAºay
[
quìn
-1] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "QMaskBmp");

318 ::
MaskAºay
[
kög
-1] = 
	`LﬂdBôm≠
(
	`GëAµliˇti⁄
()->
hIn°™˚
, "KMaskBmp");

320 
	`GëClõ¡Re˘
–
HWödow
, &
MaöWndRe˘
 );

321 
InfoAªaRe˘
 = 
MaöWndRe˘
;

322 
InfoAªaRe˘
.
À·
 = (
MaöWndRe˘
.
right
 -((
BORDERSIZE
 * 2Ë+ 
INFOXSIZE
));

324 
MaöMíu
 = 
hMíu
 = 
	`GëMíu
–
HWödow
 );

325 ::
ThökMíu
 = 
hThökMíu
 = 
	`LﬂdMíu
–
	`GëAµliˇti⁄
()->
hIn°™˚
, "TChessThinkMenu" );

326 
hEdôMíu
 = 
	`LﬂdMíu
–
	`GëAµliˇti⁄
()->
hIn°™˚
, "TChessEditMenu" );

328 ::
	`TÆk
();

329 
	`CheckLevñMíu
–
Levñ
 );

330 ::
hWhôeBrush
 = 
	`Cª©eSﬁidBrush
–
	`RGB
(
WhôeSqu¨eCﬁ‹s
[0], WhiteSquareColors[1], WhiteSquareColors[2]) );

331 ::
hBœckBrush
 = 
	`Cª©eSﬁidBrush
–
	`RGB
(
BœckSqu¨eCﬁ‹s
[0], BlackSquareColors[1], BlackSquareColors[2]) );

333 
Døggög
 = 
TRUE
;

334 
	}
}

337 
	gTChessWödow
::
	$Paöt
–
HDC
 
PaötDC
, 
PAINTSTRUCT
& )

339 
	`DøwFøme
–
PaötDC
, 
MaöWndRe˘
 );

340 
	`DøwFøme
–
PaötDC
, 
InfoAªaRe˘
 );

341 
	`PrötBﬂrd
();

342 
	}
}

346 
	gTChessWödow
::
	$WMLBuâ⁄Down
–
RTMesßge
 )

348 
POINT
 
Poöt
;

349 if–
EdôögBﬂrd
 ) {

350 
	`DoEdô
();

354 if–
Who£Tu∫
 =
compuãr
 && 
NoCompuãrMove
 =
FALSE
 )

357 
	`GëCurs‹Pos
–&
Poöt
 );

358 
	`S¸ìnToClõ¡
–
HWödow
, &
Poöt
 );

360 if–!
GŸSèπSqu¨e
 ) {

361 
MoveSèπSqu¨e
 = 
	`GëVÆidSqu¨e
–
Poöt
, 
CurPœyî
, 
TRUE
 );

362 if–
MoveSèπSqu¨e
 == -1 )

364 
GŸSèπSqu¨e
 = 
TRUE
;

365 if–!
Døggög
 )

366 
	`DøwInvîãdBôm≠
–
MoveSèπSqu¨e
 );

368 
	`DøgSèπ
–
MoveSèπSqu¨e
, 
Poöt
 );

370 
MoveEndSqu¨e
 = 
	`GëVÆidSqu¨e
–
Poöt
, 
CurPœyî
, 
FALSE
 );

371 
GŸSèπSqu¨e
 = 
FALSE
;

373 if–
MoveEndSqu¨e
 == -1 ) {

374 if–
Døggög
 )

375 
	`DøgEnd
–
FALSE
 );

376 
	`W¨nög
( "Invalid Move" );

377 
	`DøwN‹mÆBôm≠
–
MoveSèπSqu¨e
 );

381 if–!
	`MoveCheck
–
MoveSèπSqu¨e
, 
MoveEndSqu¨e
 ) ) {

382 if–
Døggög
 )

383 
	`DøgEnd
–
FALSE
 );

384 
	`DøwN‹mÆBôm≠
–
MoveSèπSqu¨e
 );

388 ::
GŸVÆidMove
 = 
TRUE
;

389 
	`E«bÀMíuIãm
–
hMíu
, 
CM_UNDO
, 
MF_BYCOMMAND
 | 
MF_ENABLED
 );

390 if–
GameOvî
 )

391 
	`EndGame
();

392 if–
NoCompuãrMove
 =
FALSE
 )

393 
	`CompuãrsTu∫
();

394 if–::
Mu…iMove
 ) {

395 
CurPœyî
 = (CurPœyî =
whôe
Ë? 
bœck
 : white;

398 
	}
}

400 
	gTChessWödow
::
	$CompuãrsTu∫
()

402 
Who£Tu∫
 = 
compuãr
;

403 
	`SëCœssW‹d
–
HWödow
, 
GCW_HCURSOR
, 
	`WORD
–::
hWaôCurs‹
 ) );

404 
	`SëCurs‹
–::
hWaôCurs‹
 );

405 
	`SëMíu
–
HWödow
, 
hThökMíu
 );

406 
	`ProgømMove
();

407 
	`SëMíu
–
HWödow
, 
hMíu
 );

408 
Who£Tu∫
 = 
∂ayî
;

409 
	`SëCœssW‹d
–
HWödow
, 
GCW_HCURSOR
, 
	`WORD
–
hAºowCurs‹
 ));

410 if–
GameOvî
 )

411 
	`EndGame
();

412 
	}
}

414 
	gTChessWödow
::
	$CMNewGame
–
RTMesßge
 )

416 
	`KûlTimî
–
HWödow
, 
TIMEID
 );

417 
TInfo
->
	`SëTimîText
( "" );

418 
	`E«bÀMíuIãm
–
hMíu
, 
CM_UNDO
, 
MF_BYCOMMAND
 | 
MF_DISABLED
 | 
MF_GRAYED
 );

419 
	`E«bÀMíuIãm
–
hMíu
, 
CM_REDO
, 
MF_BYCOMMAND
 | 
MF_DISABLED
 | 
MF_GRAYED
 );

420 
NewGame
 = 
TRUE
;

421 ::
	`NewGame
();

422 ::
	`PrötBﬂrd
();

423 
CurPœyî
 = 
Pœyî
;

424 
CompuãrCﬁ‹
 = 
Oµ⁄ít
;

425 
	}
}

427 
	gTChessWödow
::
	$CMRe°‹eGame
–
RTMesßge
 )

429 if–
	`GëAµliˇti⁄
()->
	`ExecDülog
–
√w
 
	`TFûeDülog
–
this
, 
SD_FILEOPEN
, 
	`°r˝y
(
FûeName
, "*.CHS")ËË=
IDOK
 ) {

430 
NewGame
 = 
FALSE
;

431 ::
	`Re°‹eGame
–
FûeName
 );

432 
CurPœyî
 = 
Pœyî
;

433 
CompuãrCﬁ‹
 = 
Oµ⁄ít
;

434 
	`E«bÀMíuIãm
–
hMíu
, 
CM_REDO
, 
MF_BYCOMMAND
 | 
MF_DISABLED
 | 
MF_GRAYED
 );

435 
	`E«bÀMíuIãm
–
hMíu
, 
CM_UNDO
, 
MF_BYCOMMAND
 | 
MF_DISABLED
 | 
MF_GRAYED
 );

437 
	}
}

439 
	gTChessWödow
::
	$SaveGameAs
()

441 if–
	`GëAµliˇti⁄
()->
	`ExecDülog
–
√w
 
	`TFûeDülog
–
this
, 
SD_FILESAVE
, 
	`°r˝y
(
FûeName
, "*.CHS")ËË=
IDOK
 ) {

442 
NewGame
 = 
FALSE
;

443 ::
	`SaveGame
–
FûeName
 );

445 
	}
}

447 
	gTChessWödow
::
	$CMSaveGame
–
RTMesßge
 )

449 if–
NewGame
 =
TRUE
 )

450 
	`SaveGameAs
();

452 ::
	`SaveGame
(
FûeName
);

453 
	}
}

455 
	gTChessWödow
::
	$CMSaveGameAs
–
RTMesßge
 )

457 
	`SaveGameAs
();

458 
	}
}

460 
	gTChessWödow
::
	$EMEº‹
–
RTMesßge
 )

462 
	`GëAµliˇti⁄
()->
	`ExecDülog
–
√w
 
	`TMesßgeDülog
–
this
, 
SD_CHESSERROR
, (
LPSTR
)
buf
, "OWL Chess Error") );

463 
	}
}

465 
	gTChessWödow
::
	$DoEdô
()

467 
POINT
 
Poöt
;

468 
SQUARETYPE
 
Squ¨e
;

469 
Sñe˘edIãm
;

471 
Modifõd
 = 
TRUE
;

472 
	`GëCurs‹Pos
–&
Poöt
 );

473 
	`S¸ìnToClõ¡
–
HWödow
, &
Poöt
 );

474 
Squ¨e
 = 
	`GëVÆidSqu¨e
–
Poöt
, 
bœck
, 
FALSE
 );

476 if–
Bﬂrd
[
Squ¨e
].
põ˚
 !
no_põ˚
 ) {

477 
Bﬂrd
[
Squ¨e
].
põ˚
 = 
no_põ˚
;

478 ::
	`Upd©eBﬂrd
();

481 
Sñe˘edIãm
 = 
TEdôB¨
->
	`GëSñe˘edIãm
();

483 
Bﬂrd
[
Squ¨e
].
põ˚
 = (
PIECETYPE
)–
Sñe˘edIãm
 % 6 + 1 );

484 
Bﬂrd
[
Squ¨e
].
cﬁ‹
 = (
Sñe˘edIãm
 < 6Ë? 
whôe
 : 
bœck
;

485 ::
	`Upd©eBﬂrd
();

486 
	}
}

488 
	gTChessWödow
::
	$IDMMovePõ˚s
–
RTMesßge
 )

490 
SaveBﬂrd
 = 
√w
 
BOARDTYPE
[0x78];

492 if–
SaveBﬂrd
 =
NULL
 ) {

493 
	`Eº‹
("NotÉnough memory");

497 
	`mem˝y
–
SaveBﬂrd
, 
Bﬂrd
, (
BOARDTYPE
) * 0x78 );

498 
Edôög
 = 
EdôögBﬂrd
 = 
TRUE
;

499 
TInfo
->
	`Show
–
SW_HIDE
 );

500 
	`SëMíu
–
HWödow
, 
hEdôMíu
 );

501 
Modifõd
 = 
FALSE
;

503 
	`CheckMíuIãm
(
hEdôMíu
, 
IDM_BLACKTURN
, (
CurPœyî
 =
whôe
Ë? 
MF_UNCHECKED
 : 
MF_CHECKED
 );

504 
	`CheckMíuIãm
(
hEdôMíu
, 
IDM_WHITETURN
, (
CurPœyî
 =
whôe
Ë? 
MF_CHECKED
 : 
MF_UNCHECKED
 );

506 
TEdôB¨
->
	`Show
(
SW_NORMAL
);

507 
	}
}

509 
	gTChessWödow
::
	$EMD⁄e
–
RTMesßge
 )

511 
SQUARETYPE
 
sq
;

512 
KögCou¡
[2] = { 0, 0 };

513 
TŸÆCou¡
[2] = { 0, 0 };

514 
BOOL
 
D⁄e
 = 
FALSE
;

516 if–
Modifõd
 ) {

517 
sq
 = 0; sq < 0x78; sq++)

518 if–!(
sq
 & 0x88) ) {

519 i‡(
Bﬂrd
[
sq
].
põ˚
 !
no_põ˚
) {

520 
TŸÆCou¡
[
Bﬂrd
[
sq
].
cﬁ‹
]++;

521 i‡(
Bﬂrd
[
sq
].
põ˚
 =
kög
)

522 
KögCou¡
[
Bﬂrd
[
sq
].
cﬁ‹
]++;

526 i‡(
TŸÆCou¡
[
whôe
] <16 && 
KögCou¡
[whôe] =1 && TŸÆCou¡[
bœck
] <= 16 && KingCount[black] == 1) {

527 
	`Re£tNewPos
();

528 i‡(!
	`Aâacks
(
Pœyî
, 
Põ˚Tab
[
Oµ⁄ít
][0].
isqu¨e
))

529 
D⁄e
 = 
TRUE
;

531 
	`Eº‹
("Illegal KingÖosition");

533 
	`Eº‹
("WrongÇumber ofÖieces");

535 
	`N‹mÆSëup
();

537 if–
D⁄e
 )

538 
	`N‹mÆSëup
();

539 
	}
}

541 
	gTChessWödow
::
	$EMCÀ¨
–
RTMesßge
 )

543 
SQUARETYPE
 
sq
;

545 
Modifõd
 = 
TRUE
;

547 
sq
 = 0; sq <= 0x77; sq++)

548 
Bﬂrd
[
sq
].
põ˚
 = 
no_põ˚
;

550 ::
	`Upd©eBﬂrd
();

551 
	}
}

553 
	gTChessWödow
::
	$EMC™˚l
–
RTMesßge
 )

555 
	`mem˝y
(
Bﬂrd
, 
SaveBﬂrd
, (
BOARDTYPE
) * 0x78);

556 
	`Re£tNewPos
();

557 
	`N‹mÆSëup
();

558 
	}
}

561 
	gTChessWödow
::
	$N‹mÆSëup
()

563 
TEdôB¨
->
	`Show
–
SW_HIDE
 );

564 
TInfo
->
	`Show
–
SW_NORMAL
 );

565 
	`SëMíu
–
HWödow
, 
hMíu
 );

566 
dñëe
[] 
SaveBﬂrd
;

567 
Edôög
 = 
EdôögBﬂrd
 = 
FALSE
;

568 ::
	`Upd©eBﬂrd
();

569 
	}
}

571 
	gTChessWödow
::
	$IDMMoveTime
–
RTMesßge
 )

573 *
SecsPîMove
 = 
√w
 [40];

575 
	`•rötf
–
SecsPîMove
, "%.2lf", ::
AvîageTime
 );

577 if–
	`GëAµliˇti⁄
()->
	`ExecDülog
–
√w
 
	`TI≈utDülog
–
this
, "Së Sec⁄d†≥∏Move", "Sec⁄d†Pî Move:", 
SecsPîMove
, 19ËË=
IDOK
 ) {

579 
NewMoveTime
 = 
	`©of
–
SecsPîMove
 );

581 if–
NewMoveTime
 > 0. ) {

582 if–::
Levñ
 !
n‹mÆ
 ) {

583 
	`UnCheckLevñMíu
–
Levñ
 );

584 
	`CheckMíuIãm
–
hMíu
, 
IDM_MOVETIME
, 
MF_CHECKED
 );

586 ::
Levñ
 = 
n‹mÆ
;

587 
	`PrötCurLevñ
();

589 ::
AvîageTime
 = 
NewMoveTime
;

591  
COLORTYPE
 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++ )

592 ::
ChessTime
[
cﬁ‹
].
tŸÆtime
 = (::
MoveNo
 / 2Ë* ::
AvîageTime
;

594 ::
MaxLevñ
 = 
MAXPLY
;

596 
	`Eº‹
("InvalidÅime. No change made.");

599 
dñëe
 
SecsPîMove
;

600 
	}
}

603 
	gTChessWödow
::
	$IDMTŸÆTime
–
RTMesßge
 )

605 *
TŸÆMoveTime
 = 
√w
 [40];

607 
	`•rötf
–
TŸÆMoveTime
, "%.2lf", ::
AvîageTime
 );

609 if–
	`GëAµliˇti⁄
()->
	`ExecDülog
–
√w
 
	`TI≈utDülog
–
this
, "Së Sec⁄d†≥∏Game", "Sec⁄d†Pî Game:", 
TŸÆMoveTime
, 19ËË=
IDOK
 ) {

611 
NewMoveTime
 = 
	`©of
–
TŸÆMoveTime
 );

613 if–
NewMoveTime
 > 0. ) {

614 if–::
Levñ
 !
fuŒgamëime
 ) {

615 
	`UnCheckLevñMíu
–
Levñ
 );

616 
	`CheckMíuIãm
–
hMíu
, 
IDM_TOTALTIME
, 
MF_CHECKED
 );

618 ::
Levñ
 = 
fuŒgamëime
;

619 ::
	`PrötCurLevñ
();

621 ::
AvîageTime
 = 
NewMoveTime
;

623  
COLORTYPE
 
cﬁ‹
 = 
whôe
; cﬁ‹ <
bœck
; (()color)++ )

624 ::
ChessTime
[
cﬁ‹
].
tŸÆtime
 = (::
MoveNo
 / 2Ë* ::
AvîageTime
;

626 ::
MaxLevñ
 = 
MAXPLY
;

628 
	`Eº‹
("InvalidÅime. No change made.");

631 
dñëe
 
TŸÆMoveTime
;

632 
	}
}

634 
	gTChessWödow
::
	$IDMDemo
–
RTMesßge
 )

636 
BOOL
 
AutoPœy
;

637 
BOOL
 
IsEasy
 = 
FALSE
;

639 if–::
Levñ
 =
ósygame
 ) {

640 
IsEasy
 = 
TRUE
;

641 ::
Levñ
 = 
n‹mÆ
;

642 
	`HideAâacks
();

645 
AutoPœy
 = 
TRUE
;

646 
	`CompuãrsTu∫
();

648 if–
IsEasy
 ) {

649 ::
Levñ
 = 
ósygame
;

650 ::
	`Upd©eBﬂrd
();

653 
CurPœyî
 = 
Pœyî
;

654 
CompuãrCﬁ‹
 = 
Oµ⁄ít
;

655 ::
	`PrötCurLevñ
();

656 
	}
}

658 
	gTChessWödow
::
	$IDMM©chög
–
RTMesßge
 )

660 if–::
Levñ
 !
m©chög
 ) {

661 
	`UnCheckLevñMíu
–
Levñ
 );

662 
	`CheckMíuIãm
–
hMíu
, 
IDM_MATCHING
, 
MF_CHECKED
 );

664 ::
Levñ
 = 
m©chög
;

665 ::
	`PrötCurLevñ
();

666 
	}
}

668 
	gTChessWödow
::
	$IDMInföôeSórch
–
RTMesßge
 )

670 if–::
Levñ
 !
öföôe
 ) {

671 
	`UnCheckLevñMíu
–
Levñ
 );

672 
	`CheckMíuIãm
–
hMíu
, 
IDM_INFINITE
, 
MF_CHECKED
 );

674 ::
Levñ
 = 
öföôe
;

675 ::
	`PrötCurLevñ
();

677 ::
MaxLevñ
 = 
MAXPLY
;

678 
	}
}

680 
	gTChessWödow
::
	$IDMPlySórch
–
RTMesßge
 )

682 *
PlySórchDïth
 = 
√w
 [40];

684 
	`•rötf
(
PlySórchDïth
, "%d", ::
MaxLevñ
);

686 if–
	`GëAµliˇti⁄
()->
	`ExecDülog
–
√w
 
	`TI≈utDülog
(
this
, "SëÖly dïth", "Numbî o‡∂ys:", 
PlySórchDïth
, 19ËË=
IDOK
 ) {

688 
NewPlyDïth
 = 
	`©oi
–
PlySórchDïth
 );

690 if–
NewPlyDïth
 > 0 ) {

691 if–::
Levñ
 !
∂y£¨ch
 ) {

692 
	`UnCheckLevñMíu
–
Levñ
 );

693 
	`CheckMíuIãm
–
hMíu
, 
IDM_PLY
, 
MF_CHECKED
 );

695 ::
Levñ
 = 
∂y£¨ch
;

696 ::
	`PrötCurLevñ
();

698 ::
MaxLevñ
 = (
BYTE
)((
NewPlyDïth
 > 
MAXPLY
) ? MAXPLY : NewPlyDepth);

700 ::
	`Eº‹
("InvalidÅime. No change made.");

702 
dñëe
 
PlySórchDïth
;

703 
	}
}

705 
	gTChessWödow
::
	$IDMM©eSórch
–
RTMesßge
 )

707 if–::
Levñ
 !
m©e£¨ch
 ) {

708 
	`UnCheckLevñMíu
–
Levñ
 );

709 
	`CheckMíuIãm
–
hMíu
, 
IDM_MATE
, 
MF_CHECKED
 );

711 ::
Levñ
 = 
m©e£¨ch
;

712 ::
	`PrötCurLevñ
();

714 
	`CompuãrsTu∫
();

715 
	}
}

717 
	gTChessWödow
::
	$IDMSögÀPœyî
–
RTMesßge
 )

719 
	}
}

721 
TChessWödow
::
	$IDMTwoPœyî
–
RTMesßge
 )

723 
LEVELTYPE
 
OldLevñ
 = 
n‹mÆ
;

724 ::
Mu…iMove
 = !::MultiMove;

726 if–::
Mu…iMove
 ) {

727 
OldLevñ
 = ::
Levñ
;

729 
	`ModifyMíu
–
hMíu
, 
IDM_TWOPLAYER
, 
MF_BYCOMMAND
 | 
MF_STRING
, IDM_TWOPLAYER, "&Single Player" );

730 
	`E«bÀMíuIãm
–
hMíu
, 2, 
MF_GRAYED
 | 
MF_BYPOSITION
 );

731 
	`DøwMíuB¨
–
HWödow
 );

733 ::
Levñ
 = 
n‹mÆ
;

734 ::
	`PrötCurLevñ
();

736 
	`ModifyMíu
–
hMíu
, 
IDM_TWOPLAYER
, 
MF_BYCOMMAND
 | 
MF_STRING
, IDM_TWOPLAYER, "&Two Player" );

737 
	`E«bÀMíuIãm
–
hMíu
, 2, 
MF_ENABLED
 | 
MF_BYPOSITION
 );

738 
	`DøwMíuB¨
–
HWödow
 );

740 ::
Levñ
 = 
OldLevñ
;

741 ::
	`PrötCurLevñ
();

743 
	}
}

745 
	gTChessWödow
::
	$IDMAutoPœy
–
RTMesßge
 )

747 
	}
}

749 
TChessWödow
::
	$IDMRevî£Bﬂrd
–
RTMesßge
 )

751 ::
Tu∫ed
 = !::Turned;

752 ::
	`PrötBﬂrd
();

753 
	}
}

755 
	gTChessWödow
::
	$UndoMove
–
RTMesßge
 )

757 if–
CompuãrThökög
 ) {

758 
MesßgeToPo°
 = 
CM_UNDO
;

762 if–!
	`Undo
() )

763 
	`E«bÀMíuIãm
–
hMíu
, 
CM_UNDO
, 
MF_BYCOMMAND
 | 
MF_DISABLED
 | 
MF_GRAYED
 );

765 
	`E«bÀMíuIãm
–
hMíu
, 
CM_REDO
, 
MF_BYCOMMAND
 | 
MF_ENABLED
 );

766 
CurPœyî
 = 
Pœyî
;

767 
CompuãrCﬁ‹
 = 
Oµ⁄ít
;

768 
	}
}

771 
	gTChessWödow
::
	$RedoUndo
–
RTMesßge
 )

773 if–
CompuãrThökög
 ) {

774 
MesßgeToPo°
 = 
CM_REDO
;

778 if–!
	`Redo
() )

779 
	`E«bÀMíuIãm
–
hMíu
, 
CM_REDO
, 
MF_BYCOMMAND
 | 
MF_DISABLED
 | 
MF_GRAYED
 );

781 
	`E«bÀMíuIãm
–
hMíu
, 
CM_UNDO
, 
MF_BYCOMMAND
 | 
MF_ENABLED
 );

782 
CurPœyî
 = 
Pœyî
;

783 
CompuãrCﬁ‹
 = 
Oµ⁄ít
;

784 
	}
}

787 
	gTChessWödow
::
	$UnCheckLevñMíu
–
LEVELTYPE
 
Àvñ
 )

789 
WORD
 
CheckIãm
 = 
IDM_EASY
;

791  
Àvñ
 ) {

792 
n‹mÆ
 : 
CheckIãm
 = 
IDM_MOVETIME
; ;

793 
fuŒgamëime
 : 
CheckIãm
 = 
IDM_TOTALTIME
; ;

794 
∂y£¨ch
 : 
CheckIãm
 = 
IDM_PLY
; ;

795 
ósygame
 : 
CheckIãm
 = 
IDM_EASY
; ;

796 
öföôe
 : 
CheckIãm
 = 
IDM_INFINITE
; ;

797 
m©e£¨ch
 : 
CheckIãm
 = 
IDM_MATE
; ;

798 
m©chög
 : 
CheckIãm
 = 
IDM_MATCHING
; ;

801 
	`CheckMíuIãm
–
hMíu
, 
CheckIãm
, 
MF_UNCHECKED
 );

802 
	}
}

804 
	gTChessWödow
::
	$CheckLevñMíu
–
LEVELTYPE
 
Àvñ
 )

806 
WORD
 
CheckIãm
 = 
IDM_EASY
;

808  
Àvñ
 ) {

809 
n‹mÆ
 : 
CheckIãm
 = 
IDM_MOVETIME
; ;

810 
fuŒgamëime
 : 
CheckIãm
 = 
IDM_TOTALTIME
; ;

811 
∂y£¨ch
 : 
CheckIãm
 = 
IDM_PLY
; ;

812 
ósygame
 : 
CheckIãm
 = 
IDM_EASY
; ;

813 
öföôe
 : 
CheckIãm
 = 
IDM_INFINITE
; ;

814 
m©e£¨ch
 : 
CheckIãm
 = 
IDM_MATE
; ;

815 
m©chög
 : 
CheckIãm
 = 
IDM_MATCHING
; ;

818 
	`CheckMíuIãm
–
hMíu
, 
CheckIãm
, 
MF_CHECKED
 );

819 
	}
}

822 
	gTChessWödow
::
	$IDMEasy
–
RTMesßge
 )

824 if–::
Levñ
 !
ósygame
 ) {

825 
	`UnCheckLevñMíu
(
Levñ
);

826 
	`CheckMíuIãm
(
hMíu
, 
IDM_EASY
, 
MF_CHECKED
);

829 ::
Levñ
 = 
ósygame
;

830 ::
AvîageTime
 = 5.;

831 ::
MaxLevñ
 = 
MAXPLY
;

832 ::
	`PrötCurLevñ
();

833 
	}
}

835 
	gTChessWödow
::
	$EndGame
()

837 if–
	`GëAµliˇti⁄
()->
	`ExecDülog
–
√w
 
	`TEndDülog
–
this
, 
SD_ENDGAMEDLG
, (
LPSTR
Ë
EndGameMesßge
ËË!
IDYES
 ) {

838 
	`Po°Mesßge
(
hWndMaö
, 
WM_COMMAND
, 
CM_EXIT
, 0L);

842 
GameOvî
 = 
FALSE
;

843 
	`Po°Mesßge
(
hWndMaö
, 
WM_COMMAND
, 
CM_FILENEW
, 0L);

845 
	}
}

847 
	gTChessWödow
::
	$IDMHöt
–
RTMesßge
 )

849 
	`FödHötMove
();

850 
	`ShowHöt
();

851 
	}
}

853 
	gTChessWödow
::
	$IDMPass
–
RTMesßge
 )

855 if–::
Lavñ
 =
ósygame
 )

856 
	`HideAâacks
();

858 
CurPœyî
 = 
Oµ⁄ít
;

859 
CompuãrCﬁ‹
 = 
Pœyî
;

860 
	`CompuãrsTu∫
();

861 
	}
}

863 
	gTChessWödow
::
	$IDMWhôeTu∫
–
RTMesßge
 )

865 
	`CheckMíuIãm
–
hEdôMíu
, 
IDM_BLACKTURN
, 
MF_UNCHECKED
 );

866 
	`CheckMíuIãm
–
hEdôMíu
, 
IDM_WHITETURN
, 
MF_CHECKED
 );

868 
CurPœyî
 = 
whôe
;

869 
CompuãrCﬁ‹
 = 
bœck
;

871 if–
CurPœyî
 !
Pœyî
 ) {

872 
Oµ⁄ít
 = 
CompuãrCﬁ‹
;

873 
Pœyî
 = 
ProgømCﬁ‹
 = 
CurPœyî
;

875 
	}
}

878 
	gTChessWödow
::
	$IDMBœckTu∫
–
RTMesßge
 )

880 
	`CheckMíuIãm
(
hEdôMíu
, 
IDM_BLACKTURN
, 
MF_CHECKED
);

881 
	`CheckMíuIãm
(
hEdôMíu
, 
IDM_WHITETURN
, 
MF_UNCHECKED
);

883 
CurPœyî
 = 
bœck
;

884 
CompuãrCﬁ‹
 = 
whôe
;

886 if–
CurPœyî
 !
Pœyî
 ) {

887 
Oµ⁄ít
 = 
CompuãrCﬁ‹
;

888 
Pœyî
 = 
ProgømCﬁ‹
 = 
CurPœyî
;

890 
	}
}

892 
	gTChessWödow
::
	$IDMCﬁ‹s
–
RTMesßge
 )

894 
	`GëAµliˇti⁄
()->
	`ExecDülog
–
√w
 
	`TCﬁ‹sDülog
(
this
, "ColorsDialog") );

896 
	`DñëeObje˘
–::
hWhôeBrush
 );

897 
	`DñëeObje˘
–::
hBœckBrush
 );

899 ::
hWhôeBrush
 = 
	`Cª©eSﬁidBrush
–
	`RGB
(
WhôeSqu¨eCﬁ‹s
[0], WhiteSquareColors[1], WhiteSquareColors[2]) );

900 ::
hBœckBrush
 = 
	`Cª©eSﬁidBrush
–
	`RGB
(
BœckSqu¨eCﬁ‹s
[0], BlackSquareColors[1], BlackSquareColors[2]) );

901 
	}
}

903 
	gTChessWödow
::
	$IDMPõ˚VÆues
–
RTMesßge
 )

905 
	`GëAµliˇti⁄
()->
	`ExecDülog
–
√w
 
	`TPõ˚VÆueDülog
–
this
, "PieceValueDlg" ) );

906 
	}
}

908 
	gTChessWödow
::
	$IDMBe°Löe
–
RTMesßge
 )

910 
ShowBe°Löe
 = !ShowBestLine;

912 if–!
ShowBe°Löe
 )

913 
TInfo
->
	`SëBe°LöeText
("");

915 
	`CheckMíuIãm
–
hMíu
, 
IDM_BESTLINE
, 
ShowBe°Löe
 ? 
MF_CHECKED
 : 
MF_UNCHECKED
 );

916 
	}
}

918 
	gTChessWödow
::
	$WMMou£Move
–
RTMesßge
 
msg
 )

920 if–
GŸSèπSqu¨e
 && 
Døggög
 )

921 
	`Døg
–
	`MAKEPOINT
(
msg
.
LP¨am
) );

922 
	}
}

924 
	gTChessWödow
::
	$IDMMou£Døg
–
RTMesßge
 )

926 
POINT
 
Poöt
;

928 if–!
Døggög
 && 
GŸSèπSqu¨e
 ) {

929 
	`DøwN‹mÆBôm≠
–
MoveSèπSqu¨e
 );

930 
	`GëCurs‹Pos
–&
Poöt
 );

931 
	`DøgSèπ
–
MoveSèπSqu¨e
, 
Poöt
 );

934 
Døggög
 = 
åue
;

935 
	`CheckMíuIãm
–
hMíu
, 
IDM_MOUSEDRAG
, 
MF_CHECKED
 );

936 
	`CheckMíuIãm
–
hMíu
, 
IDM_MOUSESELECT
, 
MF_UNCHECKED
 );

937 
	}
}

939 
	gTChessWödow
::
	$IDMMou£Sñe˘
–
RTMesßge
 )

941 
	`DøgEnd
–
åue
 );

942 
Døggög
 = 
Ál£
;

944 
	`CheckMíuIãm
–
hMíu
, 
IDM_MOUSEDRAG
, 
MF_UNCHECKED
 );

945 
	`CheckMíuIãm
–
hMíu
, 
IDM_MOUSESELECT
, 
MF_CHECKED
 );

947 if–
GŸSèπSqu¨e
 )

948 
	`DøwInvîãdBôm≠
–
MoveSèπSqu¨e
 );

949 
	}
}

951 
	gTChessWödow
::
	$IDMSound
–
RTMesßge
 )

953 
SoundOn
 = !SoundOn;

955 
	`CheckMíuIãm
(
hMíu
, 
IDM_SOUND
, 
SoundOn
 ? 
MF_CHECKED
 : 
MF_UNCHECKED
 );

956 
	}
}

958 
	gTChessWödow
::
	$WMTimî
–
RTMesßge
 )

960 
	`Di•œyTime
();

961 
	}
}

963 
boﬁ
 
	gTChessWödow
::
	$C™Clo£
()

965 if–
CompuãrThökög
 || 
AutoPœy
 ) {

966 
	`Po°Mesßge
(
HWödow
, 
WM_COMMAND
, 
CM_STOP
, 0L);

967 
	`Po°Mesßge
(
HWödow
, 
WM_COMMAND
, 
IDM_EXIT
, 0L);

968  
Ál£
;

971 
	`QuôProgøm
();

972  
åue
;

973 
	}
}

985 
PASCAL
 
	$WöMaö
–
HINSTANCE
 
hIn°™˚
, HINSTANCE 
hPªvIn°™˚
, 
LPSTR
 
ÕCmdLöe
, 
nCmdShow
 )

987 
TChess
 
	`ChessAµ
("ChessAµ", 
hIn°™˚
, 
hPªvIn°™˚
, 
ÕCmdLöe
, 
nCmdShow
);

988 
ChessAµ
.
	`Run
();

989  
ChessAµ
.
Sètus
;

990 
	}
}

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/wchess.h

3 #i‚de‡
__WCHESS_H


4 
	#__WCHESS_H


	)

6 
	#IDM_BEGIN
 24350

	)

7 
	#IDM_MOVEPIECE
 24350

	)

8 
	#IDM_MOVETIME
 24351

	)

9 
	#IDM_TOTALTIME
 24352

	)

10 
	#IDM_DEMO
 24353

	)

11 
	#IDM_INFINITE
 24354

	)

12 
	#IDM_PLY
 24355

	)

13 
	#IDM_MATE
 24356

	)

14 
	#IDM_SINGLE
 24357

	)

15 
	#IDM_TWOPLAYER
 24358

	)

16 
	#IDM_AUTO
 24359

	)

17 
	#IDM_REVERSE
 24360

	)

18 
	#CM_UNDO
 24361

	)

19 
	#CM_REDO
 24362

	)

20 
	#CM_STOP
 24363

	)

21 
	#IDM_EASY
 24364

	)

22 
	#IDM_HINT
 24365

	)

23 
	#IDM_PASS
 24366

	)

24 
	#IDM_EXIT
 24371

	)

25 
	#IDM_MATCHING
 24372

	)

26 
	#IDM_WHITETURN
 24373

	)

27 
	#IDM_BLACKTURN
 24374

	)

28 
	#IDM_COLORS
 24375

	)

29 
	#IDM_BESTLINE
 24376

	)

30 
	#IDM_MOUSEDRAG
 24377

	)

31 
	#IDM_MOUSESELECT
 24378

	)

32 
	#IDM_PIECEVALUES
 24379

	)

33 
	#IDM_SOUND
 24380

	)

35 
	#EM_ERROR
 24344

	)

36 
	#EM_CANCEL
 24346

	)

37 
	#EM_CLEAR
 24347

	)

38 
	#EM_DONE
 24348

	)

39 
	#SD_ENDGAMEDLG
 24349

	)

40 
	#SD_CHESSERROR
 24345

	)

42 
	#IDD_WRED
 24854

	)

43 
	#IDD_WGREEN
 24855

	)

44 
	#IDD_WBLUE
 24856

	)

45 
	#IDD_WEDITRED
 24857

	)

46 
	#IDD_WEDITGREEN
 24858

	)

47 
	#IDD_WEDITBLUE
 24859

	)

48 
	#IDD_BRED
 24860

	)

49 
	#IDD_BGREEN
 24861

	)

50 
	#IDD_BBLUE
 24862

	)

51 
	#IDD_BEDITRED
 24863

	)

52 
	#IDD_BEDITGREEN
 24864

	)

53 
	#IDD_BEDITBLUE
 24865

	)

54 
	#IDD_BLACKCOLOR
 24866

	)

55 
	#IDD_WHITECOLOR
 24867

	)

57 
	#IDD_QUEEN
 24868

	)

58 
	#IDD_ROOK
 24869

	)

59 
	#IDD_BISHOP
 24870

	)

60 
	#IDD_KNIGHT
 24871

	)

61 
	#IDD_PAWN
 24872

	)

62 
	#IDD_EQUEEN
 24873

	)

63 
	#IDD_EROOK
 24874

	)

64 
	#IDD_EBISHOP
 24875

	)

65 
	#IDD_EKNIGHT
 24876

	)

66 
	#IDD_EPAWN
 24877

	)

67 
	#IDD_DEFAULT
 201

	)

69 
	#TIMEID
 202

	)

	@/home/alwin/Documents/Programming/ChessStuff/Borland5/wchess.rc

3 
	~<wödows.h
>

4 
	~<owÃc.h
>

5 
	~<bwcc.h
>

6 
	~"wchess.h
"

8 
ChessIc⁄
 
ICON
 
	gchess
.
ico


10 
BPawnBmp
 
BITMAP
 
	gb∑wn
.
bmp


11 
BRookBmp
 
BITMAP
 
	gbrook
.
bmp


12 
BKnightBmp
 
BITMAP
 
	gbkngt
.
bmp


13 
BBish›Bmp
 
BITMAP
 
	gbbish›
.
bmp


14 
BQuìnBmp
 
BITMAP
 
	gbquìn
.
bmp


15 
BKögBmp
 
BITMAP
 
	gbkög
.
bmp


17 
WPawnBmp
 
BITMAP
 
	gw∑wn
.
bmp


18 
WRookBmp
 
BITMAP
 
	gwrook
.
bmp


19 
WKnightBmp
 
BITMAP
 
	gwkngt
.
bmp


20 
WBish›Bmp
 
BITMAP
 
	gwbish›
.
bmp


21 
WQuìnBmp
 
BITMAP
 
	gwquìn
.
bmp


22 
WKögBmp
 
BITMAP
 
	gwkög
.
bmp


24 
PMaskBmp
 
BITMAP
 
	gpmask
.
bmp


25 
RMaskBmp
 
BITMAP
 
	grmask
.
bmp


26 
KTMaskBmp
 
BITMAP
 
	gktmask
.
bmp


27 
BMaskBmp
 
BITMAP
 
	gbmask
.
bmp


28 
QMaskBmp
 
BITMAP
 
	gqmask
.
bmp


29 
KMaskBmp
 
BITMAP
 
	gkmask
.
bmp


32 
BKBrushBmp
 
BITMAP
 
	gbkbrush
.
bmp


34 
TChessMíu
 
MENU
 
LOADONCALL
 
MOVEABLE
 
PURE
 
DISCARDABLE


35 
BEGIN


36 
	gPOPUP
 "&Game"

37 
BEGIN


38 
	gMíuIãm
 "&New", 
CM_FILENEW


39 
	gMíuIãm
 "&Re°‹e...", 
CM_FILEOPEN


40 
	gMíuIãm
 "&Save", 
CM_FILESAVE


41 
	gMíuIãm
 "Savê&as...", 
CM_FILESAVEAS


42 
MíuIãm
 
SEPARATOR


43 
	gMíuIãm
 "E&xô", 
IDM_EXIT


44 
MíuIãm
 
SEPARATOR


45 
	gMíuIãm
 "&Pœy", 
IDM_PASS


46 
	gMíuIãm
 "&Höt", 
IDM_HINT


47 
END


48 
	gPOPUP
 "&Edit"

49 
BEGIN


50 
	gMíuIãm
 "&Undo\aALT+BkSp", 
	gCM_UNDO
, 
GRAYED


51 
	gMíuIãm
 "&Redo\aCTRL+BkSp", 
	gCM_REDO
, 
GRAYED


52 
MíuIãm
 
SEPARATOR


53 
	gMíuIãm
 "&Aº™ge", 
IDM_MOVEPIECE


54 
END


55 
	gPOPUP
 "&Level"

56 
BEGIN


57 
	gMíuIãm
 "&Easy", 
IDM_EASY


58 
	gMíuIãm
 "&Timê≥∏move...", 
IDM_MOVETIME


59 
	gMíuIãm
 "T&ŸÆ Time...", 
IDM_TOTALTIME


60 
	gMíuIãm
 "&M©chög", 
IDM_MATCHING


61 
	gMíuIãm
 "&Inföôe", 
IDM_INFINITE


62 
	gMíuIãm
 "&PlySórch...", 
IDM_PLY


63 
	gMíuIãm
 "M&©eSórch", 
IDM_MATE


64 
END


65 
	gPOPUP
 "&Options"

66 
BEGIN


67 
	gMíuIãm
 "&Twÿ∂ayî", 
IDM_TWOPLAYER


68 
	gMíuIãm
 "&Demÿmode", 
IDM_DEMO


69 
	gMíuIãm
 "&Põ˚ VÆues...", 
IDM_PIECEVALUES


70 
MíuIãm
 
SEPARATOR


71 
	gPOPUP
 "&Movement"

72 
BEGIN


73 
	gMíuIãm
 "&Døg", 
	gIDM_MOUSEDRAG
, 
CHECKED


74 
	gMíuIãm
 "&Sñe˘", 
IDM_MOUSESELECT


75 
END


76 
	gMíuIãm
 "&Sound", 
	gIDM_SOUND
, 
CHECKED


77 
END


78 
	gPOPUP
 "&Display"

79 
BEGIN


80 
	gMíuIãm
 "&Cﬁ‹s...", 
IDM_COLORS


81 
	gMíuIãm
 "&Revî£ bﬂrd", 
IDM_REVERSE


82 
	gMíuIãm
 "&Show Be°Löe", 
	gIDM_BESTLINE
, 
CHECKED


83 
END


84 
END


87 
TChessThökMíu
 
MENU
 
LOADONCALL
 
MOVEABLE
 
PURE
 
DISCARDABLE


88 
BEGIN


89 
	gMíuIãm
 "&St›", 
CM_STOP


90 
END


92 
TChessEdôMíu
 
MENU
 
LOADONCALL
 
MOVEABLE
 
PURE
 
DISCARDABLE


93 
BEGIN


94 
	gMíuIãm
 "&D⁄e", 
EM_DONE


95 
	gMíuIãm
 "&CÀ¨", 
EM_CLEAR


96 
	gPOPUP
 "&Turn"

97 
BEGIN


98 
	gMíuIãm
 "&Whôe", 
	gIDM_WHITETURN
, 
CHECKED


99 
	gMíuIãm
 "&Bœck", 
IDM_BLACKTURN


100 
END


101 
	gMíuIãm
 "C&™˚l", 
EM_CANCEL


102 
END


104 
ChessComm™ds
 
ACCELERATORS


105 
BEGIN


106 
	gVK_BACK
, 
	gCM_UNDO
, 
	gVIRTKEY
, 
ALT


107 
	gVK_F4
, 
	gCM_EXIT
, 
	gVIRTKEY
, 
ALT


108 
	gVK_BACK
, 
	gCM_REDO
, 
	gVIRTKEY
, 
CONTROL


109 
END


111 
About
 
	gDIALOG
 7, 22, 140, 96

112 
STYLE
 
	gDS_MODALFRAME
 | 
	gWS_POPUP
 | 
	gWS_CAPTION
 | 
WS_SYSMENU


113 
	gCLASS
 "BorDlg"

114 
	gCAPTION
 "About OWL Chess"

115 
BEGIN


116 
	gCONTROL
 "C›yrighà(CË1992", -1, "STATIC", 
	gSS_LEFT
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_GROUP
, 40, 42, 60, 8

117 
	gICON
 "ChessIcon", -1, 23, 23, 16, 16

118 
	gLTEXT
 "Object Windows ", -1, 43, 13, 54, 8

119 
	gCTEXT
 "CHESS", -1, 50, 23, 39, 8

120 
	gLTEXT
 "Borland International, Inc.", -1, 28, 51, 84, 8

121 
	gCONTROL
 "", 
	gIDOK
, "B‹Bä", 
	gWS_TABSTOP
, 54, 72, 32, 20

122 
	gCONTROL
 "", -1, "BorShade", 1, 17, 11, 105, 52

123 
	gCONTROL
 "", -1, "BorShade", 2, 0, 67, 141, 1

124 
END


127 
SD_FILEOPEN
 
	gDIALOG
 9, 29, 197, 150

128 
STYLE
 
	gWS_POPUP
 | 
	gWS_CAPTION
 | 
	gWS_SYSMENU
 | 
DS_MODALFRAME


129 
	gCLASS
 "BorDlg"

130 
	gCAPTION
 "Restore Game"

131 
BEGIN


132 
	gCONTROL
 "", -1, "BorShade", 1, 5, 4, 148, 18

133 
	gCONTROL
 "", -1, "BorShade", 1, 5, 57, 70, 89

134 
	gCONTROL
 "", -1, "BorShade", 1, 82, 57, 70, 89

135 
	gCONTROL
 "", -1, "B‹Shade", 
	gBSS_VDIP
, 156, 0, 1, 150

136 
	gLTEXT
 " File&name:", -1, 6, 8, 36, 10

137 
	gCONTROL
 "", 
	gID_FNAME
, "EDIT", 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_BORDER
 | 
	gWS_TABSTOP
 | 
	gES_AUTOHSCROLL
, 42, 7, 106, 12

138 
	gLTEXT
 " Directory:", -1, 5, 29, 37, 10

139 
	gLTEXT
 "", 
	gID_FPATH
, 42, 29, 110, 10

140 
	gLTEXT
 " &Files:", -1, 5, 47, 69, 10

141 
	gCONTROL
 "", 
	gID_FLIST
, "LISTBOX", 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_TABSTOP
 | 
	gLBS_STANDARD
, 8, 61, 64, 82

142 
	gLTEXT
 " &Directories:", -1, 82, 47, 69, 10

143 
	gCONTROL
 "", 
	gID_DLIST
, "LISTBOX", 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_TABSTOP
 | 
	gLBS_STANDARD
, 85, 61, 64, 82

144 
	gCONTROL
 "&Ok", 
	gIDOK
, "B‹Bä", 
	gBS_DEFPUSHBUTTON
 | 
	gWS_TABSTOP
, 160, 4, 33, 21

145 
	gCONTROL
 "&C™˚l", 
	gIDCANCEL
, "B‹Bä", 
	gBS_PUSHBUTTON
 | 
	gWS_TABSTOP
, 160, 34, 33, 20

146 
END


149 
SD_FILESAVE
 
DIALOG
 
DISCARDABLE
 
LOADONCALL
 
PURE
 
	gMOVEABLE
 11, 25, 146, 144

150 
STYLE
 
	gWS_POPUP
 | 
	gWS_CAPTION
 | 
	gWS_SYSMENU
 | 
DS_MODALFRAME


151 
	gCLASS
 "BorDlg"

152 
	gCAPTION
 "Save Game As"

153 
BEGIN


154 
	gCONTROL
 "", -1, "BorShade", 1, 4, 53, 70, 89

155 
	gCONTROL
 "", -1, "BorShade", 1, 4, 4, 139, 18

156 
	gCONTROL
 "", -1, "B‹Shade", 
	gBSS_VDIP
, 82, 43, 1, 101

157 
	gCONTROL
 "", -1, "B‹Shade", 
	gBSS_HDIP
, 83, 43, 64, 1

158 
	gLTEXT
 " File&name:", -1, 5, 7, 36, 10

159 
	gCONTROL
 "", 
	gID_FNAME
, "EDIT", 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_BORDER
 | 
	gWS_TABSTOP
 | 
	gES_AUTOHSCROLL
, 40, 7, 98, 12

160 
	gLTEXT
 " Directory:", -1, 4, 27, 36, 10

161 
	gLTEXT
 "", 
	gID_FPATH
, 40, 27, 102, 10

162 
	gLTEXT
 " &Directories:", -1, 4, 43, 69, 10

163 
	gCONTROL
 "", 
	gID_DLIST
, "LISTBOX", 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_TABSTOP
 | 
	gLBS_STANDARD
, 7, 57, 64, 82

164 
	gCONTROL
 "Buâ⁄", 
	gIDOK
, "B‹Bä", 
	gBS_DEFPUSHBUTTON
 | 
	gWS_TABSTOP
, 97, 64, 36, 24

165 
	gCONTROL
 "&C™˚l", 
	gIDCANCEL
, "B‹Bä", 
	gBS_PUSHBUTTON
 | 
	gWS_TABSTOP
, 97, 99, 36, 24

166 
END


168 
SD_INPUTDIALOG
 
	gDIALOG
 6, 19, 180, 76

169 
STYLE
 
	gWS_POPUP
 | 
WS_CAPTION


170 
	gCLASS
 "BorDlg"

171 
BEGIN


172 
	gCONTROL
 "", -1, "BorShade", 1, 10, 23, 160, 18

173 
	gCONTROL
 "", -1, "BorShade", 2, 0, 45, 180, 1

174 
	gLTEXT
 "", 
	gID_PROMPT
, 10, 7, 159, 12

175 
	gCONTROL
 "", 
	gID_INPUT
, "EDIT", 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_BORDER
 | 
	gWS_TABSTOP
 | 
	gES_AUTOHSCROLL
, 13, 26, 154, 12

176 
	gCONTROL
 "&Ok", 
	gIDOK
, "B‹Bä", 
	gBS_DEFPUSHBUTTON
 | 
	gWS_TABSTOP
, 46, 50, 33, 21

177 
	gCONTROL
 "&C™˚l", 
	gIDCANCEL
, "B‹Bä", 
	gBS_PUSHBUTTON
 | 
	gWS_TABSTOP
, 97, 50, 33, 20

178 
END


180 
SD_ENDGAMEDLG
 
	gDIALOG
 19, 26, 142, 88

181 
	gCAPTION
 "OWL Chess"

182 
	gCLASS
 "bordlg"

183 
STYLE
 
	gDS_MODALFRAME
 | 
	gWS_POPUP
 | 
	gWS_CAPTION
 | 
WS_SYSMENU


184 
BEGIN


185 
	gCONTROL
 "", -1, "BorShade", 1, 11, 9, 120, 38

186 
	gCTEXT
 "", 
	gID_INPUT
, 18, 15, 106, 18

187 
	gCTEXT
 "Playágain?", -1, 36, 32, 70, 8

188 
	gCONTROL
 "", 
	gIDYES
, "B‹Bä", 
	gBS_DEFPUSHBUTTON
 | 
	gWS_TABSTOP
, 29, 62, 32, 20

189 
	gCONTROL
 "", 
	gIDNO
, "B‹Bä", 
	gBS_PUSHBUTTON
 | 
	gWS_TABSTOP
, 80, 62, 32, 20

190 
	gCONTROL
 "", -1, "BorShade", 2, 0, 55, 142, 1

191 
END


194 
SD_CHESSERROR
 
	gDIALOG
 18, 18, 140, 76

195 
	gCAPTION
 "OWL Chess Error"

196 
	gCLASS
 "BorDlg"

197 
STYLE
 
	gDS_MODALFRAME
 | 
	gWS_POPUP
 | 
	gWS_CAPTION
 | 
WS_SYSMENU


198 
BEGIN


199 
	gCONTROL
 "", -1, "B‹Shade", 1 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
, 9, 6, 122, 28

200 
	gCONTROL
 "Buâ⁄", 
	gIDOK
, "B‹Bä", 
	gBS_DEFPUSHBUTTON
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_TABSTOP
, 54, 50, 32, 20

201 
	gCONTROL
 "", -1, "B‹Shade", 2 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
, 1, 43, 141, 1

202 
	gCTEXT
 "", 
	gID_INPUT
, 13, 10, 114, 19, 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
WS_GROUP


203 
END


205 
Cﬁ‹sDülog
 
	gDIALOG
 10, 25, 219, 132

206 
	gCAPTION
 "Set Square Colors"

207 
	gCLASS
 "bordlg"

208 
STYLE
 
	gDS_MODALFRAME
 | 
	gWS_POPUP
 | 
	gWS_CAPTION
 | 
WS_SYSMENU


209 
BEGIN


210 
SCROLLBAR
 
	gIDD_WRED
, 17, 44, 9, 62, 
	gSBS_VERT
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_GROUP
 | 
WS_TABSTOP


211 
SCROLLBAR
 
	gIDD_WGREEN
, 41, 44, 9, 62, 
	gSBS_VERT
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
WS_TABSTOP


212 
SCROLLBAR
 
	gIDD_WBLUE
, 65, 45, 9, 61, 
	gSBS_VERT
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
WS_TABSTOP


213 
	gCONTROL
 "", -1, "B‹Shade", 1 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
, 7, 15, 79, 111

214 
EDITTEXT
 
	gIDD_WEDITRED
, 13, 110, 16, 12

215 
EDITTEXT
 
	gIDD_WEDITGREEN
, 37, 110, 16, 12

216 
EDITTEXT
 
	gIDD_WEDITBLUE
, 61, 110, 16, 12

217 
	gLTEXT
 " ""Whôe"" Squ¨e", -1, 7, 6, 78, 9, 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
WS_GROUP


218 
	gCONTROL
 "", -1, "B‹Shade", 1 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
, 93, 15, 79, 111

219 
	gLTEXT
 " ""Bœck"" Squ¨e", -1, 93, 6, 78, 9, 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
WS_GROUP


220 
SCROLLBAR
 
	gIDD_BRED
, 106, 44, 9, 62, 
	gSBS_VERT
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
WS_TABSTOP


221 
SCROLLBAR
 
	gIDD_BGREEN
, 129, 44, 9, 62, 
	gSBS_VERT
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
WS_TABSTOP


222 
SCROLLBAR
 
	gIDD_BBLUE
, 153, 44, 9, 62, 
	gSBS_VERT
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
WS_TABSTOP


223 
EDITTEXT
 
	gIDD_BEDITRED
, 102, 110, 16, 12

224 
EDITTEXT
 
	gIDD_BEDITGREEN
, 126, 110, 16, 12

225 
EDITTEXT
 
	gIDD_BEDITBLUE
, 150, 110, 16, 12

226 
	gCONTROL
 "Buâ⁄", 
	gIDOK
, "B‹Bä", 
	gBS_DEFPUSHBUTTON
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_TABSTOP
, 182, 31, 32, 20

227 
	gCONTROL
 "Buâ⁄", 
	gIDCANCEL
, "B‹Bä", 
	gBS_PUSHBUTTON
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_TABSTOP
, 182, 81, 32, 20

228 
	gCONTROL
 "Text", 
	gIDD_WHITECOLOR
, "BUTTON", 
	gBS_OWNERDRAW
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
, 35, 20, 20, 20

229 
	gCONTROL
 "Text", 
	gIDD_BLACKCOLOR
, "BUTTON", 
	gBS_OWNERDRAW
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
, 124, 20, 20, 20

230 
	gCONTROL
 "", -1, "B‹Shade", 3 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
, 177, 1, 1, 131

231 
END


234 
Põ˚VÆueDlg
 
	gDIALOG
 7, 24, 178, 93

235 
	gCAPTION
 "Piece Values"

236 
	gCLASS
 "BORDLG"

237 
STYLE
 
	gDS_MODALFRAME
 | 
	gWS_POPUP
 | 
	gWS_CAPTION
 | 
WS_SYSMENU


238 
BEGIN


239 
EDITTEXT
 
	gIDD_EQUEEN
, 6, 7, 19, 12

240 
EDITTEXT
 
	gIDD_EROOK
, 6, 24, 19, 12

241 
EDITTEXT
 
	gIDD_EBISHOP
, 6, 41, 19, 12

242 
EDITTEXT
 
	gIDD_EKNIGHT
, 6, 58, 19, 12

243 
EDITTEXT
 
	gIDD_EPAWN
, 6, 75, 19, 12

244 
	gLTEXT
 "Queen", -1, 28, 10, 31, 8

245 
	gLTEXT
 "Rook", -1, 28, 27, 30, 8

246 
	gLTEXT
 "Bishop", -1, 28, 44, 29, 8

247 
	gLTEXT
 "Knight", -1, 28, 61, 28, 8

248 
	gLTEXT
 "Pawn", -1, 28, 78, 28, 8

249 
SCROLLBAR
 
	gIDD_QUEEN
, 58, 9, 74, 9

250 
SCROLLBAR
 
	gIDD_ROOK
, 58, 26, 74, 9

251 
SCROLLBAR
 
	gIDD_BISHOP
, 58, 43, 74, 9

252 
SCROLLBAR
 
	gIDD_KNIGHT
, 58, 60, 74, 9

253 
SCROLLBAR
 
	gIDD_PAWN
, 58, 77, 74, 9

254 
	gCONTROL
 "", -1, "B‹Shade", 1 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
, 3, 4, 132, 86

255 
	gCONTROL
 "", -1, "B‹Shade", 3 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
, 138, -2, 1, 95

256 
	gCONTROL
 "Buâ⁄", 
	gIDOK
, "B‹Bä", 
	gBS_DEFPUSHBUTTON
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_TABSTOP
, 142, 7, 32, 20

257 
	gCONTROL
 "", 
	gIDCANCEL
, "B‹Bä", 
	gBS_PUSHBUTTON
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_TABSTOP
, 142, 65, 32, 20

258 
	gCONTROL
 "&DeÁu…", 
	gIDD_DEFAULT
, "B‹Bä", 
	gBS_PUSHBUTTON
 | 
	gWS_CHILD
 | 
	gWS_VISIBLE
 | 
	gWS_TABSTOP
, 142, 36, 32, 20

259 
	gEND


	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#__MATH_DECLARING_DOUBLE
 1

	)

81 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

82 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

83 
	~<bôs/m©hˇŒs.h
>

84 #unde‡
_MdoubÀ_


85 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


86 #unde‡
_MdoubÀ_END_NAMESPACE


87 #unde‡
__MATH_PRECNAME


88 #unde‡
__MATH_DECLARING_DOUBLE


90 #ifde‡
__USE_ISOC99


96 #i‚de‡
_MÊﬂt_


97 
	#_MÊﬂt_
 

	)

99 
	#_MdoubÀ_
 
_MÊﬂt_


	)

100 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

101 
	#__MATH_DECLARING_DOUBLE
 0

	)

102 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

103 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

104 
	~<bôs/m©hˇŒs.h
>

105 #unde‡
_MdoubÀ_


106 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


107 #unde‡
_MdoubÀ_END_NAMESPACE


108 #unde‡
__MATH_PRECNAME


109 #unde‡
__MATH_DECLARING_DOUBLE


111 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

112 || 
deföed
 
__LDBL_COMPAT
 \

113 || 
deföed
 
_LIBC_TEST


114 #ifde‡
__LDBL_COMPAT


116 #ifde‡
__USE_ISOC99


117 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

118 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

119 #ifde‡
__REDIRECT_NTH


120 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

121 
__∆dbl_√xâow¨df
)

122 
	`__©åibuã__
 ((
__c⁄°__
));

123 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

124 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

125 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

126 (
__x
, 
__y
),

127 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

131 #unde‡
__MATHDECL_1


132 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

133 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

134 
¨gs
, 
Æüs
)

	)

135 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

136 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

142 #i‚de‡
_Ml⁄g_doubÀ_


143 
	#_Ml⁄g_doubÀ_
 

	)

145 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

146 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

147 
	#__MATH_DECLARING_DOUBLE
 0

	)

148 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

149 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

150 
	#__MATH_DECLARE_LDOUBLE
 1

	)

151 
	~<bôs/m©hˇŒs.h
>

152 #unde‡
_MdoubÀ_


153 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


154 #unde‡
_MdoubÀ_END_NAMESPACE


155 #unde‡
__MATH_PRECNAME


156 #unde‡
__MATH_DECLARING_DOUBLE


161 #unde‡
__MATHDECL_1


162 #unde‡
__MATHDECL


163 #unde‡
__MATHCALL


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
signgam
;

173 #ifde‡
__USE_ISOC99


211 
FP_NAN
 =

212 
	#FP_NAN
 0

	)

213 
FP_NAN
,

214 
FP_INFINITE
 =

215 
	#FP_INFINITE
 1

	)

216 
FP_INFINITE
,

217 
FP_ZERO
 =

218 
	#FP_ZERO
 2

	)

219 
FP_ZERO
,

220 
FP_SUBNORMAL
 =

221 
	#FP_SUBNORMAL
 3

	)

222 
FP_SUBNORMAL
,

223 
FP_NORMAL
 =

224 
	#FP_NORMAL
 4

	)

225 
FP_NORMAL


233 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

234 && !
deföed
 
__OPTIMIZE_SIZE__


235 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

236 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

237 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


238 
	#Â˛assify
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

241 
	#Â˛assify
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__Â˛assifyf
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

249 #i‡
	`__GNUC_PREREQ
 (4,0)

250 
	#signbô
(
x
) \

251 ( (
x
) ==  () \

252 ? 
	`__buûtö_signbôf
 (
x
) \

253 :  (
x
) ==  () \

254 ? 
	`__buûtö_signbô
 (
x
Ë: 
	`__buûtö_signbôl
 (x))

	)

256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
	#signbô
(
x
) \

258 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

260 
	#signbô
(
x
) \

261 ( (
x
) ==  () \

262 ? 
	`__signbôf
 (
x
) \

263 :  (
x
) ==  () \

264 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

269 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


270 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

271 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


272 
	#isföôe
(
x
) \

273 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

275 
	#isföôe
(
x
) \

276 ( (
x
) ==  () \

277 ? 
	`__föôef
 (
x
) \

278 :  (
x
) ==  () \

279 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

283 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


284 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

286 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

291 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


292 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

293 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


294 
	#i¢™
(
x
) \

295 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

297 
	#i¢™
(
x
) \

298 ( (
x
) ==  () \

299 ? 
	`__i¢™f
 (
x
) \

300 :  (
x
) ==  () \

301 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

305 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


306 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

307 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


308 
	#isöf
(
x
) \

309 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

311 
	#isöf
(
x
) \

312 ( (
x
) ==  () \

313 ? 
	`__isöff
 (
x
) \

314 :  (
x
) ==  () \

315 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

319 
	#MATH_ERRNO
 1

	)

320 
	#MATH_ERREXCEPT
 2

	)

325 #i‚de‡
__FAST_MATH__


326 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

331 #ifde‡
__USE_GNU


333 #ifde‡
__NO_LONG_DOUBLE_MATH


334 
	#issig«lög
(
x
) \

335 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

337 
	#issig«lög
(
x
) \

338 ( (
x
) ==  () \

339 ? 
	`__issig«lögf
 (
x
) \

340 :  (
x
) ==  () \

341 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

345 #ifdef 
__USE_MISC


349 
_IEEE_
 = -1,

350 
_SVID_
,

351 
_XOPEN_
,

352 
_POSIX_
,

353 
_ISOC_


354 } 
	t_LIB_VERSION_TYPE
;

359 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

363 #ifde‡
__USE_MISC


369 #ifde‡
__˝lu•lus


370 
__ex˚±i⁄


372 
ex˚±i⁄


375 
ty≥
;

376 *
«me
;

377 
¨g1
;

378 
¨g2
;

379 
ªtvÆ
;

380 
	}
};

382 #ifde‡
__˝lu•lus


383 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

385 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

388 
	#X_TLOSS
 1.41484755040568800000e+16

	)

391 
	#DOMAIN
 1

	)

392 
	#SING
 2

	)

393 
	#OVERFLOW
 3

	)

394 
	#UNDERFLOW
 4

	)

395 
	#TLOSS
 5

	)

396 
	#PLOSS
 6

	)

399 
	#HUGE
 3.40282347e+38F

	)

403 #ifde‡
__USE_XOPEN


405 
	#MAXFLOAT
 3.40282347e+38F

	)

412 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


413 
	#M_E
 2.7182818284590452354

	)

414 
	#M_LOG2E
 1.4426950408889634074

	)

415 
	#M_LOG10E
 0.43429448190325182765

	)

416 
	#M_LN2
 0.69314718055994530942

	)

417 
	#M_LN10
 2.30258509299404568402

	)

418 
	#M_PI
 3.14159265358979323846

	)

419 
	#M_PI_2
 1.57079632679489661923

	)

420 
	#M_PI_4
 0.78539816339744830962

	)

421 
	#M_1_PI
 0.31830988618379067154

	)

422 
	#M_2_PI
 0.63661977236758134308

	)

423 
	#M_2_SQRTPI
 1.12837916709551257390

	)

424 
	#M_SQRT2
 1.41421356237309504880

	)

425 
	#M_SQRT1_2
 0.70710678118654752440

	)

431 #ifde‡
__USE_GNU


432 
	#M_El
 2.718281828459045235360287471352662498L

	)

433 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

434 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

435 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

436 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

437 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

438 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

439 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

440 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

441 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

442 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

443 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

444 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

451 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


452 
	#__NO_MATH_INLINES
 1

	)

455 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

462 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

463 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

464 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

465 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

466 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

467 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

471 #ifde‡
__USE_EXTERN_INLINES


472 
	~<bôs/m©hölöe.h
>

477 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

478 
	~<bôs/m©h-föôe.h
>

481 #ifde‡
__USE_ISOC99


485 #i‚de‡
isgª©î


486 
	#isgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

493 #i‚de‡
isgª©îequÆ


494 
	#isgª©îequÆ
(
x
, 
y
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

497 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

501 #i‚de‡
i¶ess


502 
	#i¶ess
(
x
, 
y
) \

503 (
__exãnsi⁄__
 \

504 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

505 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

509 #i‚de‡
i¶es£quÆ


510 
	#i¶es£quÆ
(
x
, 
y
) \

511 (
__exãnsi⁄__
 \

512 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

513 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

517 #i‚de‡
i¶essgª©î


518 
	#i¶essgª©î
(
x
, 
y
) \

519 (
__exãnsi⁄__
 \

520 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

521 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

525 #i‚de‡
isun‹dîed


526 
	#isun‹dîed
(
u
, 
v
) \

527 (
__exãnsi⁄__
 \

528 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

529 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

534 
	g__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@colors.h

3 #i‚de‡
__COLORS_H


4 
	#__COLORS_H


	)

6 
	#CL_KILLFOCUS
 (
WM_USER
 + 101)

	)

8 
	$_CLASSDEF
(
TCﬁ‹sDülog
)

10 ˛as†
	cTCﬁ‹sDülog
 : 
public
 
TDülog


12 
public
:

13 
	`TCﬁ‹sDülog
–
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
AName
 );

14 ~
	`TCﬁ‹sDülog
();

16 
vútuÆ
 
	`SëupWödow
();

17 
vútuÆ
 
	`WMC⁄åﬁCﬁ‹
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
WM_CTLCOLOR
 ];

18 
vútuÆ
 
	`WMVS¸ﬁl
–
RTMesßge
 );

19 
vútuÆ
 
	`WMComm™d
–
RTMesßge
 );

20 
vútuÆ
 
	`WMDøwIãm
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
WM_DRAWITEM
 ];

21 
vútuÆ
 
	`Ok
–
RTMesßge
 );

22 
vútuÆ
 
	`CLKûlFocus
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
CL_KILLFOCUS
 ];

24 
¥iv©e
:

25 
	eS¸ﬁlB¨Cﬁ‹s
 { 
Red
, 
Gªí
, 
Blue
 };

27 
HBRUSH
 
hWSètic
, 
hBSètic
, 
hSBBrush
[3];

28 
RWID
, 
GWID
, 
BWID
, 
RBID
, 
GBID
, 
BBID
;

29 
WSètic
, 
BSètic
;

30 
HWND
 
BœckSq
, 
WhôeSq
;

31 
BYTE
 
WSqCﬁ‹s
[3];

32 
BYTE
 
BSqCﬁ‹s
[3];

34 
	`CLSëFocus
(
HWND
);

35 
BOOL
 
	`GëCﬁ‹VÆue
(
WORD
);

36 
	}
};

	@edit.h

3 #i‚de‡
_EDITBAR_H


4 
	#_EDITBAR_H


	)

6 
	$_CLASSDEF
(
TEdôB¨Wödow
)

8 ˛as†
	cTEdôB¨Wödow
: 
public
 
TWödow


10 
public
:

11 
	`TEdôB¨Wödow
–
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
ATôÀ
 );

13 
vútuÆ
 
	`Paöt
–
HDC
 
PaötDC
, 
PAINTSTRUCT
 
_FAR
 & 
PaötInfo
 );

14 
vútuÆ
 
	`WMLBuâ⁄Up
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
WM_LBUTTONUP
 ];

16 
vútuÆ
 
	$GëWödowCœss
–
WNDCLASS
& 
WndCœss
 ) {

17 
TWödow
::
	`GëWödowCœss
–
WndCœss
 );

18 
WndCœss
.
hbrBackground
 = (
HBRUSH
)
	`GëStockObje˘
–
LTGRAY_BRUSH
 );

21 
	$GëSñe˘edIãm
(Ë{  
Sñe˘edIãm
; 
	}
}

23 
	g¥iv©e
:

24 
Sñe˘edIãm
;

25 
RECT
 
	gEdôB¨Re˘
;

	@externs.h

3 #i‚de‡
__EXTERNS_H


4 
	#__EXTERNS_H


	)

6 
	~"wcdefs.h
"

7 
	~"öfo.h
"

9 
COLORTYPE
 
Oµ⁄ít
;

10 
PIECETAB
 
Põ˚Tab
[][16];

11 
BOARDTYPE
 
Bﬂrd
[0x78];

12 
BYTE
 
WhôeSqu¨eCﬁ‹s
[];

13 
BYTE
 
BœckSqu¨eCﬁ‹s
[];

14 
buf
[];

16 
PTInfoWödow
 
TInfo
;

17 
HBRUSH
 
hBœckBrush
;

18 
HBRUSH
 
hWhôeBrush
;

19 
BOOL
 
ShowBe°Löe
;

20 
BOOL
 
Tu∫ed
;

21 
HWND
 
hWndMaö
;

22 
HBITMAP
 
Põ˚BmpAºay
[][2];

23 
HBITMAP
 
MaskAºay
[];

24 
LEVELTYPE
 
Levñ
;

25 
AvîageTime
;

26 
COLORTYPE
 
RunCﬁ‹
;

27 
BYTE
 
MaxLevñ
;

28 
COLORTYPE
 
CompuãrCﬁ‹
;

29 
BORDERSIZE
;

30 
CHARSIZE
;

31 
LINESIZE
;

32 
BOOL
 
Edôög
;

33 
COLORTYPE
 
Pœyî
;

34 
COLORTYPE
 
ProgømCﬁ‹
;

35 
MAXTYPE
 
MaöEvÆu
;

36 
PVTabÀ
[2][7][0x78];

37 
DúTab
[];

38 
KnightDú
[];

39 
PawnDú
[];

40 
DEPTHTYPE
 
Dïth
;

41 
INFOXSIZE
, 
INFOYSIZE
;

42 
Offi˚rNo
[];

43 
PawnNo
[];

44 
MOVETYPE
 *
MovTab
;

45 
MOVETYPE
 
ZîoMove
;

46 
Põ˚VÆue
[];

47 
CLOCKTYPE
 
ChessTime
[];

48 
BOOL
 
Mu…iMove
, 
AutoPœy
, 
SögÀSãp
;

49 
MoveNo
;

50 
CLOCKTYPE
 
ChessClock
;

51 
BOOL
 
A«lysis
, 
O∑n
;

52 
NODEVAL
 
Nodes
;

53 
CASTMOVETYPE
 
Ca°Move
[2][2];

54 
MAXTYPE
 
RoŸVÆue
;

55 
MOVETYPE
 
KeyMove
;

56 
BOARDIDTYPE
 
Di•œy
[];

57 
LINETYPE
 
HötLöe
;

58 
MAXTYPE
 
HötEvÆu
;

59 
MOVETYPE
 
Next
;

60 
MOVETYPE
 
PœyîMove
;

61 
BOOL
 
CompuãrThökög
;

62 
LINETYPE
 
MaöLöe
;

63 
MaxDïth
;

64 
HCURSOR
 
hWaôCurs‹
;

65 
HMENU
 
ThökMíu
;

66 
HMENU
 
MaöMíu
;

67 
BOOL
 
Ru¬ög
;

68 
BOOL
 
GŸVÆidMove
;

69 
BOOL
 
GameOvî
;

70 
EndGameMesßge
[];

71 
BOOL
 
NoCompuãrMove
;

72 
BOOL
 
SoundOn
;

73 
WORD
 
MesßgeToPo°
;

77 
GíCa°Squ¨e
(
SQUARETYPE
 
√w1
, SQUARETYPE *
ˇ°squ¨e
, SQUARETYPE *
c‹√rsqu¨e
);

78 
CÀ¨Bﬂrd
();

79 
Pîf‹m
(
MOVETYPE
 *, 
BOOL
);

80 
BOOL
 
EqMove
(
MOVETYPE
 *
a
, MOVETYPE *
b
);

81 
CÆcPõ˚Tab
();

82 
GíCa°Squ¨e
(
SQUARETYPE
, SQUARETYPE*, SQUARETYPE*);

87 
CÀ¨Di•œy
();

88 
CÀ¨Squ¨e
(
SQUARETYPE
 
squ¨e
);

89 
CÀ¨InfoWödow
();

90 
DøwFøme
(
HDC
, 
RECT
&, 
BOOL
=
FALSE
);

91 
POINT
 
GëSqu¨eXY
(
SQUARETYPE
);

92 
Eº‹
(*);

93 
Cﬁ‹ToPœy
(
COLORTYPE
);

94 
InôDi•œy
();

95 
PrötBe°Move
(
MOVETYPE
 *
maölöe
, 
MAXTYPE
 
maöevÆu
);

96 
PrötCurLevñ
();

97 
PrötNodes
(
NODEVAL
 *, );

98 
W¨nög
(*);

99 
PrötMove
(, 
COLORTYPE
, 
MOVETYPE
 *, );

100 
Upd©eBﬂrd
();

101 
CÀ¨Be°Löe
();

102 
O≥nögLibMsg
();

103 *
MoveSå
(
MOVETYPE
 *);

104 
CÀ¨Mesßge
();

105 
PrötBﬂrd
();

106 
SQUARETYPE
 
GëVÆidSqu¨e
(
POINT
, 
COLORTYPE
, 
BOOL
);

107 
DøwInvîãdBôm≠
(
SQUARETYPE
);

108 
DøwN‹mÆBôm≠
(
SQUARETYPE
);

109 
HideAâacks
();

110 
Mesßge
(*);

113 
DøgSèπ
(
SQUARETYPE
, 
POINT
&);

114 
DøgEnd
(
BOOL
);

115 
Døg
(
POINT
&);

116 
SlidePõ˚
(
SQUARETYPE
, SQUARETYPE);

121 
CÆcPVTabÀ
();

122 
SètEvÆu
(
MOVETYPE
 *
move
);

127 
Aâacks
(
COLORTYPE
 
acﬁ‹
, 
SQUARETYPE
 
squ¨e
);

128 
Põ˚Aâacks
(
PIECETYPE
, 
COLORTYPE
, 
SQUARETYPE
, SQUARETYPE);

129 
CÆcCa°lög
(
COLORTYPE
 
öcﬁ‹
, 
CASTDIRTYPE
 *
ˇ°
);

130 
CÆcAâackTab
();

131 
FIFTYTYPE
 
Fi·yMoveC¡
();

132 
REPEATTYPE
 
Rïëôi⁄
(
immedüã
);

133 
KûlMovGí
(
MOVETYPE
 *
move
);

134 
InôMovGí
();

135 
MovGí
();

140 
SaveGame
(*
ßvefûe
);

141 
Re°‹eGame
(*);

144 
FödMove
(
maxÀvñ
);

147 
InôNode
(
NODEVAL
*);

148 
TakeBackMove
(
MOVETYPE
 *
move
);

149 
MakeMove
(
MOVETYPE
 *);

150 
IncNode
(
NODEVAL
 *
nodes
);

151 
E¡îKeyMove
();

152 
SèπA«lysis
();

153 
Re£tMoves
();

154 
InôChessTime
();

155 
CÀ¨Höt
();

156 
Adju°Moves
();

157 
E¡îMove
(
MOVETYPE
 *
move
);

158 
FœshMove
(
MOVETYPE
 *
move
);

159 
St‹eMoves
();

160 
ShowHöt
();

161 
BOOL
 
MoveCheck
(
SQUARETYPE
, SQUARETYPE);

162 
DoSlideMove
(
MOVETYPE
&);

165 
Re£tNewPos
();

166 
NewGame
();

167 
In£πPõ˚
(
PIECETYPE
 
p
, 
COLORTYPE
 
c
, 
SQUARETYPE
 
sq
);

168 
CÀ¨PVTabÀ
();

169 
BOOL
 
Undo
();

170 
BOOL
 
Redo
();

171 
FödHötMove
();

172 
TÆk
();

173 
ProgømMove
();

174 
QuôProgøm
();

177 
InôTime
(
CLOCKTYPE
 *
˛ock
);

178 
SèπTime
(
CLOCKTYPE
 *);

179 
St›Time
(
CLOCKTYPE
 *);

180 
Di•œyTime
();

	@info.h

3 #i‚de‡
_INFO_H


4 
	#_INFO_H


	)

6 
	~<°rög.h
>

8 
	$_CLASSDEF
(
TNoEø£BkGndSètic
)

9 ˛as†
	cTNoEø£BkGndSètic
 : 
public
 
TSètic


11 
public
:

12 
	`TNoEø£BkGndSètic
–
PTWödows
 
AP¨ít
, 
AnId
, 
LPSTR
 
ATôÀ
, 
X
, 
Y
, 
W
, 
H
, 
WORD
 
ATextLí
, 
PTModuÀ
 
AModuÀ
 = 
NULL
 );

14 
vútuÆ
 
	`WMEø£BkGnd
–
RTMesßge
 
msg
 ) = [ 
WM_FIRST
 + 
WM_ERASEBKGND
 ];

16 
	$SëText
–
LPSTR
 
ãxt
 )

18 
¥iv©e
:

19 
boﬁ
 
DoEø£
;

20 
La°Lí
;

23 
	$_CLASSDEF
(
TInfoWödow
)

24 ˛as†
	cTInfoWödow
: 
public
 
TWödow


26 
¥iv©e
:

27 
PTSètic
 
Cﬁ‹
;

28 
PTSètic
 
WhôeInfo
;

29 
PTSètic
 
BœckInfo
;

30 
PTNoEø£BkGndSètic
 
Timî
;

31 
PTSètic
 
Levñ
;

32 
PTSètic
 
Iãøti⁄
;

33 
PTSètic
 
VÆue
;

34 
PTSètic
 
Nodes
;

35 
PTSètic
 
Sec⁄ds
;

36 
PTNoEø£BkGndSètic
 
Dïth
;

37 
PTSètic
 
Be°Löe
;

38 
PTSètic
 
Mesßge
;

39 
RECT
 
InfoRe˘
;

41 
	`DøwSFøme
–
HDC
, 
RECT
 * );

42 
	`DøwSèticFømes
–
HDC
 );

44 
public
:

45 
	`TInfoWödow
(
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
ATôÀ
);

47 
	$SëTu∫Text
–
LPSTR
 
ãxt
 ) { 
Cﬁ‹
->
	`SëText
(Åext ); }

48 
	$SëWhôeInfoText
–
LPSTR
 
ãxt
 ) { 
WhôeInfo
->
	`SëText
–ãxà); 
	}
}

49 
	$SëBœckInfoText
–
LPSTR
 
ãxt
 ) { 
BœckInfo
->
	`SëText
–ãxà); 
	}
}

50 
	$SëTimîText
–
LPSTR
 
ãxt
 ) { 
Timî
->
	`SëText
–ãxà); 
	}
}

51 
	$SëLevñText
–
LPSTR
 
ãxt
 ) { 
Levñ
->
	`SëText
–ãxà); 
	}
}

52 
	$SëIãøti⁄Text
–
LPSTR
 
ãxt
 ) { 
Iãøti⁄
->
	`SëText
–ãxà); 
	}
}

53 
	$SëVÆueText
–
LPSTR
 
ãxt
 ) { 
VÆue
->
	`SëText
–ãxà); 
	}
}

54 
	$SëNodeText
–
LPSTR
 
ãxt
 ) { 
Nodes
->
	`SëText
–ãxà); 
	}
}

55 
	$SëSec⁄dsText
–
LPSTR
 
ãxt
 ) { 
Sec⁄ds
->
	`SëText
–ãxà); 
	}
}

56 
	$SëDïthText
–
LPSTR
 
ãxt
 ) { 
Dïth
->
	`SëText
–ãxà); 
	}
}

57 
	$SëBe°LöeText
–
LPSTR
 
ãxt
 ) { 
Be°Löe
->
	`SëText
–ãxà); 
	}
}

58 
	$SëMesßgeText
–
LPSTR
 
ãxt
 ) { 
Mesßge
->
	`SëText
–ãxà); 
	}
}

60 
vútuÆ
 
Paöt
–
HDC
 
PaötDC
, 
PAINTSTRUCT
 
_FAR
 & 
PaötInfo
 );

61 
vútuÆ
 
WMC⁄åﬁCﬁ‹
–
RTMesßge
 
Msg
 ) = [ 
WM_FIRST
 + 
WM_CTLCOLOR
 ];

63 
DøwInfoFøme
(
HDC
);

64 
Re£t
();

65 
IãrRe£t
();

	@pvalue.h

3 #i‚de‡
__PVALUE_H


4 
	#__PVALUE_H


	)

6 
	#PV_KILLFOCUS
 (
WM_USER
 + 100)

	)

8 
	$_CLASSDEF
(
TPõ˚VÆueDülog
)

10 ˛as†
	cTPõ˚VÆueDülog
 : 
public
 
TDülog


12 
public
:

13 
	`TPõ˚VÆueDülog
–
PTWödowsObje˘
 
AP¨ít
, 
LPSTR
 
AName
 );

15 
vútuÆ
 
	`SëupWödow
();

16 
vútuÆ
 
	`PVKûlFocus
–
RTMesßge
 ) = [ 
WM_FIRST
 + 
PV_KILLFOCUS
 ];

17 
vútuÆ
 
	`Ok
–
RTMesßge
 );

18 
vútuÆ
 
	`WMHS¸ﬁl
–
RTMesßge
 );

19 
vútuÆ
 
	`WMComm™d
–
RTMesßge
 );

20 
vútuÆ
 
	`IDDDeÁu…
–
RTMesßge
 ) = [ 
ID_FIRST
 + 
IDD_DEFAULT
 ];

22 
¥Ÿe˘ed
:

23 
VÆues
[5];

24 
	`PVSëFocus
(
HWND
);

25 
BOOL
 
	`GëCﬁ‹VÆue
(
WORD
);

	@wcdefs.h

3 #i‚de‡
__WCDEFS_H


4 
	#__WCDEFS_H


	)

9 c⁄° 
	gBACK
 = -104;

10 c⁄° 
	gMAXPLY
 = 23;

11 c⁄° 
	gLOSEVALUE
 = 0x7D00;

12 c⁄° 
	gMATEVALUE
 = 0x7C80;

13 c⁄° 
	gDEPTHFACTOR
 = 0x80;

14 c⁄° 
	gCOMMANDLENGTH
 = 10;

15 c⁄° 
	gMAXLEN
 = 64;

16 c⁄° 
	gSQUARE_SIZE
 = 36;

17 c⁄° 
	gMAXBDSIZE
 = 8;

18 c⁄° 
	gMYFRAMESIZE
 = 3;

19 c⁄° 
	gMAXINT
 = 32767;

24 
	tMAXTYPE
;

25 
	tINDEXTYPE
;

26 
	tSQUARETYPE
;

27 
	tEDGESQUARETYPE
;

28 
	tDEPTHTYPE
;

29 *
	tLIBTYPE
;

30 
	tDIRTYPE
;

31 
	tSETOFPIECE
;

32 
	tFIFTYTYPE
;

33 
	tREPEATTYPE
;

34 
	tSTR80
[81];

35 
	tCOMMANDSTRING
[
COMMANDLENGTH
];

36 
	tSTR6
[6];

37 
	tMAXSTRING
[
MAXLEN
];

39 
MOVETYPE
 
	tLINETYPE
[
MAXPLY
];

41 
	ePIECETYPE
 { 
	mno_põ˚
, 
	mkög
, 
	mquìn
, 
	mrook
, 
	mbish›
, 
	mknight
, 
	m∑wn
 };

42 
	eCOLORTYPE
 { 
	mwhôe
, 
	mbœck
 };

43 
	eCASTTYPE
 { 
	mzîo
, 
	m g
, 
	mshπ
 };

44 
	eLEVELTYPE
 { 
	mn‹mÆ
, 
	mfuŒgamëime
, 
	mósygame
, 
	möföôe
, 
	m∂y£¨ch
, 
	mm©e£¨ch
, 
	mm©chög
 };

48 
	sMOVETYPE


50 
	m√w1
, 
	mﬁd
;

51 
	m•e
;

52 
PIECETYPE
 
	mmovpõ˚
, 
	mc⁄ã¡
;

55 
	sBOARDTYPE


57 
PIECETYPE
 
	mpõ˚
;

58 
COLORTYPE
 
	mcﬁ‹
;

59 
	mödex
;

60 
	m©ècked
;

63 
	sCLOCKTYPE


65 
	mhour
, 
	mmöuã
, 
	m£c⁄d
, 
	m£c100
;

66 
	mtŸÆhours
, 
	mtŸmö
, 
	mtŸÆ£cs
, 
	mtŸs100
;

67 
	mnumbî
;

68 
	mtŸÆtime
;

71 
	sNODEVAL


73 
	mnodeba£
;

74 
	mnodeoff£t
;

77 
	sTEXTCOLORTYPE


79 
	mbackground
;

80 
	mcﬁ‹
;

83 
	sSCREENPOSTYPE


85 
	mx
, 
	my
;

86 
	mbackground
, 
	mcﬁ‹
;

89 
	sBOARDIDTYPE


91 
PIECETYPE
 
	mpõ˚
;

92 
COLORTYPE
 
	mcﬁ‹
;

95 
	sPIECETAB


97 
SQUARETYPE
 
	misqu¨e
;

98 
PIECETYPE
 
	mùõ˚
;

102 
	sATTACKTABTYPE


104 
SETOFPIECE
 
	mpõ˚£t
;

105 
	mdúe˘i⁄
;

108 
	sCASTMOVETYPE


110 
SQUARETYPE
 
	mˇ°√w
;

111 
SQUARETYPE
 
	mˇ°ﬁd
;

	@wchess.h

3 #i‚de‡
__WCHESS_H


4 
	#__WCHESS_H


	)

6 
	#IDM_BEGIN
 24350

	)

7 
	#IDM_MOVEPIECE
 24350

	)

8 
	#IDM_MOVETIME
 24351

	)

9 
	#IDM_TOTALTIME
 24352

	)

10 
	#IDM_DEMO
 24353

	)

11 
	#IDM_INFINITE
 24354

	)

12 
	#IDM_PLY
 24355

	)

13 
	#IDM_MATE
 24356

	)

14 
	#IDM_SINGLE
 24357

	)

15 
	#IDM_TWOPLAYER
 24358

	)

16 
	#IDM_AUTO
 24359

	)

17 
	#IDM_REVERSE
 24360

	)

18 
	#CM_UNDO
 24361

	)

19 
	#CM_REDO
 24362

	)

20 
	#CM_STOP
 24363

	)

21 
	#IDM_EASY
 24364

	)

22 
	#IDM_HINT
 24365

	)

23 
	#IDM_PASS
 24366

	)

24 
	#IDM_EXIT
 24371

	)

25 
	#IDM_MATCHING
 24372

	)

26 
	#IDM_WHITETURN
 24373

	)

27 
	#IDM_BLACKTURN
 24374

	)

28 
	#IDM_COLORS
 24375

	)

29 
	#IDM_BESTLINE
 24376

	)

30 
	#IDM_MOUSEDRAG
 24377

	)

31 
	#IDM_MOUSESELECT
 24378

	)

32 
	#IDM_PIECEVALUES
 24379

	)

33 
	#IDM_SOUND
 24380

	)

35 
	#EM_ERROR
 24344

	)

36 
	#EM_CANCEL
 24346

	)

37 
	#EM_CLEAR
 24347

	)

38 
	#EM_DONE
 24348

	)

39 
	#SD_ENDGAMEDLG
 24349

	)

40 
	#SD_CHESSERROR
 24345

	)

42 
	#IDD_WRED
 24854

	)

43 
	#IDD_WGREEN
 24855

	)

44 
	#IDD_WBLUE
 24856

	)

45 
	#IDD_WEDITRED
 24857

	)

46 
	#IDD_WEDITGREEN
 24858

	)

47 
	#IDD_WEDITBLUE
 24859

	)

48 
	#IDD_BRED
 24860

	)

49 
	#IDD_BGREEN
 24861

	)

50 
	#IDD_BBLUE
 24862

	)

51 
	#IDD_BEDITRED
 24863

	)

52 
	#IDD_BEDITGREEN
 24864

	)

53 
	#IDD_BEDITBLUE
 24865

	)

54 
	#IDD_BLACKCOLOR
 24866

	)

55 
	#IDD_WHITECOLOR
 24867

	)

57 
	#IDD_QUEEN
 24868

	)

58 
	#IDD_ROOK
 24869

	)

59 
	#IDD_BISHOP
 24870

	)

60 
	#IDD_KNIGHT
 24871

	)

61 
	#IDD_PAWN
 24872

	)

62 
	#IDD_EQUEEN
 24873

	)

63 
	#IDD_EROOK
 24874

	)

64 
	#IDD_EBISHOP
 24875

	)

65 
	#IDD_EKNIGHT
 24876

	)

66 
	#IDD_EPAWN
 24877

	)

67 
	#IDD_DEFAULT
 201

	)

69 
	#TIMEID
 202

	)

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

26 #ñi‡
__GNUC_PREREQ
(2,96)

27 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

30 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

32 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

33 #ifde‡
__GNUC__


34 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

35 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

37 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

38 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 #ifde‡
__USE_ISOC99


26 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

27 #ifde‡
__MATH_DECLARE_LDOUBLE


28 #ifde‡
__NO_LONG_DOUBLE_MATH


29 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

31 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

36 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


38 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

40 #ifde‡
__USE_ISOC99


41 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

42 #ifde‡
__MATH_DECLARE_LDOUBLE


43 #ifde‡
__NO_LONG_DOUBLE_MATH


44 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

46 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

52 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

53 #ifde‡
__USE_ISOC99


54 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

55 #ifde‡
__MATH_DECLARE_LDOUBLE


56 #ifde‡
__NO_LONG_DOUBLE_MATH


57 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

59 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

65 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

66 #ifde‡
__USE_ISOC99


67 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

68 #ifde‡
__MATH_DECLARE_LDOUBLE


69 #ifde‡
__NO_LONG_DOUBLE_MATH


70 
__REDIRECT_NTH
 (
©™2l
, (, ),

71 
__©™2_föôe
);

73 
__REDIRECT_NTH
 (
©™2l
, (, ),

74 
__©™2l_föôe
);

79 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


81 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

83 #ifde‡
__USE_ISOC99


84 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

85 #ifde‡
__MATH_DECLARE_LDOUBLE


86 #ifde‡
__NO_LONG_DOUBLE_MATH


87 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

89 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

95 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

96 #ifde‡
__USE_ISOC99


97 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

102 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

108 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

109 #ifde‡
__USE_ISOC99


110 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

111 #ifde‡
__MATH_DECLARE_LDOUBLE


112 #ifde‡
__NO_LONG_DOUBLE_MATH


113 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

115 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

120 #ifde‡
__USE_GNU


122 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

123 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

124 #ifde‡
__MATH_DECLARE_LDOUBLE


125 #ifde‡
__NO_LONG_DOUBLE_MATH


126 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

128 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

133 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

134 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

135 #ifde‡
__MATH_DECLARE_LDOUBLE


136 #ifde‡
__NO_LONG_DOUBLE_MATH


137 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

139 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

144 #ifde‡
__USE_ISOC99


146 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

147 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

148 #ifde‡
__MATH_DECLARE_LDOUBLE


149 #ifde‡
__NO_LONG_DOUBLE_MATH


150 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

152 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

158 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

159 #ifde‡
__USE_ISOC99


160 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

161 #ifde‡
__MATH_DECLARE_LDOUBLE


162 #ifde‡
__NO_LONG_DOUBLE_MATH


163 
__REDIRECT_NTH
 (
fmodl
, (, ),

164 
__fmod_föôe
);

166 
__REDIRECT_NTH
 (
fmodl
, (, ),

167 
__fmodl_föôe
);

172 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


174 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

176 #ifde‡
__USE_ISOC99


177 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

178 #ifde‡
__MATH_DECLARE_LDOUBLE


179 #ifde‡
__NO_LONG_DOUBLE_MATH


180 
__REDIRECT_NTH
 (
hypŸl
, (, ),

181 
__hypŸ_föôe
);

183 
__REDIRECT_NTH
 (
hypŸl
, (, ),

184 
__hypŸl_föôe
);

189 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


191 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

193 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


194 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

195 #ifde‡
__MATH_DECLARE_LDOUBLE


196 #ifde‡
__NO_LONG_DOUBLE_MATH


197 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

199 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

204 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


206 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

208 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


209 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

210 #ifde‡
__MATH_DECLARE_LDOUBLE


211 #ifde‡
__NO_LONG_DOUBLE_MATH


212 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

214 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


221 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

223 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


224 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

225 #ifde‡
__MATH_DECLARE_LDOUBLE


226 #ifde‡
__NO_LONG_DOUBLE_MATH


227 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

229 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


236 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

238 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


239 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

240 #ifde‡
__MATH_DECLARE_LDOUBLE


241 #ifde‡
__NO_LONG_DOUBLE_MATH


242 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

244 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


251 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

253 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


254 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

255 #ifde‡
__MATH_DECLARE_LDOUBLE


256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

259 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

264 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


266 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

268 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


269 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

270 #ifde‡
__MATH_DECLARE_LDOUBLE


271 #ifde‡
__NO_LONG_DOUBLE_MATH


272 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

274 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

279 #ifde‡
__USE_MISC


281 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

282 #ifde‡
__USE_ISOC99


283 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

284 #ifde‡
__MATH_DECLARE_LDOUBLE


285 #ifde‡
__NO_LONG_DOUBLE_MATH


286 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

287 
__lgamma_r_föôe
);

289 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

290 
__lgammÆ_r_föôe
);

296 
__lgamma_r_föôe
 (, *);

297 
__lgammaf_r_föôe
 (, *);

298 #ifde‡
__NO_LONG_DOUBLE_MATH


299 
__REDIRECT_NTH
 (
__lgammÆ_r_föôe
, (, *),

300 
__lgamma_r_föôe
);

302 
__lgammÆ_r_föôe
 (, *);

305 #i‡((
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99
) \

306 && 
deföed
 
	g__exã∫_Æways_ölöe
)

308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

310 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


311  
	`__lgamma_r_föôe
 (
__d
, &
signgam
);

313 
__loˇl_signgam
 = 0;

314  
	`__lgamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

316 
	}
}

318 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


319 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

321 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


322  
	`__lgammaf_r_föôe
 (
__d
, &
signgam
);

324 
__loˇl_signgam
 = 0;

325  
	`__lgammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

327 
	}
}

328 #ifde‡
__MATH_DECLARE_LDOUBLE


329 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

331 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


332  
	`__lgammÆ_r_föôe
 (
__d
, &
signgam
);

334 
__loˇl_signgam
 = 0;

335  
	`__lgammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

337 
	}
}

341 #i‡((
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)) \

342 && 
deföed
 
	g__exã∫_Æways_ölöe
)

344 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

346  
	`__lgamma_r_föôe
 (
__d
, &
signgam
);

347 
	}
}

348 #ifde‡
__USE_ISOC99


349 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

351  
	`__lgammaf_r_föôe
 (
__d
, &
signgam
);

352 
	}
}

353 #ifde‡
__MATH_DECLARE_LDOUBLE


354 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

356  
	`__lgammÆ_r_föôe
 (
__d
, &
signgam
);

357 
	}
}

363 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

364 #ifde‡
__USE_ISOC99


365 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

366 #ifde‡
__MATH_DECLARE_LDOUBLE


367 #ifde‡
__NO_LONG_DOUBLE_MATH


368 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

370 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

376 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

377 #ifde‡
__USE_ISOC99


378 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

379 #ifde‡
__MATH_DECLARE_LDOUBLE


380 #ifde‡
__NO_LONG_DOUBLE_MATH


381 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

383 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

388 #ifde‡
__USE_ISOC99


390 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

391 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

396 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

402 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

403 #ifde‡
__USE_ISOC99


404 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

405 #ifde‡
__MATH_DECLARE_LDOUBLE


406 #ifde‡
__NO_LONG_DOUBLE_MATH


407 
__REDIRECT_NTH
 (
powl
, (, ),

408 
__pow_föôe
);

410 
__REDIRECT_NTH
 (
powl
, (, ),

411 
__powl_föôe
);

416 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


418 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

420 #ifde‡
__USE_ISOC99


421 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

422 #ifde‡
__MATH_DECLARE_LDOUBLE


423 #ifde‡
__NO_LONG_DOUBLE_MATH


424 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

425 
__ªmaödî_föôe
);

427 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

428 
__ªmaödîl_föôe
);

433 #i‡(
deföed
 
__USE_MISC
 \

434 || (
deföed
 
	g__USE_XOPEN_EXTENDED
 && !deföed 
	g__USE_XOPEN2K8
))

436 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

438 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


439 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

440 #ifde‡
__MATH_DECLARE_LDOUBLE


441 #ifde‡
__NO_LONG_DOUBLE_MATH


442 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

443 
__sˇlb_föôe
);

445 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

446 
__sˇlbl_föôe
);

452 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

453 #ifde‡
__USE_ISOC99


454 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

455 #ifde‡
__MATH_DECLARE_LDOUBLE


456 #ifde‡
__NO_LONG_DOUBLE_MATH


457 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

459 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

465 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

466 #ifde‡
__USE_ISOC99


467 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

468 #ifde‡
__MATH_DECLARE_LDOUBLE


469 #ifde‡
__NO_LONG_DOUBLE_MATH


470 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

472 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

477 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


479 
__gamma_r_föôe
 (, *);

480 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

482 
__loˇl_signgam
 = 0;

483 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

484  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

485 
	}
}

486 
__gammaf_r_föôe
 (, *);

487 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

489 
__loˇl_signgam
 = 0;

490 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

491  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

492 
	}
}

493 #ifde‡
__MATH_DECLARE_LDOUBLE


494 
__gammÆ_r_föôe
 (, *);

495 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

497 
__loˇl_signgam
 = 0;

498 #ifde‡
__NO_LONG_DOUBLE_MATH


499 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

501 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

503  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

504 
	}
}

	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL_VEC
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


199 #i‡(!
deföed
 
__˝lu•lus
 \

200 || 
	g__˝lu•lus
 < 201103L \

201 || 
	g__MATH_DECLARING_DOUBLE
 == 0)

204 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

211 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

215 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

218 #ifde‡
__USE_ISOC99


219 
__BEGIN_NAMESPACE_C99


221 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

222 
	g__END_NAMESPACE_C99


225 #ifde‡
__USE_ISOC99


226 
__BEGIN_NAMESPACE_C99


228 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

229 
	g__END_NAMESPACE_C99


234 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

236 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

237 #i‡(!
deföed
 
__˝lu•lus
 \

238 || 
	g__˝lu•lus
 < 201103L \

239 || 
	g__MATH_DECLARING_DOUBLE
 == 0)

241 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

245 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

247 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

248 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

249 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

250 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

256 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

260 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

261 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

262 
	g__END_NAMESPACE_C99


265 #ifde‡
__USE_ISOC99


266 
__BEGIN_NAMESPACE_C99


268 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

269 
	g__END_NAMESPACE_C99


272 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

274 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

277 #ifde‡
__USE_MISC


281 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

285 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


286 
__BEGIN_NAMESPACE_C99


289 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

292 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

293 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


294 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

298 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

309 #ifde‡
__USE_ISOC99


311 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

315 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

319 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

323 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

328 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

335 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

336 
__exãnsi⁄__


337 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

341 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

342 
__exãnsi⁄__


343 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

347 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

350 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

353 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

357 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

358 
__©åibuã__
 ((
__c⁄°__
));

361 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

362 
__©åibuã__
 ((
__c⁄°__
));

366 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

369 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


370 
	g__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


375 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

376 
__©åibuã__
 ((
__c⁄°__
));

379 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

380 && 
	g__MATH_DECLARING_DOUBLE
 \

381 && !
deföed
 
	g__USE_XOPEN2K8
)

383 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #ifde‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #ifde‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #ifde‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__exãnsi⁄__


202 
__MATH_INLINE
 

203 
__NTH
 (
	$Œrötf
 (
__x
))

205 
__ªs
;

210 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

213 
__exãnsi⁄__


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Œröt
 (
__x
))

217 
__ªs
;

222 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

223  
__ªs
;

224 
	}
}

227 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

228 && 
deföed
 
__SSE2_MATH__


230 
__MATH_INLINE
 

231 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

233 #ifde‡
__AVX__


234 
__ªs
;

235 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

236  
__ªs
;

238 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

239  
__x
;

241 
	}
}

242 
__MATH_INLINE
 

243 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

245 #ifde‡
__AVX__


246 
__ªs
;

247 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

248  
__ªs
;

250 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

251  
__x
;

253 
	}
}

256 
__MATH_INLINE
 

257 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

259 #ifde‡
__AVX__


260 
__ªs
;

261 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

262  
__ªs
;

264 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

265  
__x
;

267 
	}
}

268 
__MATH_INLINE
 

269 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

271 #ifde‡
__AVX__


272 
__ªs
;

273 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

274  
__ªs
;

276 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

277  
__x
;

279 
	}
}

282 
	g__END_NAMESPACE_C99


285 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


286 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


287 
__BEGIN_NAMESPACE_C99


290 
__MATH_INLINE
 

291 
__NTH
 (
	$röt
 (
__x
))

293 
__ªs
;

298 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

299  
__ªs
;

300 
	}
}

301 
__MATH_INLINE
 

302 
__NTH
 (
	$rötf
 (
__x
))

304 
__ªs
;

309 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

310  
__ªs
;

311 
	}
}

313 #ifde‡
__USE_ISOC99


315 
__MATH_INLINE
 

316 
__NTH
 (
	$√¨byöt
 (
__x
))

318 
__ªs
;

323 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

324  
__ªs
;

325 
	}
}

326 
__MATH_INLINE
 

327 
__NTH
 (
	$√¨byötf
 (
__x
))

329 
__ªs
;

334 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

335  
__ªs
;

336 
	}
}

339 
	g__END_NAMESPACE_C99


342 
__BEGIN_NAMESPACE_STD


344 
__MATH_INLINE
 

345 
__NTH
 (
	$˚û
 (
__x
))

347 
__ªs
;

348 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

349  
__ªs
;

350 
	}
}

351 
__END_NAMESPACE_STD


353 
__BEGIN_NAMESPACE_C99


354 
__MATH_INLINE
 

355 
__NTH
 (
	$˚ûf
 (
__x
))

357 
__ªs
;

358 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

359  
__ªs
;

360 
	}
}

361 
__END_NAMESPACE_C99


363 
__BEGIN_NAMESPACE_STD


365 
__MATH_INLINE
 

366 
__NTH
 (
	$Êo‹
 (
__x
))

368 
__ªs
;

369 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

370  
__ªs
;

371 
	}
}

372 
__END_NAMESPACE_STD


374 
__BEGIN_NAMESPACE_C99


375 
__MATH_INLINE
 

376 
__NTH
 (
	$Êo‹f
 (
__x
))

378 
__ªs
;

379 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

380  
__ªs
;

381 
	}
}

382 
	g__END_NAMESPACE_C99


390 #i‡!
deföed
 
__SSE2_MATH__
 && !deföed 
__x86_64__


391 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

392 && 
deföed
 
	g__OPTIMIZE__
)

396 #unde‡
m©h_îrh™dlög


405 #ifde‡
__USE_ISOC99


406 
	#__ölöe_m©h›
(
func
, 
›
) \

407 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

408 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

409 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

410 
	#__ölöe_m©h›NP
(
func
, 
›
) \

411 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

412 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

413 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

415 
	#__ölöe_m©h›
(
func
, 
›
) \

416 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

417 
	#__ölöe_m©h›NP
(
func
, 
›
) \

418 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

421 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

422 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

423 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

424 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

427 #ifde‡
__USE_ISOC99


428 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

429 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

430 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

431 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

432 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

433 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

434 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

435 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

437 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

438 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

439 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

440 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

443 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

444 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

445 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

447 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

448 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

450 
Êﬂt_ty≥
 
__ªsu…
; \

451 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

452  
__ªsu…
; \

453 }

	)

456 #ifde‡
__USE_ISOC99


457 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

458 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

459 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

460 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

461 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

462 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

463 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

464 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

465 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

466 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

468 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

469 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

470 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

471 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

472 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

473 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

474 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

476 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

477 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

478 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

479 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

480 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

482 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

483 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

484 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

485 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

486 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

487 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

488 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

489 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

490 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

491 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

492 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

493 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

496 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

497 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

498 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

500 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

501 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

503 
code
; \

504 }

	)

507 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

508 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

509 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

511 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

512 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

514 
code
; \

515 }

	)

517 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

518 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

519 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

521 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

522 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

523 
Êﬂt_ty≥
 
¨g3
)) \

525 
code
; \

526 }

	)

530 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


534 #ifde‡
__FAST_MATH__


535 #ifde‡
__USE_GNU


536 
	#__söcos_code
 \

537 
__co§
; \

538 
__sör
; \

539 
__swtmp
; \

540 
__asm
 
__vﬁ©ûe__
 \

555 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

556 *
__söx
 = 
__sör
; \

557 *
__cosx
 = 
__co§


	)

559 
__MATH_INLINE
 

560 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

562 
__söcos_code
;

563 
	}
}

565 
__MATH_INLINE
 

566 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

568 
__söcos_code
;

569 
	}
}

571 
__MATH_INLINE
 

572 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

574 
__söcos_code
;

575 
	}
}

582 #i‡
__GNUC_PREREQ
 (3, 5)

583 
	#__expm1_code
 \

584 
__ãmp
; \

585 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

586  
__ãmp
 ? __ãm∞: 
__x


	)

588 
	#__expm1_code
 \

589 
__vÆue
; \

590 
__exp⁄ít
; \

591 
__ãmp
; \

592 
__asm
 
__vﬁ©ûe__
 \

601 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

602 
__asm
 
__vﬁ©ûe__
 \

604 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

605 
__ãmp
 -= 1.0; \

606 
__ãmp
 +
__vÆue
; \

607  
__ãmp
 ? __ãm∞: 
__x


	)

609 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

611 #i‡
	`__GNUC_PREREQ
 (3, 4)

612 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

614 
	#__exp_code
 \

615 
__vÆue
; \

616 
__exp⁄ít
; \

617 
__asm
 
__vﬁ©ûe__
 \

625 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

626 
__vÆue
 += 1.0; \

627 
__asm
 
__vﬁ©ûe__
 \

629 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

630  
__vÆue


	)

631 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

632 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

636 #i‡!
	`__GNUC_PREREQ
 (3, 5)

637 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

638 
__vÆue
; \

639 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

640 
__asm
 
__vﬁ©ûe__
 \

642 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

643  
__vÆue
)

648 #i‡
	`__GNUC_PREREQ
 (3, 4)

649 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

650  
	$__buûtö_©™2l
 (
__y
, 
__x
))

652 
	#__©™2_code
 \

653 
__vÆue
; \

654 
__asm
 
__vﬁ©ûe__
 \

656 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

657  
__vÆue


	)

658 #ifde‡
__FAST_MATH__


659 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

661 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

665 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

666 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

667 
__vÆue
; \

668 
__asm
 
__vﬁ©ûe__
 \

673 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

674  
__vÆue
)

678 #ifde‡
__FAST_MATH__


679 #i‡!
	`__GNUC_PREREQ
 (3,3)

680 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

681 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

682 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

684 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

688 #i‡
	`__GNUC_PREREQ
 (2, 8)

689 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

690 #ifde‡
__USE_ISOC99


691 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

692 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

694 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

696 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

697 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

700 #ifde‡
__FAST_MATH__


701 #i‡!
	`__GNUC_PREREQ
 (3, 4)

703 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

705 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

707 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

710 #i‡!
	`__GNUC_PREREQ
 (3, 5)

711 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

713 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

714 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

717 #i‡!
	`__GNUC_PREREQ
 (3, 4)

718 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

722 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

723 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

724 { 
__xld
: 
__x
 
	}
}; \

725 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

726 
	g__n
.
	g__xi
[1] = 0x80000000; \

727 
	g__n
.
	g__xi
[0] = 0; \

728  
	g__n
.
	g__xld
)

731 #ifde‡
__FAST_MATH__


733 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

734 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

735  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

737 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

738 
__ex
 = 
	`__ex∂
 (
__x
); \

739  0.5 * (
__ex
 + 1.0 / __ex))

741 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

742 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

743  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

746 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

747 
__vÆue
; \

748 
__ign‹e
; \

749 
__cw
; \

750 
__cwtmp
; \

751 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

759 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

760 "=m" (
__cw
) \

761 : "0" (
__x
)); \

762  
__vÆue
)

764 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

765 
__vÆue
; \

766 
__ign‹e
; \

767 
__cw
; \

768 
__cwtmp
; \

769 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

777 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

778 "=m" (
__cw
) \

779 : "0" (
__x
)); \

780  
__vÆue
)

782 #ifde‡
__FAST_MATH__


783 
	#__ldexp_code
 \

784 
__vÆue
; \

785 
__asm
 
__vﬁ©ûe__
 \

787 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

788  
__vÆue


	)

790 
__MATH_INLINE
 

791 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

793 
__ldexp_code
;

794 
	}
}

799 #ifde‡
__USE_ISOC99


801 #ifde‡
__FAST_MATH__


802 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

806 
	#__M_SQRT2
 1.41421356237309504880L

	)

808 #i‡!
	`__GNUC_PREREQ
 (3, 5)

809 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

810 
__vÆue
; \

811 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

812 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

814 
__asm
 
__vﬁ©ûe__
 \

818 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

819  
__vÆue
)

824 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

825 
__y
 = 
	`__Áb¶
 (
__x
); \

826  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

827 * 
	$__sgn1l
 (
__x
)))

829 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

830  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

832 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

833 
__y
 = 
	`__Áb¶
 (
__x
); \

834  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

837 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

838  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

840 #i‡!
	`__GNUC_PREREQ
 (3, 5)

841 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

842 
__vÆue
; \

843 
__junk
; \

844 
__asm
 
__vﬁ©ûe__
 \

846 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

847  
__vÆue
)

853 #ifde‡
__USE_ISOC99


854 #ifde‡
__FAST_MATH__


856 #i‡!
	`__GNUC_PREREQ
 (3, 5)

857 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

860 
__MATH_INLINE
 

861 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

863 
__ldexp_code
;

864 
	}
}

866 
__MATH_INLINE
 

867 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

869 
__ldexp_code
;

870 
	}
}

872 
__ölöe_m©h›NP
 (
röt
, "frndint")

875 
	#__Ãöt_code
 \

876 
__Ãöåes
; \

877 
__asm__
 
__vﬁ©ûe__
 \

879 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

880  
__Ãöåes


	)

881 
__MATH_INLINE
 

882 
__NTH
 (
	$Ãötf
 (
__x
))

884 
__Ãöt_code
;

885 
	}
}

886 
__MATH_INLINE
 

887 
__NTH
 (
	$Ãöt
 (
__x
))

889 
__Ãöt_code
;

890 
	}
}

891 
__MATH_INLINE
 

892 
__NTH
 (
	$Ãöé
 (
__x
))

894 
__Ãöt_code
;

895 
	}
}

896 #unde‡
__Ãöt_code


898 
	#__Œröt_code
 \

899 
__Œröåes
; \

900 
__asm__
 
__vﬁ©ûe__
 \

902 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

903  
__Œröåes


	)

904 
__exãnsi⁄__


905 
__MATH_INLINE
 

906 
__NTH
 (
	$Œrötf
 (
__x
))

908 
__Œröt_code
;

909 
	}
}

910 
__exãnsi⁄__


911 
__MATH_INLINE
 

912 
__NTH
 (
	$Œröt
 (
__x
))

914 
__Œröt_code
;

915 
	}
}

916 
__exãnsi⁄__


917 
__MATH_INLINE
 

918 
__NTH
 (
	$Œröé
 (
__x
))

920 
__Œröt_code
;

921 
	}
}

922 #unde‡
__Œröt_code


927 #ifde‡
__USE_MISC


929 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

930 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

931 
__vÆue
; \

932 
__˛obbîed
; \

933 
__asm
 
__vﬁ©ûe__
 \

938 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

939  
__vÆue
)

944 
__MATH_INLINE
 

945 
__NTH
 (
	$__föôe
 (
__x
))

947  (
__exãnsi⁄__


948 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

950 
	}
}

955 #unde‡
__©™2_code


956 #ifde‡
__FAST_MATH__


957 #unde‡
__expm1_code


958 #unde‡
__exp_code


959 #unde‡
__söcos_code


966 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


967 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

968 
__ölöe_m©hcode2_
 (, 
__õì754_©™2l
, 
__y
, 
__x
,

969 
__vÆue
;

970 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

971 : "Ò" (
__vÆue
)

972 : "0" (
__x
), "u" (
__y
) : "st(1)");

973  
__vÆue
;)

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #ifde‡
__USE_POSIX


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #ifde‡
__USE_POSIX


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_INLINE_u«lig√d
 1

	)

27 
	#_HAVE_STRING_ARCH_memp˝y
 1

	)

31 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

32 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

33 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

34 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

35 || 
deföed
 
	g__ßndybridge__
 || deföed 
	g__haswñl__
 \

36 || 
deföed
 
	g__b⁄√Œ__
 || deföed 
	g__sûvîm⁄t__
 \

37 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

38 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

39 || 
deföed
 
	g__amdÁm10__
 || deföed 
	g__bdvî1__
 \

40 || 
deföed
 
	g__bdvî2__
 || deföed 
	g__bdvî3__
 \

41 || 
deföed
 
	g__bdvî4__
 || deföed 
	g__btvî1__
 \

42 || 
deföed
 
	g__btvî2__
)

46 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

47 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

49 #i‚de‡
__STRING_INLINE


50 #i‚de‡
__exã∫_ölöe


51 
	#__STRING_INLINE
 
ölöe


	)

53 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

58 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

59 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

60 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

62 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

63 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

64 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

65 | ((c⁄° *Ë(
§c
))[
idx
])

	)

69 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

70 
	#mem˝y
(
de°
, 
§c
, 
n
) \

71 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

72 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

73 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

74 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

75 ((
n
) == 0 \

76 ? (
de°
) \

77 : (((
n
) % 4 == 0) \

78 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

79 : (((
n
) % 2 == 0) \

80 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

81 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

83 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

84 
size_t
 
__n
);

86 
__STRING_INLINE
 *

87 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

89 
__d0
, 
__d1
;

90 *
__tmp
 = 
__de°
;

91 
__asm__
 
__vﬁ©ûe__


99 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

100 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

102  
__de°
;

103 
	}
}

105 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

106 
size_t
 
__n
);

108 
__STRING_INLINE
 *

109 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

111 
__d0
, 
__d1
;

112 *
__tmp
 = 
__de°
;

113 
__asm__
 
__vﬁ©ûe__


126 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

127 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

129  
__de°
;

130 
	}
}

132 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

134 
__STRING_INLINE
 *

135 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

137 
__d0
, 
__d1
, 
__d2
;

138 *
__tmp
 = 
__de°
;

139 
__asm__
 
__vﬁ©ûe__


150 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

151 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

152 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

153 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

155  
__de°
;

156 
	}
}

158 
	#_HAVE_STRING_ARCH_memmove
 1

	)

159 #i‚de‡
_FORCE_INLINES


162 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

164 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

165 
	`__asm__
 ("memmove");

167 
__STRING_INLINE
 *

168 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

170 
__d0
, 
__d1
, 
__d2
;

171 *
__tmp
 = 
__de°
;

172 i‡(
__de°
 < 
__§c
)

173 
__asm__
 
__vﬁ©ûe__


176 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

177 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

178 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

179 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

181 
__asm__
 
__vﬁ©ûe__


187 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

188 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

189 : "0" (
__n
), "1" (__¿+ (c⁄° *Ë
__§c
),

190 "2" (
__n
 + (*Ë
__tmp
),

191 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

192  
__de°
;

193 
	}
}

197 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

198 #i‚de‡
_FORCE_INLINES


199 #i‚de‡
__PIC__


201 
__STRING_INLINE
 

202 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

204 
__d0
, 
__d1
, 
__d2
;

205 
__ªs
;

206 
__asm__
 
__vﬁ©ûe__


214 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

215 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

216 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

217 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

219  
__ªs
;

220 
	}
}

225 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

226 
	#_USE_STRING_ARCH_mem£t
 1

	)

227 
	#mem£t
(
s
, 
c
, 
n
) \

228 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

229 ? ((
n
) == 1 \

230 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

231 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

232 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

233 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

234 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

235 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

236 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

237 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

238 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

240 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

241 *((*Ë
__s
Ë(Ë(
c
); \

242 
__s
; })

	)

244 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

245 ({ *
__s
 = (
s
); \

247 
__ui
; \

248 
__usi
; \

249 
__uc
; \

250 } *
__u
 = 
__s
; \

251 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

257 i‡((
n
) == 3 || (n) >= 5) \

258 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

261 
n
) \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__ui
 = 
__c
; \

268 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

270 
__u
->
__ui
 = 
__c
; \

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

273 
__u
->
__usi
 = (Ë
__c
; \

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

275 
__u
->
__uc
 = (Ë
__c
; \

279 
__u
->
__ui
 = 
__c
; \

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__usi
 = (Ë
__c
; \

292 
__u
->
__ui
 = 
__c
; \

293 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__uc
 = (Ë
__c
; \

305 
__u
->
__ui
 = 
__c
; \

306 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

308 
__u
->
__ui
 = 
__c
; \

309 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

311 
__u
->
__ui
 = 
__c
; \

312 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

314 
__u
->
__ui
 = 
__c
; \

319 
__s
; })

	)

321 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

322 (((
n
) % 4 == 0) \

323 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

324 
n
) \

325 : (((
n
) % 2 == 0) \

326 ? 
	`__mem£t_c˙_by2
 (
s
, \

327 ((Ë((Ë(
c
))) * 0x01010101,\

328 
n
) \

329 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

331 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

332 
size_t
 
__n
);

334 
__STRING_INLINE
 *

335 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

337 *
__tmp
 = 
__s
;

338 
__d0
;

339 #ifde‡
__i686__


340 
__asm__
 
__vﬁ©ûe__


343 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

344 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

345 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

348 
__asm__
 
__vﬁ©ûe__


354 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359  
__s
;

360 
	}
}

362 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

363 
size_t
 
__n
);

365 
__STRING_INLINE
 *

366 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

368 
__d0
, 
__d1
;

369 *
__tmp
 = 
__s
;

370 #ifde‡
__i686__


371 
__asm__
 
__vﬁ©ûe__


375 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

376 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

377 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

380 
__asm__
 
__vﬁ©ûe__


386 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

387 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

388 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

391  
__s
;

392 
	}
}

394 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

395 (((
n
) % 4 == 0) \

396 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

397 : (((
n
) % 2 == 0) \

398 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

399 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

401 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

403 
__STRING_INLINE
 *

404 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

406 *
__tmp
 = 
__s
;

407 
__d0
;

408 
__asm__
 
__vﬁ©ûe__


418 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

419 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

420 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

422  
__s
;

423 
	}
}

425 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

427 
__STRING_INLINE
 *

428 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

430 
__d0
, 
__d1
;

431 *
__tmp
 = 
__s
;

432 
__asm__
 
__vﬁ©ûe__


443 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

444 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

445 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

447  
__s
;

448 
	}
}

452 
	#_HAVE_STRING_ARCH_memchr
 1

	)

453 #i‚de‡
_FORCE_INLINES


454 
__STRING_INLINE
 *

455 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

457 
__d0
;

458 #ifde‡
__i686__


459 
__d1
;

461 *
__ªs
;

462 i‡(
__n
 == 0)

463  
NULL
;

464 #ifde‡
__i686__


465 
__asm__
 
__vﬁ©ûe__


469 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

470 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

471 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

474 
__asm__
 
__vﬁ©ûe__


480 : "=D" (
__ªs
), "=&c" (
__d0
)

481 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

482 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

485  
__ªs
 - 1;

486 
	}
}

489 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

490 #i‚de‡
_FORCE_INLINES


491 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

493 
__STRING_INLINE
 *

494 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

496 
__d0
;

497 #ifde‡
__i686__


498 
__d1
;

500 *
__ªs
;

501 i‡(
__n
 == 0)

502  
NULL
;

503 #ifde‡
__i686__


504 
__asm__
 
__vﬁ©ûe__


510 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

511 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

512 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

515 
__asm__
 
__vﬁ©ûe__


522 : "=D" (
__ªs
), "=&c" (
__d0
)

523 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

524 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

527  
__ªs
;

528 
	}
}

529 #ifde‡
__USE_GNU


530 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

535 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

536 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

538 #i‚de‡
_FORCE_INLINES


539 
__STRING_INLINE
 *

540 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

542 
__d0
;

543 *
__ªs
;

544 
__asm__
 
__vﬁ©ûe__


547 : "=D" (
__ªs
), "=&c" (
__d0
)

548 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

549 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

551  
__ªs
 - 1;

552 
	}
}

553 #ifde‡
__USE_GNU


554 
__STRING_INLINE
 *

555 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

557  
	`__øwmemchr
 (
__s
, 
__c
);

558 
	}
}

564 
	#_HAVE_STRING_ARCH_°æí
 1

	)

565 
	#°æí
(
°r
) \

566 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

567 ? 
	`__buûtö_°æí
 (
°r
) \

568 : 
	`__°æí_g
 (
°r
)))

	)

569 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

571 
__STRING_INLINE
 
size_t


572 
	$__°æí_g
 (c⁄° *
__°r
)

574 
__dummy
;

575 c⁄° *
__tmp
 = 
__°r
;

576 
__asm__
 
__vﬁ©ûe__


582 : "Ù" (
__tmp
), "=&q" (
__dummy
)

583 : "0" (
__°r
),

584 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

586  
__tmp
 - 
__°r
 - 1;

587 
	}
}

591 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

592 
	#°r˝y
(
de°
, 
§c
) \

593 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

594 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

595 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

596 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

597 (c⁄° *Ë(
§c
), \

598 
	`°æí
 (
§c
) + 1)) \

599 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

601 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

602 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

604 
__ui
; \

605 
__usi
; \

606 
__uc
; \

607 
__c
; \

608 } *
__u
 = (*Ë
__de°
; \

609 
§˛í
) \

612 
__u
->
__uc
 = '\0'; \

615 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

618 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

619 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

620 
__u
->
__uc
 = '\0'; \

623 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__uc
 = '\0'; \

631 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

632 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

633 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

636 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

637 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

638 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

640 
__u
->
__uc
 = '\0'; \

643 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

645 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

648 (*Ë
__de°
; }))

	)

650 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

652 
__STRING_INLINE
 *

653 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

655 *
__tmp
 = 
__de°
;

656 
__dummy
;

657 
__asm__
 
__vﬁ©ûe__


666 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

667 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

668 : "0" (
__§c
), "1" (
__tmp
),

669 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

671  
__de°
;

672 
	}
}

675 #ifde‡
__USE_GNU


676 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

678 
	#__°p˝y
(
de°
, 
§c
) \

679 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

680 ? (
	`°æí
 (
§c
) + 1 <= 8 \

681 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

682 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

683 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

684 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

685 ((
§˛í
) % 4 == 0 \

686 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

687 : ((
§˛í
) % 2 == 0 \

688 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

689 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

692 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

694 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

695 (
	`__exãnsi⁄__
 ({ union { \

696 
__ui
; \

697 
__usi
; \

698 
__uc
; \

699 
__c
; \

700 } *
__u
 = (*Ë(
de°
); \

701 
§˛í
) \

704 
__u
->
__uc
 = '\0'; \

707 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

708 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

711 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

713 
__u
->
__uc
 = '\0'; \

716 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

717 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

720 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

721 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

722 
__u
->
__uc
 = '\0'; \

725 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

726 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

727 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

728 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

731 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

732 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

733 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

734 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

735 
__u
->
__uc
 = '\0'; \

738 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

739 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

740 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

741 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

744 (*Ë
__u
; }))

	)

746 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

747 
size_t
 
__§˛í
);

749 
__STRING_INLINE
 *

750 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

752 *
__tmp
 = 
__de°
;

753 
__d0
, 
__d1
;

754 
__asm__
 
__vﬁ©ûe__


762 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

763 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

765  
__tmp
;

766 
	}
}

768 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

769 
size_t
 
__§˛í
);

771 
__STRING_INLINE
 *

772 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

774 *
__tmp
 = 
__de°
;

775 
__d0
, 
__d1
;

776 
__asm__
 
__vﬁ©ûe__


789 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

790 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

791 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

792 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

794  
__tmp
 + 2;

795 
	}
}

797 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

798 
size_t
 
__§˛í
);

800 
__STRING_INLINE
 *

801 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

803 
__d0
, 
__d1
;

804 *
__tmp
 = 
__de°
;

805 
__asm__
 
__vﬁ©ûe__


816 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

817 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

818 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

819 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

821  
__tmp
;

822 
	}
}

824 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

826 
__STRING_INLINE
 *

827 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

829 *
__tmp
 = 
__de°
;

830 
__dummy
;

831 
__asm__
 
__vﬁ©ûe__


840 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

841 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

842 : "0" (
__§c
), "1" (
__tmp
),

843 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

845  
__tmp
 - 1;

846 
	}
}

851 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

852 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

853 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

854 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

855 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

856 (c⁄° *Ë(
§c
), 
n
) \

857 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

858 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

859 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

860 (((
§˛í
) % 4 == 0) \

861 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

862 : (((
§˛í
) % 2 == 0) \

863 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

864 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

866 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

867 
size_t
 
__§˛í
, size_à
__n
);

869 
__STRING_INLINE
 *

870 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

872 *
__tmp
 = 
__de°
;

873 
__dummy1
, 
__dummy2
;

874 
__asm__
 
__vﬁ©ûe__


882 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

883 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

884 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

885 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

887 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

888  
__de°
;

889 
	}
}

891 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

892 
size_t
 
__§˛í
, size_à
__n
);

894 
__STRING_INLINE
 *

895 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

897 *
__tmp
 = 
__de°
;

898 
__dummy1
, 
__dummy2
;

899 
__asm__
 
__vﬁ©ûe__


912 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

913 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

914 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

915 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

917 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

918  
__de°
;

919 
	}
}

921 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

922 
size_t
 
__§˛í
, size_à
__n
);

924 
__STRING_INLINE
 *

925 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

927 
__d0
, 
__d1
;

928 *
__tmp
 = 
__de°
;

929 
__asm__
 
__vﬁ©ûe__


940 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

941 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

942 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

943 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

945 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

946  
__de°
;

947 
	}
}

949 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

950 
size_t
 
__n
);

952 
__STRING_INLINE
 *

953 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

955 *
__tmp
 = 
__de°
;

956 
__dummy
;

957 i‡(
__n
 > 0)

958 
__asm__
 
__vﬁ©ûe__


974 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

975 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

978  
__de°
;

979 
	}
}

983 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

984 
	#°rˇt
(
de°
, 
§c
) \

985 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

986 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

987 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

989 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

990 
size_t
 
__§˛í
);

992 
__STRING_INLINE
 *

993 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

995 #ifde‡
__i686__


996 
__d0
;

997 *
__tmp
;

998 
__asm__
 
__vﬁ©ûe__


1000 : "=D" (
__tmp
), "=&c" (
__d0
),

1001 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1002 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

1003 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1005 --
__tmp
;

1007 *
__tmp
 = 
__de°
;

1008 
__asm__
 
__vﬁ©ûe__


1014 : "Ù" (
__tmp
),

1015 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1016 : "0" (
__tmp
),

1017 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1020 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1021  
__de°
;

1022 
	}
}

1024 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1026 
__STRING_INLINE
 *

1027 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1029 *
__tmp
 = 
__de°
;

1030 
__dummy
;

1031 
__asm__
 
__vﬁ©ûe__


1044 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1045 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1046 : "1" (
__tmp
), "2" (
__§c
),

1047 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1049  
__de°
;

1050 
	}
}

1054 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1055 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1056 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1057 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1058 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1059 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1060 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1061 (c⁄° *Ë(
§c
), \

1062 (
n
)Ë0, 
__de°
)) \

1063 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1065 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1066 
size_t
 
__n
);

1068 
__STRING_INLINE
 *

1069 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1071 *
__tmp
 = 
__de°
;

1072 
__dummy
;

1073 #ifde‡
__i686__


1074 
__asm__
 
__vﬁ©ûe__


1088 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1089 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1092 --
__tmp
;

1093 
__asm__
 
__vﬁ©ûe__


1110 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1111 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1114  
__de°
;

1115 
	}
}

1119 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1120 
	#°rcmp
(
s1
, 
s2
) \

1121 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1122 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1123 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1124 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1125 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1126 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1127 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1128 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1129 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1130 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s1
)) \

1133 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1134 (c⁄° *Ë(
s2
), \

1135 
	`°æí
 (
s1
))) \

1136 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1137 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1138 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1139 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1140 (c⁄° *Ë(
s2
), \

1141 
	`°æí
 (
s2
)) \

1142 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1143 (c⁄° *Ë(
s2
), \

1144 
	`°æí
 (
s2
))) \

1145 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1147 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1148 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1149 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1151 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1152 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1155 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1156 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1159 
__ªsu…
; }))

	)

1161 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1162 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1163 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1164 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1166 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1167 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1170 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1171 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1174 
__ªsu…
; }))

	)

1176 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1177 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1178 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1179 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1181 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1182 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1184 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1185 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1186 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1189 
__ªsu…
; }))

	)

1191 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1193 
__STRING_INLINE
 

1194 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1196 
__ªs
;

1197 
__asm__
 
__vﬁ©ûe__


1213 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1214 : "1" (
__s1
), "2" (
__s2
),

1215 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1216 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1218  
__ªs
;

1219 
	}
}

1223 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1224 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1225 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1226 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1227 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1228 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1229 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1231 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1232 
size_t
 
__n
);

1234 
__STRING_INLINE
 

1235 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1237 
__ªs
;

1238 
__asm__
 
__vﬁ©ûe__


1257 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1258 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1259 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1260 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1262  
__ªs
;

1263 
	}
}

1267 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1268 
	#_USE_STRING_ARCH_°rchr
 1

	)

1269 
	#°rchr
(
s
, 
c
) \

1270 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1271 ? ((
c
) == '\0' \

1272 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1273 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1274 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1276 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1278 
__STRING_INLINE
 *

1279 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1281 
__d0
;

1282 *
__ªs
;

1283 
__asm__
 
__vﬁ©ûe__


1293 : "Ù" (
__ªs
), "=&a" (
__d0
)

1294 : "0" (
__s
), "1" (
__c
),

1295 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1297  
__ªs
;

1298 
	}
}

1300 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1302 
__STRING_INLINE
 *

1303 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1305 
__d0
;

1306 *
__ªs
;

1307 
__asm__
 
__vﬁ©ûe__


1318 : "Ù" (
__ªs
), "=&a" (
__d0
)

1319 : "0" (
__s
), "1" (
__c
),

1320 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1322  
__ªs
;

1323 
	}
}

1327 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1328 
	#__°rch∫ul
(
s
, 
c
) \

1329 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1330 ? ((
c
) == '\0' \

1331 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1332 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1333 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1335 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1337 
__STRING_INLINE
 *

1338 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1340 
__d0
;

1341 *
__ªs
;

1342 
__asm__
 
__vﬁ©ûe__


1352 : "Ù" (
__ªs
), "=&a" (
__d0
)

1353 : "0" (
__s
), "1" (
__c
),

1354 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1356  
__ªs
;

1357 
	}
}

1359 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1361 
__STRING_INLINE
 *

1362 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1364 
__d0
;

1365 *
__ªs
;

1366 
__asm__
 
__vﬁ©ûe__


1377 : "Ù" (
__ªs
), "=&a" (
__d0
)

1378 : "0" (
__s
), "1" (
__c
),

1379 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1381  
__ªs
;

1382 
	}
}

1383 #ifde‡
__USE_GNU


1384 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1388 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1390 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1391 
	#ödex
(
s
, 
c
) \

1392 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1393 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1394 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1399 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1400 
	#°ºchr
(
s
, 
c
) \

1401 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1402 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1403 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1405 #ifde‡
__i686__


1406 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1408 
__STRING_INLINE
 *

1409 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1411 
__d0
, 
__d1
;

1412 *
__ªs
;

1413 
__asm__
 
__vﬁ©ûe__


1421 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1422 : "0" (1), "1" (
__s
), "2" (
__c
),

1423 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1425  
__ªs
 - 1;

1426 
	}
}

1428 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1430 
__STRING_INLINE
 *

1431 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1433 
__d0
, 
__d1
;

1434 *
__ªs
;

1435 
__asm__
 
__vﬁ©ûe__


1444 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1445 : "0" (1), "1" (
__s
), "2" (
__c
),

1446 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1448  
__ªs
 - 1;

1449 
	}
}

1451 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1453 
__STRING_INLINE
 *

1454 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1456 
__d0
, 
__d1
;

1457 *
__ªs
;

1458 
__asm__
 
__vﬁ©ûe__


1468 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1469 : "0" (0), "1" (
__s
), "2" (
__c
),

1470 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1472  
__ªs
;

1473 
	}
}

1475 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1477 
__STRING_INLINE
 *

1478 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1480 
__d0
, 
__d1
;

1481 *
__ªs
;

1482 
__asm__
 
__vﬁ©ûe__


1493 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1494 : "0" (0), "1" (
__s
), "2" (
__c
),

1495 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1497  
__ªs
;

1498 
	}
}

1502 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1504 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1505 
	#rödex
(
s
, 
c
) \

1506 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1507 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1508 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1514 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1515 
	#°rc•n
(
s
, 
ªje˘
) \

1516 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1517 ? ((
ªje˘
)[0] == '\0' \

1518 ? 
	`°æí
 (
s
) \

1519 : ((
ªje˘
)[1] == '\0' \

1520 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1521 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1522 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1524 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1526 #i‚de‡
_FORCE_INLINES


1527 
__STRING_INLINE
 
size_t


1528 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1530 
__d0
;

1531 *
__ªs
;

1532 
__asm__
 
__vﬁ©ûe__


1541 : "Ù" (
__ªs
), "=&a" (
__d0
)

1542 : "0" (
__s
), "1" (
__ªje˘
),

1543 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1545  (
__ªs
 - 1Ë- 
__s
;

1546 
	}
}

1549 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1550 
size_t
 
__ªje˘_Àn
);

1552 
__STRING_INLINE
 
size_t


1553 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1555 
__d0
, 
__d1
, 
__d2
;

1556 c⁄° *
__ªs
;

1557 
__asm__
 
__vﬁ©ûe__


1568 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1569 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1571  (
__ªs
 - 1Ë- 
__s
;

1572 
	}
}

1574 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1575 #ifde‡
__PIC__


1577 
__STRING_INLINE
 
size_t


1578 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1580 
__d0
, 
__d1
, 
__d2
;

1581 c⁄° *
__ªs
;

1582 
__asm__
 
__vﬁ©ûe__


1599 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1600 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1602  (
__ªs
 - 1Ë- 
__s
;

1603 
	}
}

1605 
__STRING_INLINE
 
size_t


1606 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1608 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1609 c⁄° *
__ªs
;

1610 
__asm__
 
__vﬁ©ûe__


1624 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1625 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1628  (
__ªs
 - 1Ë- 
__s
;

1629 
	}
}

1635 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1636 
	#°r•n
(
s
, 
ac˚±
) \

1637 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1638 ? ((
ac˚±
)[0] == '\0' \

1639 ? ((Ë(
s
), 0) \

1640 : ((
ac˚±
)[1] == '\0' \

1641 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1642 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1643 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1645 #i‚de‡
_FORCE_INLINES


1646 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1648 
__STRING_INLINE
 
size_t


1649 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1651 
__d0
;

1652 *
__ªs
;

1654 
__asm__
 
__vﬁ©ûe__


1660 : "Ù" (
__ªs
), "=&q" (
__d0
)

1661 : "0" (
__s
), "1" (
__ac˚±
),

1662 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1664  (
__ªs
 - 1Ë- 
__s
;

1665 
	}
}

1668 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1669 
size_t
 
__ac˚±_Àn
);

1671 
__STRING_INLINE
 
size_t


1672 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1674 
__d0
, 
__d1
, 
__d2
;

1675 c⁄° *
__ªs
;

1676 
__asm__
 
__vﬁ©ûe__


1687 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1688 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1691 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1692 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1694  (
__ªs
 - 1Ë- 
__s
;

1695 
	}
}

1697 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1698 #ifde‡
__PIC__


1700 
__STRING_INLINE
 
size_t


1701 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1703 
__d0
, 
__d1
, 
__d2
;

1704 c⁄° *
__ªs
;

1705 
__asm__
 
__vﬁ©ûe__


1721 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1722 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1724  (
__ªs
 - 1Ë- 
__s
;

1725 
	}
}

1727 
__STRING_INLINE
 
size_t


1728 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1730 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1731 c⁄° *
__ªs
;

1732 
__asm__
 
__vﬁ©ûe__


1746 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1747 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1749  (
__ªs
 - 1Ë- 
__s
;

1750 
	}
}

1755 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1756 
	#°Ωbrk
(
s
, 
ac˚±
) \

1757 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1758 ? ((
ac˚±
)[0] == '\0' \

1759 ? ((Ë(
s
), (*) 0) \

1760 : ((
ac˚±
)[1] == '\0' \

1761 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1762 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1763 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1765 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1766 
size_t
 
__ac˚±_Àn
);

1768 
__STRING_INLINE
 *

1769 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1771 
__d0
, 
__d1
, 
__d2
;

1772 *
__ªs
;

1773 
__asm__
 
__vﬁ©ûe__


1788 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1789 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1791  
__ªs
;

1792 
	}
}

1794 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1795 #ifde‡
__PIC__


1797 
__STRING_INLINE
 *

1798 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1800 
__d0
, 
__d1
, 
__d2
;

1801 *
__ªs
;

1802 
__asm__
 
__vﬁ©ûe__


1823 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1824 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1826  
__ªs
;

1827 
	}
}

1829 
__STRING_INLINE
 *

1830 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1832 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1833 *
__ªs
;

1834 
__asm__
 
__vﬁ©ûe__


1853 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1854 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1856  
__ªs
;

1857 
	}
}

1862 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1863 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1864 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1865 ? ((
√edÀ
)[0] == '\0' \

1866 ? (
hay°ack
) \

1867 : ((
√edÀ
)[1] == '\0' \

1868 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1869 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1870 
	`°æí
 (
√edÀ
)))) \

1871 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1875 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1876 c⁄° 
__√edÀ
[],

1877 
size_t
 
__√edÀ_Àn
);

1879 
__STRING_INLINE
 *

1880 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1881 
size_t
 
__√edÀ_Àn
)

1883 
__d0
, 
__d1
, 
__d2
;

1884 *
__ªs
;

1885 
__asm__
 
__vﬁ©ûe__


1898 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1899 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1901  
__ªs
;

1902 
	}
}

1904 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1905 c⁄° *
__√edÀ
);

1906 #ifde‡
__PIC__


1908 
__STRING_INLINE
 *

1909 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1911 
__d0
, 
__d1
, 
__d2
;

1912 *
__ªs
;

1913 
__asm__
 
__vﬁ©ûe__


1932 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1933 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1934 "d" (
__√edÀ
)

1936  
__ªs
;

1937 
	}
}

1939 
__STRING_INLINE
 *

1940 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1942 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1943 *
__ªs
;

1944 
__asm__
 
__vﬁ©ûe__


1961 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1962 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1963 "b" (
__√edÀ
)

1965  
__ªs
;

1966 
	}
}

1972 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1973 #ifde‡
__i686__


1974 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1975 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1976 ? 
	`__buûtö_ffs
 (
w‹d
) \

1977 : ({ 
__˙t
, 
__tmp
; \

1978 
__asm__
 
__vﬁ©ûe__
 \

1981 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1982 : "rm" (
w‹d
), "1" (-1)); \

1983 
__˙t
 + 1; }))

	)

1985 #i‚de‡
ff¶


1986 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1991 #i‚de‡
_FORCE_INLINES


1992 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_INLINE_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_INLINE_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_INLINE_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_INLINE_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_INLINE_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #ifde‡
__USE_POSIX


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_MISC


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_XOPEN2K8


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 #i‡!
__GNUC_PREREQ
 (5,0)

23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

27 #i‚de‡
__˝lu•lus


31 #unde‡
mem˝y


32 #unde‡
memmove


33 #unde‡
mem£t


34 #unde‡
°rˇt


35 #unde‡
°r˝y


36 #unde‡
°∫ˇt


37 #unde‡
°∫˝y


38 #ifde‡
__USE_GNU


39 #unde‡
memp˝y


40 #unde‡
°p˝y


42 #ifde‡
__USE_MISC


43 #unde‡
bc›y


44 #unde‡
bzîo


49 
__f‹tify_fun˘i⁄
 *

50 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

51 
size_t
 
__Àn
))

53  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

54 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__f‹tify_fun˘i⁄
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__f‹tify_fun˘i⁄
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

82 #i‡!
	`__GNUC_PREREQ
 (5,0)

83 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

84 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

86 
	`__w¨n_mem£t_zîo_Àn
 ();

87  
__de°
;

90  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

91 
	}
}

93 #ifde‡
__USE_MISC


94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

100 
__f‹tify_fun˘i⁄
 

101 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

103 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

104 
	}
}

107 
__f‹tify_fun˘i⁄
 *

108 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

110  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

111 
	}
}

113 #ifde‡
__USE_GNU


114 
__f‹tify_fun˘i⁄
 *

115 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

117  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

118 
	}
}

122 
__f‹tify_fun˘i⁄
 *

123 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

124 
size_t
 
__Àn
))

126  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

127 
	}
}

130 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

131 
size_t
 
__de°Àn
Ë
__THROW
;

132 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

133 
size_t
 
__n
), 
°≤˝y
);

135 
__f‹tify_fun˘i⁄
 *

136 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

138 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

139 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

140  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

141  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

142 
	}
}

145 
__f‹tify_fun˘i⁄
 *

146 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

148  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

149 
	}
}

152 
__f‹tify_fun˘i⁄
 *

153 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

154 
size_t
 
__Àn
))

156  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

157 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 ((
˛ock_t
Ë1000000)

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

81 
	#CLOCK_TAI
 11

	)

84 
	#TIMER_ABSTIME
 1

	)

87 #ifde‡
__USE_GNU


88 
	~<bôs/timex.h
>

90 
__BEGIN_DECLS


93 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

95 
__END_DECLS


101 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_MISC


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


149 #unde‡
_DEFAULT_SOURCE


150 
	#_DEFAULT_SOURCE
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_ISOC11_SOURCE


160 
	#_ISOC11_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_DEFAULT_SOURCE


172 
	#_DEFAULT_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
))

184 #unde‡
_DEFAULT_SOURCE


185 
	#_DEFAULT_SOURCE
 1

	)

189 #i‡(
deföed
 
_ISOC11_SOURCE
 \

190 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

191 
	#__USE_ISOC11
 1

	)

195 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

196 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

197 
	#__USE_ISOC99
 1

	)

201 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

202 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

203 
	#__USE_ISOC95
 1

	)

210 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

211 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

212 
	#__USE_ISOCXX11
 1

	)

218 #ifde‡
_DEFAULT_SOURCE


219 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


220 
	#__USE_POSIX_IMPLICITLY
 1

	)

222 #unde‡
_POSIX_SOURCE


223 
	#_POSIX_SOURCE
 1

	)

224 #unde‡
_POSIX_C_SOURCE


225 
	#_POSIX_C_SOURCE
 200809L

	)

227 #i‡((!
deföed
 
__STRICT_ANSI__
 \

228 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

229 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

230 
	#_POSIX_SOURCE
 1

	)

231 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

232 
	#_POSIX_C_SOURCE
 2

	)

233 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

234 
	#_POSIX_C_SOURCE
 199506L

	)

235 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

236 
	#_POSIX_C_SOURCE
 200112L

	)

238 
	#_POSIX_C_SOURCE
 200809L

	)

240 
	#__USE_POSIX_IMPLICITLY
 1

	)

243 #i‡(
deföed
 
_POSIX_SOURCE
 \

244 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

245 || 
deföed
 
_XOPEN_SOURCE
)

246 
	#__USE_POSIX
 1

	)

249 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


250 
	#__USE_POSIX2
 1

	)

253 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

254 
	#__USE_POSIX199309
 1

	)

257 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

258 
	#__USE_POSIX199506
 1

	)

261 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

262 
	#__USE_XOPEN2K
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

270 
	#__USE_XOPEN2K8
 1

	)

271 #unde‡
_ATFILE_SOURCE


272 
	#_ATFILE_SOURCE
 1

	)

275 #ifdef 
_XOPEN_SOURCE


276 
	#__USE_XOPEN
 1

	)

277 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

278 
	#__USE_XOPEN_EXTENDED
 1

	)

279 
	#__USE_UNIX98
 1

	)

280 #unde‡
_LARGEFILE_SOURCE


281 
	#_LARGEFILE_SOURCE
 1

	)

282 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

283 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

284 
	#__USE_XOPEN2K8
 1

	)

285 
	#__USE_XOPEN2K8XSI
 1

	)

287 
	#__USE_XOPEN2K
 1

	)

288 
	#__USE_XOPEN2KXSI
 1

	)

289 #unde‡
__USE_ISOC95


290 
	#__USE_ISOC95
 1

	)

291 #unde‡
__USE_ISOC99


292 
	#__USE_ISOC99
 1

	)

295 #ifde‡
_XOPEN_SOURCE_EXTENDED


296 
	#__USE_XOPEN_EXTENDED
 1

	)

301 #ifde‡
_LARGEFILE_SOURCE


302 
	#__USE_LARGEFILE
 1

	)

305 #ifde‡
_LARGEFILE64_SOURCE


306 
	#__USE_LARGEFILE64
 1

	)

309 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

310 
	#__USE_FILE_OFFSET64
 1

	)

313 #i‡
deföed
 
_DEFAULT_SOURCE


314 
	#__USE_MISC
 1

	)

317 #ifdef 
_ATFILE_SOURCE


318 
	#__USE_ATFILE
 1

	)

321 #ifdef 
_GNU_SOURCE


322 
	#__USE_GNU
 1

	)

325 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


326 
	#__USE_REENTRANT
 1

	)

329 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

330 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

331 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

332 #ñi‡!
__GNUC_PREREQ
 (4, 1)

333 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


334 #ñi‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 #i‚de‡
__USE_FORTIFY_LEVEL


341 
	#__USE_FORTIFY_LEVEL
 0

	)

346 
	~<°dc-¥edef.h
>

354 #unde‡
__GNU_LIBRARY__


355 
	#__GNU_LIBRARY__
 6

	)

359 
	#__GLIBC__
 2

	)

360 
	#__GLIBC_MINOR__
 23

	)

362 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

363 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

366 #i‚de‡
__ASSEMBLER__


367 #i‚de‡
_SYS_CDEFS_H


368 
	~<sys/cdefs.h
>

373 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


374 
	#__USE_LARGEFILE
 1

	)

375 
	#__USE_LARGEFILE64
 1

	)

381 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

382 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

383 && 
deföed
 
	g__exã∫_ölöe


384 
	#__USE_EXTERN_INLINES
 1

	)

392 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_MISC


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

40 
	#__DECL_SIMD_sö


	)

41 
	#__DECL_SIMD_söf


	)

42 
	#__DECL_SIMD_söl


	)

44 
	#__DECL_SIMD_söcos


	)

45 
	#__DECL_SIMD_söcosf


	)

46 
	#__DECL_SIMD_söco¶


	)

48 
	#__DECL_SIMD_log


	)

49 
	#__DECL_SIMD_logf


	)

50 
	#__DECL_SIMD_logl


	)

52 
	#__DECL_SIMD_exp


	)

53 
	#__DECL_SIMD_expf


	)

54 
	#__DECL_SIMD_ex∂


	)

56 
	#__DECL_SIMD_pow


	)

57 
	#__DECL_SIMD_powf


	)

58 
	#__DECL_SIMD_powl


	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

109 
	#__PTHREAD_SPINS
 0, 0

	)

111 
	m__nu£rs
;

112 
__exãnsi⁄__
 union

116 
	m__e•ös
;

117 
	m__ñisi⁄
;

118 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

119 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ñisi⁄


	)

120 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

121 } 
	m__ñisi⁄_d©a
;

122 
__±hªad_¶i°_t
 
	m__li°
;

125 } 
	m__d©a
;

126 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

127 
	m__Æign
;

128 } 
	t±hªad_muãx_t
;

132 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

133 
	m__Æign
;

134 } 
	t±hªad_muãx©å_t
;

143 
	m__lock
;

144 
	m__fuãx
;

145 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

146 
__exãnsi⁄__
 
	m__wakeup_£q
;

147 
__exãnsi⁄__
 
	m__wokí_£q
;

148 *
	m__muãx
;

149 
	m__nwaôîs
;

150 
	m__brﬂdˇ°_£q
;

151 } 
	m__d©a
;

152 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

153 
__exãnsi⁄__
 
	m__Æign
;

154 } 
	t±hªad_c⁄d_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

159 
	m__Æign
;

160 } 
	t±hªad_c⁄d©å_t
;

164 
	t±hªad_key_t
;

168 
	t±hªad_⁄˚_t
;

171 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


176 #ifde‡
__x86_64__


179 
	m__lock
;

180 
	m__ƒ_ªadîs
;

181 
	m__ªadîs_wakeup
;

182 
	m__wrôî_wakeup
;

183 
	m__ƒ_ªadîs_queued
;

184 
	m__ƒ_wrôîs_queued
;

185 
	m__wrôî
;

186 
	m__sh¨ed
;

187 sig√d 
	m__rwñisi⁄
;

188 #ifde‡ 
__ILP32__


189 
	m__∑d1
[3];

190 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

192 
	m__∑d1
[7];

193 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

195 
	m__∑d2
;

198 
	m__Êags
;

199 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

200 } 
	m__d©a
;

204 
	m__lock
;

205 
	m__ƒ_ªadîs
;

206 
	m__ªadîs_wakeup
;

207 
	m__wrôî_wakeup
;

208 
	m__ƒ_ªadîs_queued
;

209 
	m__ƒ_wrôîs_queued
;

212 
	m__Êags
;

213 
	m__sh¨ed
;

214 sig√d 
	m__rwñisi⁄
;

215 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

216 
	m__∑d2
;

217 
	m__wrôî
;

218 } 
	m__d©a
;

220 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

221 
	m__Æign
;

222 } 
	t±hªad_rwlock_t
;

226 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

227 
	m__Æign
;

228 } 
	t±hªad_rwlock©å_t
;

232 #ifde‡
__USE_XOPEN2K


234 vﬁ©ûê
	t±hªad_•ölock_t
;

241 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

242 
	m__Æign
;

243 } 
	t±hªad_b¨rõr_t
;

247 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

248 
	m__Æign
;

249 } 
	t±hªad_b¨rõøâr_t
;

253 #i‚de‡
__x86_64__


255 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_SETOFFSET
 0x0100

	)

64 
	#ADJ_MICRO
 0x1000

	)

65 
	#ADJ_NANO
 0x2000

	)

66 
	#ADJ_TICK
 0x4000

	)

67 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

68 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

71 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

72 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

73 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

74 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

75 
	#MOD_STATUS
 
ADJ_STATUS


	)

76 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

77 
	#MOD_CLKB
 
ADJ_TICK


	)

78 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

79 
	#MOD_TAI
 
ADJ_TAI


	)

80 
	#MOD_MICRO
 
ADJ_MICRO


	)

81 
	#MOD_NANO
 
ADJ_NANO


	)

85 
	#STA_PLL
 0x0001

	)

86 
	#STA_PPSFREQ
 0x0002

	)

87 
	#STA_PPSTIME
 0x0004

	)

88 
	#STA_FLL
 0x0008

	)

90 
	#STA_INS
 0x0010

	)

91 
	#STA_DEL
 0x0020

	)

92 
	#STA_UNSYNC
 0x0040

	)

93 
	#STA_FREQHOLD
 0x0080

	)

95 
	#STA_PPSSIGNAL
 0x0100

	)

96 
	#STA_PPSJITTER
 0x0200

	)

97 
	#STA_PPSWANDER
 0x0400

	)

98 
	#STA_PPSERROR
 0x0800

	)

100 
	#STA_CLOCKERR
 0x1000

	)

101 
	#STA_NANO
 0x2000

	)

102 
	#STA_MODE
 0x4000

	)

103 
	#STA_CLK
 0x8000

	)

106 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

107 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

184 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

185 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

186 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

187 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

189 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

190 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

203 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

204 
	#__©åibuã__
(
xyz
Ë

	)

210 #i‡
__GNUC_PREREQ
 (2,96)

211 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

213 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (4, 3)

219 
	#__©åibuã_Æloc_size__
(
∑øms
) \

220 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

222 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

307 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

309 
	#__Æways_ölöe
 
__ölöe


	)

314 #i‡
__GNUC_PREREQ
 (4,3)

315 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

317 
	#__©åibuã_¨tificül__


	)

329 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

330 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

331 || 
deföed
 
__GNUC_GNU_INLINE__
)))

332 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


333 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

334 
	#__exã∫_Æways_ölöe
 \

335 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

337 
	#__exã∫_ölöe
 
__ölöe


	)

338 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #ifde‡
__exã∫_Æways_ölöe


343 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

348 #i‡
__GNUC_PREREQ
 (4,3)

349 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

350 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

357 #i‡!
__GNUC_PREREQ
 (2,8)

358 
	#__exãnsi⁄__


	)

362 #i‡!
__GNUC_PREREQ
 (2,92)

363 
	#__ª°ri˘


	)

369 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


370 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

372 #ifde‡
__GNUC__


373 
	#__ª°ri˘_¨r


	)

375 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

376 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

379 
	#__ª°ri˘_¨r


	)

384 #i‡
__GNUC__
 >= 3

385 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

386 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

388 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

389 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

392 #i‡(!
deföed
 
_N‹ëu∫
 \

393 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

394 && !
	$__GNUC_PREREQ
 (4,7))

395 #i‡
	`__GNUC_PREREQ
 (2,8)

396 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

398 
	#_N‹ëu∫


	)

402 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

403 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

404 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

405 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

406 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

407 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

410 
	~<bôs/w‹dsize.h
>

412 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


413 
	#__LDBL_COMPAT
 1

	)

414 #ifde‡
__REDIRECT


415 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

416 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

417 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

418 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

419 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

420 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

421 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

422 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

423 
	#__LDBL_REDIR_DECL
(
«me
) \

424 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

425 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

426 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

427 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

428 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

431 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


432 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

433 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

434 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

435 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

436 
	#__LDBL_REDIR_DECL
(
«me
)

	)

437 #ifde‡
__REDIRECT


438 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

439 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

440 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
94
3266
/home/alwin/Documents/Programming/ChessStuff/Borland5/board.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/colors.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/colors.h
/home/alwin/Documents/Programming/ChessStuff/Borland5/display.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/drag.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/edit.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/edit.h
/home/alwin/Documents/Programming/ChessStuff/Borland5/evalu.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/externs.h
/home/alwin/Documents/Programming/ChessStuff/Borland5/info.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/info.h
/home/alwin/Documents/Programming/ChessStuff/Borland5/movgen.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/pvalue.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/pvalue.h
/home/alwin/Documents/Programming/ChessStuff/Borland5/saverest.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/search.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/small.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/talk.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/timelib.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/wcdefs.h
/home/alwin/Documents/Programming/ChessStuff/Borland5/wchess.cpp
/home/alwin/Documents/Programming/ChessStuff/Borland5/wchess.h
/home/alwin/Documents/Programming/ChessStuff/Borland5/wchess.rc
/usr/include/ctype.h
/usr/include/math.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
colors.h
edit.h
externs.h
info.h
pvalue.h
wcdefs.h
wchess.h
/usr/include/alloca.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/math-finite.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/wordsize.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/wctype.h
