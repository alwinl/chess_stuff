<?xml version="1.0" encoding="UTF-8" ?>
<results>
    <error file="appmodel.cpp" line="75" id="passedByValue" severity="style" msg="Parameter &apos;file_name&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="pods.h" line="35" id="syntaxError" severity="error" msg="Code &apos;std::string&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="timeinputter.h" line="46" id="passedByValue" severity="style" msg="Parameter &apos;title&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="timeinputter.h" line="46" id="passedByValue" severity="style" msg="Parameter &apos;prompt&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessboard.cpp" line="260" id="passedByValue" severity="style" msg="Parameter &apos;FEN_string&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessedit.h" line="32" id="syntaxError" severity="error" msg="Code &apos;classChessEdit:&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="chessinfo.h" line="41" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.h" line="42" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.h" line="43" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.h" line="44" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.h" line="45" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.h" line="46" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.h" line="47" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.h" line="48" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.h" line="49" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.h" line="50" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.cpp" line="180" id="passedByValue" severity="style" msg="Parameter &apos;text&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="chessinfo.h" line="36" id="syntaxError" severity="error" msg="Code &apos;classChessInfo:&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="chessview.h" line="42" id="syntaxError" severity="error" msg="Code &apos;classChessWindow:&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="timeinputter.h" line="28" id="syntaxError" severity="error" msg="Code &apos;classTimeInputter{&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="piecevalues.h" line="34" id="syntaxError" severity="error" msg="Code &apos;classPieceValues{&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="pods.cpp" line="172" id="passedByValue" severity="style" msg="Parameter &apos;layout&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="resources.c" line="0" id="purgedConfiguration" severity="style" msg="The configuration &apos;_MSC_VER;_WIN64&apos; was not checked because its code equals another one." />
    <error file="resources.c" line="0" id="purgedConfiguration" severity="style" msg="The configuration &apos;__ELF__&apos; was not checked because its code equals another one." />
    <error file="testapplication.h" line="26" id="syntaxError" severity="error" msg="Code &apos;classTestApplication{&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="testcolourchooser.h" line="34" id="syntaxError" severity="error" msg="Code &apos;classTestColourChooser:&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="testfentranslator.h" line="28" id="syntaxError" severity="error" msg="Code &apos;classTestFENTranslator:&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="testpiecevalues.cpp" line="34" id="uninitMemberVar" severity="style" msg="Member variable &apos;MockPieceValues::the_values&apos; is not initialized in the constructor." />
    <error file="testpiecevalues.h" line="35" id="syntaxError" severity="error" msg="Code &apos;classTestPieceValues:&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="teststhalvemove.h" line="30" id="syntaxError" severity="error" msg="Code &apos;classTestSTHalveMove:&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="testtimeinputter.h" line="34" id="syntaxError" severity="error" msg="Code &apos;classTestTimeInputter:&apos; is invalid C code. Use --std or --language to configure the language." />
    <error file="resources.c" line="4205" id="unusedFunction" severity="style" msg="The function &apos;chess_get_resource&apos; is never used." />
    <error file="pods.cpp" line="134" id="unusedFunction" severity="style" msg="The function &apos;gamestate_to_ForsythEdwards&apos; is never used." />
    <error file="chessapplication.cpp" line="144" id="unusedFunction" severity="style" msg="The function &apos;on_activate&apos; is never used." />
    <error file="chessboard.cpp" line="182" id="unusedFunction" severity="style" msg="The function &apos;on_button_press_event&apos; is never used." />
    <error file="chessboard.cpp" line="202" id="unusedFunction" severity="style" msg="The function &apos;on_button_release_event&apos; is never used." />
    <error file="chessboard.cpp" line="76" id="unusedFunction" severity="style" msg="The function &apos;on_configure_event&apos; is never used." />
    <error file="chessboard.cpp" line="95" id="unusedFunction" severity="style" msg="The function &apos;on_draw&apos; is never used." />
    <error file="chessboard.cpp" line="226" id="unusedFunction" severity="style" msg="The function &apos;on_motion_notify_event&apos; is never used." />
    <error file="pods.cpp" line="29" id="unusedFunction" severity="style" msg="The function &apos;operator&lt;&apos; is never used." />
    <error file="testcolourchooser.cpp" line="56" id="unusedFunction" severity="style" msg="The function &apos;operator==&apos; is never used." />
    <error id="missingIncludeSystem" severity="style" msg="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config." />
</results>
